{"compress":true,"commitItems":[["d2f56ffe-9721-4978-b4a5-0f9c342bc46a",1552399587892,"### Java中的集合类有哪些。区别是什么，如何保证安全性。\n\n#### Collection、Map:\n\n> Collection 分为两种类，List、Set，区别是 List 有序&可重复，而 Set 无序&不可重复。\n> Map 为key-value的对应关系，key不可以重复\n\n#### List\n> List 接口是有序可重复的 Collection 接口实现，可以通过索引来访问 List 中的元素；\n> 实现类 LinkedList、ArrayList、Vector；\n\n> LinkedList 允许元素为null，并且提供了get、remove、insert方法在 LinkedList 的首部或尾部操作数据；\n> 所以LinkedList可以作为堆栈（stack）、队列（queue）、双向队列（deque）；\n> 需要注意的是，LinkedList 不是线程安全的，需要自己实现数据的访问同步，常用的解决方法是在创建List的时候构造一个同步List：\n> List list = Collection.synchronizedList(new LinkedList());\n\n> ArrayList 允许元素为null，同样也不是线程安全的，需要自己实现数据的同步访问。\n> ArrayList 实例有一个容量 Capacity ，也就是用于存储元素的数组的大，从JDK1.8看到默认的出事容量为10，这个容量会随着不断添加新的元素而自动增加，\n> 会通过调用 grow 方法对数组扩容量，使用的方法是，Arrays.copyof(elementData,newCapacity)进行数据拷贝，并设定新的容量。\n> List list = Collection.synchronizedList(new LinkedList());\n\n> Vector 与 ArrayList 类似都是使用数组实现的，默认容量为10，但是 Vector 是线程安全的。所以由 Vector 创建的 Iterator 被使用的时候，\n> 另一个线程改变 Vector 状态，会抛出 ConcurrentModificationException，因此必须捕获这个异常。\n\n> 使用场景：\n> 当需要快速插入、删除元素，应该使用 LinkedList，如果需要快速随机访问元素，应该使用 ArrayList。\n> 如果是单个线程使用，需要效率更更高。\n> 如果是多线程同时操作一个类，因该使用线程安全的类。\n> 使用的时候尽量的使用接口类声明，例如：List。目的是考虑到以后业务变成，由ArrayList 替换成了LinkedList，减少代码的修改。\n\n> 总结 ArrayList & LinkedList\n> - ArrayList 是基于动态数组的数据结构，LinkedList是基于链表的数据结构；\n> - 随机访问数据，get和set，ArrayList更优于 LinkedList ，因为 LinkedList 是链表结构，需要移动指针，效率更低；\n> - 对于新增和删除操作：\n    如果只是对单条数据插入或删除，ArrayList 速度更快些。\n    如果是批量随机的插入或删除数据，LinkedList 速度更快些。\n    原因是 ArrayList 每插入一条数据就要移动插入点及后面的所有数据，效率更低，而 LinkedList 只需要替换插入点的前后指针引用即可完成操作；\n\n> 总结 Vector 和 ArrayList\n> - Vector 是线程同步的，所以是线程安全的，而 ArrayList 是线程异步的，不是线程安全的。通过源码看到，Vector 在操作的方法前使用 synchronized 进行同步操作\n> - 默认情况下，在进行添加元素操作的时候，如果元素数目大于当前的集合数组的长度时，Vector 增长率为目前数组的 100% ，而 ArrayList 为 50%，同时 Vector 在创建时支持指定增长容量\n> - 如果查找一个指定位置的数据， Vector 和 ArrayList 的使用时间是相同的O(1)。但移动一个指定未知的数据使用的时间是 O(n-1),n为总长度，这个时候就会考虑使用 LinkedList ，因为它使用的时间为O(1),而查询指定位置数据使用的时间为O(i)\n> - ArrayList 和 Vector 都是采用数组的方式进行存储的，且数组元素数量大于实际存储的数据，以便增加或插入，可以直接通过索引访问元素。\n> - Vector 由于使用了 synchronized 方法所以性能上会比 ArrayList 差一些，LinkedList 使用的是双链表实现的存储，按照序号索引数据可以进行向前或向后遍历，但是插入数据时只需要记录当前元素的前后项即可，所以插入速度更快些。\n\n#### Set\n> Set 接口是无序不可重复 Collection 接口实现，\n> 实现类有，HashSet、TreeSet\n\n> HashSet 无序，不可重复，可以存储null，是通过哈希算法来实现防止重复的，存放元素也是key-value的形式，可以通过迭代器遍历获取数据；\n> 不是线程安全的。\n\n> TreeSet 有序，不可重复，不可以存储null，相对于 HashSet 提供了排序方法，TreeSet 是基于 TreeMap 实现的，底层数据结构是：二叉树。\n> 不是线程安全的。\n\n\n#### Map\n> key-value 形式存在，key不能重复。\n> 实现类有，HashMap、TreeMap、LinkedHashMap、Hashtable\n\n> HashMap 无序的，根据key的HashCode值存储数据，根据键直接获取它对应的值，具有很快的访问速度，遍历时获取的数据顺序是随机的。\n> 因为键不可以重复，所以 HashMap 只允许记录一条 key 为 null 的数据，不限制 value 为 null 的数据。\n> 使用 Node数组+链表+恭嘿书的数据结构实现的。\n> 如果 key 是自定义类的话，需要实现 hashCode() 和 equals() 方法实现。\n> 不是线程安全的。\n> 可以使用 Collection.synchronizedMap(hashMap)来达到同步的效果\n\n> Hashtable 与 HashMap 特性相似，不同的地方 Hashtable 是线程安全的，支持线程同步，任一时刻只有一个线程能写 Hashtable ,\n> 因此导致效率比较差，继承自 Dictionary 类。同时也不允许记录，key 或 value 为 null 的数据。\n> 线程安全\n\n> ConcurrentHashMap 是线程安全的，实现原理如下：\n> 使用锁分离思想，只锁住一个node，而锁住的Node之前的操作是基于在 volatile 和 CAS算法 之上无锁并且线程安全的；\n> CAS 是一种算法，基本思想就是不断的去比较当前内存中的变量值与指定的一个变量值是否相等，如果相等则接受，否则拒绝。\n\n> LinkedHashMap 具有HashMap全部特性，不同的是，记录了插入数据的顺序，在使用 Iterator 遍历 LinkedHashMap 时，先得到的记录肯定是先插入的，速度比 HashMap 慢;\n\n> TreeMap 实现了 SortMap 接口，能够把保存的记录根据键排序，默认是按键值的升序排序，也可以指定比较器；\n> 当使用 Iterator 遍历 TreeMap 时，得到的记录是排序后的，不允许 kye 为 null\n> 不是线程不安全\n\n> 总结\n> - 当在Map中插入、删除、定位元素，HashMap 速度比较快，因为是无序的，通过 HashCode 定位；\n> - 如果需要自然然排序或自定义排序，TreeMap 是最好的选择，因为它实现了 SortMap 默认按照key升序排序；\n> - 如果需要输出数据与输入时候相同，LinkedHashMap 是比较好的选择。\n\n\n### 为什么使用线程池？常见的线程池有哪些？线程池关键参数？解决什么问题？有什么业务场景？如果超出了线程池最大数量会发什么？\n\n#### 为什么使用线程池？\n```\nnew Thread():频繁地为每一个任务创建一个线程，缺乏统一管理，降低性能，并且容易出现问题。\n\n线程池:\n- 可以对多个线程统一管理 ，避免资源竞争出现问题；\n- 对线程进行复用，线程执行完任务后不会立刻销毁，而会等待另外的任务，这样可以减少创建、销毁、以及GC调用。\n- Java 提供了 ExecutorService 线程池的 API，可以创建多种功能不一样的线程池，使用方便。\n```\n#### 常见的线程池有哪些？ 线程池关键参数？\n##### 1、ThreadPoolExecutor 基本线程\n使用这个类创建线程池，构造方法参数如下\n```java\npublic ThreadPoolExecutor(int corePoolSize,\n                          int maximumPoolSize,\n                          long keepAliveTime,\n                          TimeUnit unit,\n                          BlockingQueue<Runnable> workQueue,\n                          ThreadFactory threadFactory) {\n        ...\n    }\n```\n- corePoolSize：线程池中的核心线程数量。\n- maximumPoolSize：线程池中最大线程数量。\n- keepAliveTime：非核心线程空闲存活时间，如果任务很多，每个任务执行时间很短，可以调大这个数值，有助于提高线程利用率。\n- unit:keepAliveTime 单位。\n- workQueue：任务队列。如果任务队列超出了这个长度才会开启非核心线程。\n- threadFactory：线程工厂，可用于设置线程名字等，一般可以不设置这个。\n\n#### 如果超出了线程池最大数（maximumPoolSize）会发什么？\n> 如果线程池中的线程超过了这个数值，则拒绝执行该任务，并抛出异常 RejectedExecutionException \n\n##### 2、FixedThreadPool 可重用固定线程数\n> Executors 中的创建方法\n> 特点：参数为核心线程数，只有核心线程，没有非核心线程，并且阻塞队列没有边界限制\n```java\n public static ExecutorService newFixedThreadPool(int nThreads, ThreadFactory threadFactory) {\n        return new ThreadPoolExecutor(nThreads, nThreads,\n                                      0L, TimeUnit.MILLISECONDS,\n                                      new LinkedBlockingQueue<Runnable>(),\n                                      threadFactory);\n    }\n```\n\n##### 3、CachedThreadPool 按需创建\n> Executors 中的创建方法\n> 特点：没有核心线程，只有非核心线程，并且每个非核心线程空闲等待的时间为60秒，采用SynchronousQueue队列；\n> 由于没有设置最大线程数限制，如果提交速度大于执行速度，则会一直创建新的线程，需要注意，应该采取措施调整两边的速度，因为太多的线程会影响性能；\n\n```java\npublic static ExecutorService newCachedThreadPool() {\n        return new ThreadPoolExecutor(0, Integer.MAX_VALUE,\n                                      60L, TimeUnit.SECONDS,\n                                      new SynchronousQueue<Runnable>());\n    }\n```\n\n\n安卓应用间可以进行通讯的方式有哪些，有什么区别。\n\n安卓广播机制有哪些，区别是什么。\n\nJava中的集合类有哪些。区别是什么，如何保证安全性。\n\nAndroid的集合类有哪些？如何保证安全性，有什么好处。\n\n做过哪些安卓性能优化？\n\n如何检测应用卡顿，如何优化？\n\n造成安卓oom的原因有哪些？如何处理。\n\nRxJava的实现机制，如何处理背压。\n\nRetureFate实现原理\n\n对现在存在的Glide还有哪些优化方案？\n\n安卓中的内存泄漏如何解决，为什么会造成内存泄漏？\n\n如何检测内存泄漏？\n\n点击桌面应用图标之后发什么什么，回调了哪些方法。\n\njava中的lock相关。\n\nActivity  与 Fragment 相关生命周期对照\n\n能不能试用Applaction启动一个Activity为什么不能？\n\nAMS，PMS，WMS\n\n文件存储，分别使用的场景，SP是线程安全的么？是进程安全的么？如何保证安全性",[[1552399583974,["KotlinD@DESKTOP-JV8VAO0",[[1,38,"=="],[1,53,"=="]],[38,53],[38,57]]],[1552399586251,["KotlinD@DESKTOP-JV8VAO0",[[-1,38,"=="],[-1,55,"=="]],[38,57],[38,53]]],[1552399620172,["KotlinD@DESKTOP-JV8VAO0",[[-1,55,">"]],[55,56],[55,55]]],[1552399621042,["KotlinD@DESKTOP-JV8VAO0",[[-1,113,"> "]],[113,115],[113,113]]],[1552399626654,["KotlinD@DESKTOP-JV8VAO0",[[-1,36,"#"]],[36,37],[36,36]]],[1552399631115,["KotlinD@DESKTOP-JV8VAO0",[[-1,54," "]],[55,55],[54,54]]],[1552399631376,["KotlinD@DESKTOP-JV8VAO0",[[-1,53,"\n"]],[54,54],[53,53]]],[1552399633244,["KotlinD@DESKTOP-JV8VAO0",[[1,53,"  、"]],[53,53],[56,56]]],[1552399634095,["KotlinD@DESKTOP-JV8VAO0",[[-1,53,"  、"]],[56,56],[53,53]]],[1552399635203,["KotlinD@DESKTOP-JV8VAO0",[[1,53,"\n"]],[53,53],[54,54]]],[1552399638469,["KotlinD@DESKTOP-JV8VAO0",[[-1,35,"#"]],[35,36],[35,35]]],[1552399641448,["KotlinD@DESKTOP-JV8VAO0",[[-1,2,"#"]],[2,3],[2,2]]],[1552399644717,["KotlinD@DESKTOP-JV8VAO0",[[-1,0,"#"]],[1,2],[1,1]]],[1552399652021,["KotlinD@DESKTOP-JV8VAO0",[[-1,140,"##"]],[140,142],[140,140]]],[1552399659787,["KotlinD@DESKTOP-JV8VAO0",[[-1,146,">"]],[146,147],[146,146]]],[1552399661488,["KotlinD@DESKTOP-JV8VAO0",[[-1,199,"> "]],[199,201],[199,199]]],[1552399663354,["KotlinD@DESKTOP-JV8VAO0",[[-1,146," "]],[146,147],[146,146]]],[1552399762956,["KotlinD@DESKTOP-JV8VAO0",[[-1,232,"> LinkedList "]],[232,234],[232,232]]],[1552399764732,["KotlinD@DESKTOP-JV8VAO0",[[1,232,"\n"]],[231,231],[232,232]]],[1552399765673,["KotlinD@DESKTOP-JV8VAO0",[[1,232,"###"]],[232,232],[235,235]]],[1552399766441,["KotlinD@DESKTOP-JV8VAO0",[[-1,234,"#"]],[235,235],[234,234]]],[1552399767142,["KotlinD@DESKTOP-JV8VAO0",[[1,234," LinkedList "]],[234,234],[246,246]]],[1552399770814,["KotlinD@DESKTOP-JV8VAO0",[[-1,140," "]],[141,141],[140,140]]],[1552399772250,["KotlinD@DESKTOP-JV8VAO0",[[1,140," "]],[140,140],[141,141]]],[1552399776936,["KotlinD@DESKTOP-JV8VAO0",[[-1,306,"> "]],[306,307],[306,306]]],[1552399777732,["KotlinD@DESKTOP-JV8VAO0",[[-1,355,"> "]],[355,357],[355,355]]],[1552399778872,["KotlinD@DESKTOP-JV8VAO0",[[-1,425,"> "]],[425,427],[425,425]]],[1552399796073,["KotlinD@DESKTOP-JV8VAO0",[[-1,424,"\n"]],[425,425],[424,424]]],[1552399801221,["KotlinD@DESKTOP-JV8VAO0",[[1,424,"=="],[1,482,"=="]],[424,482],[424,486]]],[1552399810513,["KotlinD@DESKTOP-JV8VAO0",[[-1,490,"ArrayList "]],[490,500],[490,490]]],[1552399812278,["KotlinD@DESKTOP-JV8VAO0",[[1,488,"\n"]],[487,487],[488,488]]],[1552399814868,["KotlinD@DESKTOP-JV8VAO0",[[1,488,"## ArrayList "]],[488,488],[501,501]]],[1552399840569,["KotlinD@DESKTOP-JV8VAO0",[[-1,502,"> "]],[502,504],[502,502]]],[1552399841845,["KotlinD@DESKTOP-JV8VAO0",[[-1,538,"> "]],[538,540],[538,538]]],[1552399843348,["KotlinD@DESKTOP-JV8VAO0",[[-1,623,"> "]],[623,625],[623,623]]],[1552399844933,["KotlinD@DESKTOP-JV8VAO0",[[-1,704,"> "]],[704,706],[704,704]]],[1552399850453,["KotlinD@DESKTOP-JV8VAO0",[[-1,606,"随"]],[607,607],[606,606]]],[1552399851086,["KotlinD@DESKTOP-JV8VAO0",[[1,606,"随"]],[606,606],[607,607]]],[1552399853876,["KotlinD@DESKTOP-JV8VAO0",[[-1,621,"，"]],[622,622],[621,621]]],[1552399854221,["KotlinD@DESKTOP-JV8VAO0",[[1,621,"。"]],[621,621],[622,622]]],[1552399867763,["KotlinD@DESKTOP-JV8VAO0",[[1,704,"同步 "]],[704,704],[706,706]]],[1552399869398,["KotlinD@DESKTOP-JV8VAO0",[[1,706,"方式"]],[706,706],[708,708]]],[1552399871823,["KotlinD@DESKTOP-JV8VAO0",[[1,708,"："]],[708,708],[709,709]]],[1552399878241,["KotlinD@DESKTOP-JV8VAO0",[[-1,419,"List"],[1,423,"方式"]],[417,424],[422,422]]],[1552399882421,["KotlinD@DESKTOP-JV8VAO0",[[1,707,"=="],[1,766,"=="]],[707,766],[707,770]]],[1552399885523,["KotlinD@DESKTOP-JV8VAO0",[[-1,707,"=="],[-1,768,"=="]],[707,770],[707,766]]],[1552399890900,["KotlinD@DESKTOP-JV8VAO0",[[1,708,"=="],[1,766,"=="]],[708,766],[708,770]]],[1552399908749,["KotlinD@DESKTOP-JV8VAO0",[[1,648,"=="],[1,686,"=="]],[648,686],[648,690]]],[1552399910847,["KotlinD@DESKTOP-JV8VAO0",[[-1,648,"=="],[-1,688,"=="]],[648,690],[648,686]]],[1552399912223,["KotlinD@DESKTOP-JV8VAO0",[[1,686," "]],[686,686],[687,687]]],[1552399915124,["KotlinD@DESKTOP-JV8VAO0",[[1,648,"=="],[1,686,"=="]],[648,686],[648,690]]],[1552399921282,["KotlinD@DESKTOP-JV8VAO0",[[-1,779,"Vector "]],[779,786],[779,779]]],[1552399922521,["KotlinD@DESKTOP-JV8VAO0",[[1,777,"\n"]],[776,776],[777,777]]],[1552399923666,["KotlinD@DESKTOP-JV8VAO0",[[1,777,"￥#"]],[777,777],[779,779]]],[1552399924770,["KotlinD@DESKTOP-JV8VAO0",[[-1,777,"￥#"]],[779,779],[777,777]]],[1552399927080,["KotlinD@DESKTOP-JV8VAO0",[[1,777,"## Vector "]],[777,777],[787,787]]],[1552399929488,["KotlinD@DESKTOP-JV8VAO0",[[-1,788,"> "]],[788,790],[788,788]]],[1552399930637,["KotlinD@DESKTOP-JV8VAO0",[[-1,869,"> "]],[869,871],[869,869]]],[1552399936386,["KotlinD@DESKTOP-JV8VAO0",[[-1,868,"\n"]],[869,869],[868,868]]],[1552399942374,["KotlinD@DESKTOP-JV8VAO0",[[1,921," "]],[921,921],[922,922]]],[1552399975897,["KotlinD@DESKTOP-JV8VAO0",[[-1,889," C"],[1,891,"# c"]],[889,900],[901,901]]],[1552399976633,["KotlinD@DESKTOP-JV8VAO0",[[1,889," C"],[-1,889,"# c"]],[901,901],[889,900]]],[1552400027404,["KotlinD@DESKTOP-JV8VAO0",[[1,889,"=="],[1,922,"=="]],[889,922],[889,926]]],[1552400029202,["KotlinD@DESKTOP-JV8VAO0",[[-1,889,"=="],[-1,924,"=="]],[889,926],[889,922]]],[1552400032828,["KotlinD@DESKTOP-JV8VAO0",[[1,890,"=="],[1,921,"=="]],[890,921],[890,925]]],[1552400078782,["KotlinD@DESKTOP-JV8VAO0",[[-1,940,"> "],[1,942,"#"]],[940,942],[941,941]]],[1552400080019,["KotlinD@DESKTOP-JV8VAO0",[[1,941,"# "]],[941,941],[943,943]]],[1552400093627,["KotlinD@DESKTOP-JV8VAO0",[[-1,949,"> "],[1,951,"-"]],[949,951],[950,950]]],[1552400094660,["KotlinD@DESKTOP-JV8VAO0",[[1,950," "]],[950,950],[951,951]]],[1552400096288,["KotlinD@DESKTOP-JV8VAO0",[[-1,1010," "]],[1011,1011],[1010,1010]]],[1552400096594,["KotlinD@DESKTOP-JV8VAO0",[[1,1010,"-"]],[1010,1010],[1011,1011]]],[1552400097558,["KotlinD@DESKTOP-JV8VAO0",[[-1,1009,">-"]],[1011,1011],[1009,1009]]],[1552400099055,["KotlinD@DESKTOP-JV8VAO0",[[1,1009,"- "]],[1009,1009],[1011,1011]]],[1552400102169,["KotlinD@DESKTOP-JV8VAO0",[[-1,1030,">"],[1,1031,"-"]],[1030,1031],[1031,1031]]],[1552400103211,["KotlinD@DESKTOP-JV8VAO0",[[-1,1058,">"],[1,1059,"-"]],[1058,1059],[1059,1059]]],[1552400211762,["KotlinD@DESKTOP-JV8VAO0",[[-1,1133,"> "],[1,1135,"#"]],[1133,1133],[1134,1134]]],[1552400212426,["KotlinD@DESKTOP-JV8VAO0",[[1,1134,"## "]],[1134,1134],[1137,1137]]],[1552400214978,["KotlinD@DESKTOP-JV8VAO0",[[-1,1163,"> "]],[1163,1165],[1163,1163]]],[1552400216063,["KotlinD@DESKTOP-JV8VAO0",[[-1,1210,"> "]],[1210,1212],[1210,1210]]],[1552400217341,["KotlinD@DESKTOP-JV8VAO0",[[-1,1285,"> "]],[1285,1287],[1285,1285]]],[1552400227353,["KotlinD@DESKTOP-JV8VAO0",[[-1,1455,"> "],[1,1457,"#"]],[1455,1457],[1456,1456]]],[1552400228003,["KotlinD@DESKTOP-JV8VAO0",[[1,1456,"## "]],[1456,1456],[1459,1459]]],[1552400229875,["KotlinD@DESKTOP-JV8VAO0",[[-1,1457,"#"]],[1458,1458],[1457,1457]]],[1552400232136,["KotlinD@DESKTOP-JV8VAO0",[[-1,1480,"> "]],[1480,1482],[1480,1480]]],[1552400233426,["KotlinD@DESKTOP-JV8VAO0",[[-1,1576,"> "]],[1576,1578],[1576,1576]]],[1552400235298,["KotlinD@DESKTOP-JV8VAO0",[[-1,1681,"> "]],[1681,1683],[1681,1681]]],[1552400237707,["KotlinD@DESKTOP-JV8VAO0",[[-1,1820,"> "]],[1820,1822],[1820,1820]]],[1552400240385,["KotlinD@DESKTOP-JV8VAO0",[[-1,1895,"> "]],[1895,1897],[1895,1895]]],[1552400242948,["KotlinD@DESKTOP-JV8VAO0",[[-1,2028,"##"]],[2026,2028],[2026,2026]]],[1552400245415,["KotlinD@DESKTOP-JV8VAO0",[[-1,2033,"> "],[1,2035,"-"]],[2033,2035],[2034,2034]]],[1552400246106,["KotlinD@DESKTOP-JV8VAO0",[[1,2034," "]],[2034,2034],[2035,2035]]],[1552400249428,["KotlinD@DESKTOP-JV8VAO0",[[-1,2066,">"],[1,2067,"-"]],[2066,2068],[2068,2068]]],[1552400254925,["KotlinD@DESKTOP-JV8VAO0",[[-1,2090,"> "],[1,2092,"#"]],[2090,2092],[2091,2091]]],[1552400255495,["KotlinD@DESKTOP-JV8VAO0",[[1,2091,"###"]],[2091,2091],[2094,2094]]],[1552400256452,["KotlinD@DESKTOP-JV8VAO0",[[-1,2092,"##"]],[2094,2094],[2092,2092]]],[1552400256980,["KotlinD@DESKTOP-JV8VAO0",[[1,2092," "]],[2092,2092],[2093,2093]]],[1552400262299,["KotlinD@DESKTOP-JV8VAO0",[[-1,2092," "]],[2093,2093],[2092,2092]]],[1552400267672,["KotlinD@DESKTOP-JV8VAO0",[[1,2092," "]],[2092,2092],[2093,2093]]],[1552400269296,["KotlinD@DESKTOP-JV8VAO0",[[1,2101,"\n"]],[2101,2101],[2102,2102]]],[1552400272303,["KotlinD@DESKTOP-JV8VAO0",[[-1,2169,"> "]],[2169,2171],[2169,2169]]],[1552400275790,["KotlinD@DESKTOP-JV8VAO0",[[-1,2179,"> "],[1,2181,"#"]],[2179,2181],[2180,2180]]],[1552400276265,["KotlinD@DESKTOP-JV8VAO0",[[1,2180,"##"]],[2180,2180],[2182,2182]]],[1552400277142,["KotlinD@DESKTOP-JV8VAO0",[[-1,2181,"#"]],[2182,2182],[2181,2181]]],[1552400277226,["KotlinD@DESKTOP-JV8VAO0",[[1,2181," "]],[2181,2181],[2182,2182]]],[1552400279545,["KotlinD@DESKTOP-JV8VAO0",[[1,2190,"\n"]],[2190,2190],[2191,2191]]],[1552400285892,["KotlinD@DESKTOP-JV8VAO0",[[-1,2025,"\n"]],[2025,2025],[2024,2024]]],[1552400288416,["KotlinD@DESKTOP-JV8VAO0",[[1,2025,"- \n"]],[2024,2024],[2027,2027]]],[1552400289658,["KotlinD@DESKTOP-JV8VAO0",[[-1,2025,"- \n"]],[2027,2027],[2024,2024]]],[1552400290185,["KotlinD@DESKTOP-JV8VAO0",[[1,2025,"\n"]],[2024,2024],[2025,2025]]],[1552400294551,["KotlinD@DESKTOP-JV8VAO0",[[-1,2281,"##"]],[2280,2282],[2280,2280]]],[1552400296622,["KotlinD@DESKTOP-JV8VAO0",[[-1,2266,"> "]],[2266,2268],[2266,2266]]],[1552400330329,["KotlinD@DESKTOP-JV8VAO0",[[-1,30,"\n"]],[30,30],[29,29]]],[1552400332481,["KotlinD@DESKTOP-JV8VAO0",[[-1,49,"\n"]],[49,49],[48,48]]],[1552400344880,["KotlinD@DESKTOP-JV8VAO0",[[1,49,"- "]],[49,49],[51,51]]],[1552400348534,["KotlinD@DESKTOP-JV8VAO0",[[1,108,"- "]],[108,108],[110,110]]],[1552400362300,["KotlinD@DESKTOP-JV8VAO0",[[-1,62,"分为两种类，"]],[62,68],[62,62]]],[1552400363409,["KotlinD@DESKTOP-JV8VAO0",[[1,62,"："]],[62,62],[63,63]]],[1552400431380,["KotlinD@DESKTOP-JV8VAO0",[[1,231,"#"]],[231,231],[232,232]]],[1552400454013,["KotlinD@DESKTOP-JV8VAO0",[[1,143,"- "]],[143,143],[145,145]]],[1552400463198,["KotlinD@DESKTOP-JV8VAO0",[[1,197,"- "]],[197,197],[199,199]]],[1552400472581,["KotlinD@DESKTOP-JV8VAO0",[[1,249,"\n"]],[248,248],[249,249]]],[1552400474027,["KotlinD@DESKTOP-JV8VAO0",[[1,249,"- "]],[249,249],[251,251]]],[1552400489547,["KotlinD@DESKTOP-JV8VAO0",[[1,251,"不是縣城"]],[251,251],[255,255]]],[1552400491791,["KotlinD@DESKTOP-JV8VAO0",[[-1,251,"不是縣城"]],[255,255],[251,251]]],[1552400495227,["KotlinD@DESKTOP-JV8VAO0",[[1,251,"不是线程安全的"]],[251,251],[258,258]]],[1552400498263,["KotlinD@DESKTOP-JV8VAO0",[[1,259,"- \n"]],[258,258],[261,261]]],[1552400505944,["KotlinD@DESKTOP-JV8VAO0",[[1,261,"允许遇难诉"]],[261,261],[266,266]]],[1552400507350,["KotlinD@DESKTOP-JV8VAO0",[[-1,261,"允许遇难诉"]],[266,266],[261,261]]],[1552400515511,["KotlinD@DESKTOP-JV8VAO0",[[1,261,"有序的，可重复性"]],[261,261],[269,269]]],[1552400516049,["KotlinD@DESKTOP-JV8VAO0",[[-1,268,"性"]],[269,269],[268,268]]],[1552400517186,["KotlinD@DESKTOP-JV8VAO0",[[1,268,"元素"]],[268,268],[270,270]]],[1552400521591,["KotlinD@DESKTOP-JV8VAO0",[[-1,268,"元素"]],[270,270],[268,268]]],[1552400522258,["KotlinD@DESKTOP-JV8VAO0",[[1,268,"，"]],[268,268],[269,269]]],[1552400526592,["KotlinD@DESKTOP-JV8VAO0",[[1,265,"元素"]],[265,265],[267,267]]],[1552400529827,["KotlinD@DESKTOP-JV8VAO0",[[-1,263,"的，"]],[265,265],[263,263]]],[1552400530661,["KotlinD@DESKTOP-JV8VAO0",[[1,263,"、"]],[263,263],[264,264]]],[1552400531628,["KotlinD@DESKTOP-JV8VAO0",[[-1,264,"元"]],[264,264],[264,264]]],[1552400532440,["KotlinD@DESKTOP-JV8VAO0",[[-1,268,"，"]],[269,269],[268,268]]],[1552400533299,["KotlinD@DESKTOP-JV8VAO0",[[1,268,"、"]],[268,268],[269,269]]],[1552400539493,["KotlinD@DESKTOP-JV8VAO0",[[1,269,"允许null"]],[269,269],[275,275]]],[1552400539532,["KotlinD@DESKTOP-JV8VAO0",[[1,271," "]],[275,275],[276,276]]],[1552400541990,["KotlinD@DESKTOP-JV8VAO0",[[1,277,"- \n"]],[276,276],[279,279]]],[1552400562799,["KotlinD@DESKTOP-JV8VAO0",[[1,279,"提供了 get、remove、insert、方法在Lined"]],[279,279],[309,309]]],[1552400562837,["KotlinD@DESKTOP-JV8VAO0",[[1,304," "]],[309,309],[310,310]]],[1552400565951,["KotlinD@DESKTOP-JV8VAO0",[[1,310,"List首部"]],[310,310],[316,316]]],[1552400565990,["KotlinD@DESKTOP-JV8VAO0",[[1,314," "]],[316,316],[317,317]]],[1552400572133,["KotlinD@DESKTOP-JV8VAO0",[[1,317,"或尾部操作数据；"]],[317,317],[325,325]]],[1552400572320,["KotlinD@DESKTOP-JV8VAO0",[[1,326,"- \n"]],[325,325],[328,328]]],[1552400573834,["KotlinD@DESKTOP-JV8VAO0",[[-1,326,"- "]],[328,328],[326,326]]],[1552400574716,["KotlinD@DESKTOP-JV8VAO0",[[-1,326,"\n"]],[326,326],[325,325]]],[1552400575614,["KotlinD@DESKTOP-JV8VAO0",[[-1,324,"；"]],[325,325],[324,324]]],[1552400576107,["KotlinD@DESKTOP-JV8VAO0",[[1,325,"- \n"]],[324,324],[327,327]]],[1552400624797,["KotlinD@DESKTOP-JV8VAO0",[[1,258,"，自己"]],[258,258],[261,261]]],[1552400625262,["KotlinD@DESKTOP-JV8VAO0",[[-1,259,"自己"]],[261,261],[259,259]]],[1552400630586,["KotlinD@DESKTOP-JV8VAO0",[[1,259,"可以使用后"]],[259,259],[264,264]]],[1552400631025,["KotlinD@DESKTOP-JV8VAO0",[[-1,263,"后"]],[264,264],[263,263]]],[1552400636135,["KotlinD@DESKTOP-JV8VAO0",[[1,263," ==List list = Collection.synchronizedList(new LinkedList());=="]],[263,263],[326,326]]],[1552400649387,["KotlinD@DESKTOP-JV8VAO0",[[1,326," 保证线程安全性；"]],[326,326],[335,335]]],[1552400650105,["KotlinD@DESKTOP-JV8VAO0",[[-1,334,"；"]],[335,335],[334,334]]],[1552400654632,["KotlinD@DESKTOP-JV8VAO0",[[-1,574,"同步方式：==List list = Collection.synchronizedList(new LinkedList());=="]],[574,641],[574,574]]],[1552400668208,["KotlinD@DESKTOP-JV8VAO0",[[-1,512,"需要注意的是，LinkedList 不是线程安全的，需要自己实现数据的访问同步，常用的解决方法是在创建List的时候构造一个\n"]],[511,574],[511,511]]],[1552400686568,["KotlinD@DESKTOP-JV8VAO0",[[1,400,"，所以可以作为：堆栈（）"]],[400,400],[412,412]]],[1552400689812,["KotlinD@DESKTOP-JV8VAO0",[[1,411,"stack"]],[411,411],[416,416]]],[1552400695469,["KotlinD@DESKTOP-JV8VAO0",[[1,417,"、队列（）"]],[417,417],[422,422]]],[1552400701313,["KotlinD@DESKTOP-JV8VAO0",[[1,421,"queue "]],[421,421],[427,427]]],[1552400701407,["KotlinD@DESKTOP-JV8VAO0",[[1,353,"  "]],[427,427],[429,429]]],[1552400711252,["KotlinD@DESKTOP-JV8VAO0",[[-1,426,"   "]],[429,429],[426,426]]],[1552400768892,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552400768892,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552400713902,["KotlinD@DESKTOP-JV8VAO0",[[-1,426,"）"]],[427,427],[426,426]]],[1552400714809,["KotlinD@DESKTOP-JV8VAO0",[[1,426," ）"]],[426,426],[427,427]]],[1552400715490,["KotlinD@DESKTOP-JV8VAO0",[[-1,426," "]],[427,427],[426,426]]],[1552400716816,["KotlinD@DESKTOP-JV8VAO0",[[1,427," "]],[427,427],[428,428]]],[1552400752759,["KotlinD@DESKTOP-JV8VAO0",[[-1,427," "]],[428,428],[427,427]]],[1552400761536,["KotlinD@DESKTOP-JV8VAO0",[[1,427,"、双向队列（）"]],[427,427],[434,434]]],[1552400768209,["KotlinD@DESKTOP-JV8VAO0",[[1,433,"deque"]],[433,433],[438,438]]],[1552400772004,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552400772004,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552400771819,["KotlinD@DESKTOP-JV8VAO0",[[-1,440,"- \n允许元素为null，并且提供了get、remove、insert方法在 LinkedList 的首部或尾部操作数据；\n所以LinkedList可以作为堆栈（stack）、队列（queue）、双向队列（deque）；\n\n"]],[439,551],[439,439]]],[1552400776761,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552400776761,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552400774871,["KotlinD@DESKTOP-JV8VAO0",[[1,440,"- \n"]],[439,439],[442,442]]],[1552400776233,["KotlinD@DESKTOP-JV8VAO0",[[-1,440,"- "]],[442,442],[440,440]]],[1552400780338,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552400780338,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552400779678,["KotlinD@DESKTOP-JV8VAO0",[[1,443,"#"]],[443,443],[444,444]]],[1552400782339,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552400782339,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552400781751,["KotlinD@DESKTOP-JV8VAO0",[[1,456,"\n"]],[455,455],[456,456]]],[1552400784709,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552400784709,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552400784031,["KotlinD@DESKTOP-JV8VAO0",[[1,456,"- "]],[456,456],[458,458]]],[1552400844732,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552400844732,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552400799956,["KotlinD@DESKTOP-JV8VAO0",[[1,458,"不是线程安全的，可以使用 ===="]],[458,458],[473,473]]],[1552400806082,["KotlinD@DESKTOP-JV8VAO0",[[1,473,"List list "]],[473,473],[483,483]]],[1552400807539,["KotlinD@DESKTOP-JV8VAO0",[[1,485,"="]],[483,483],[484,484]]],[1552400817941,["KotlinD@DESKTOP-JV8VAO0",[[1,484," Concurent"]],[484,484],[494,494]]],[1552400819939,["KotlinD@DESKTOP-JV8VAO0",[[-1,484," Concurent"]],[494,494],[484,484]]],[1552400826897,["KotlinD@DESKTOP-JV8VAO0",[[1,484," Collection。"]],[484,484],[496,496]]],[1552400827424,["KotlinD@DESKTOP-JV8VAO0",[[-1,495,"。"]],[496,496],[495,495]]],[1552400828984,["KotlinD@DESKTOP-JV8VAO0",[[1,495,".sys"]],[495,495],[499,499]]],[1552400831117,["KotlinD@DESKTOP-JV8VAO0",[[-1,496,"sys"]],[499,499],[496,496]]],[1552400838467,["KotlinD@DESKTOP-JV8VAO0",[[1,496,"synchrono"]],[496,496],[505,505]]],[1552400840678,["KotlinD@DESKTOP-JV8VAO0",[[-1,504,"o"]],[505,505],[504,504]]],[1552400844615,["KotlinD@DESKTOP-JV8VAO0",[[1,504,"izedList"]],[504,504],[512,512]]],[1552400870964,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552400870964,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552400848445,["KotlinD@DESKTOP-JV8VAO0",[[1,512,"()"]],[512,512],[514,514]]],[1552400855473,["KotlinD@DESKTOP-JV8VAO0",[[1,513,"new LinkedList("]],[513,513],[528,528]]],[1552400858242,["KotlinD@DESKTOP-JV8VAO0",[[1,529,");"]],[528,528],[531,531]]],[1552400858282,["KotlinD@DESKTOP-JV8VAO0",[[-1,530,";"],[1,531,"；"]],[531,531],[531,531]]],[1552400859390,["KotlinD@DESKTOP-JV8VAO0",[[-1,530,"；"]],[531,531],[530,530]]],[1552400860197,["KotlinD@DESKTOP-JV8VAO0",[[1,530,"；"]],[530,530],[531,531]]],[1552400860733,["KotlinD@DESKTOP-JV8VAO0",[[-1,530,"；"]],[531,531],[530,530]]],[1552400863569,["KotlinD@DESKTOP-JV8VAO0",[[1,530,";"]],[530,530],[531,531]]],[1552400863608,["KotlinD@DESKTOP-JV8VAO0",[[-1,530,";"],[1,531,"；"]],[531,531],[531,531]]],[1552400865194,["KotlinD@DESKTOP-JV8VAO0",[[-1,530,"；"]],[531,531],[530,530]]],[1552400866124,["KotlinD@DESKTOP-JV8VAO0",[[1,530,";"]],[530,530],[531,531]]],[1552400866165,["KotlinD@DESKTOP-JV8VAO0",[[-1,530,";"],[1,531,"；"]],[531,531],[531,531]]],[1552400869656,["KotlinD@DESKTOP-JV8VAO0",[[-1,530,"；"]],[531,531],[530,530]]],[1552400886357,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552400886357,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552400885093,["KotlinD@DESKTOP-JV8VAO0",[[1,530,";"]],[530,530],[531,531]]],[1552400896094,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552400896094,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552400894009,["KotlinD@DESKTOP-JV8VAO0",[[1,533," 保证线程安全"]],[533,533],[540,540]]],[1552400897566,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552400897566,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552400897181,["KotlinD@DESKTOP-JV8VAO0",[[-1,333,"性"]],[334,334],[333,333]]],[1552400907877,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552400907877,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552400906025,["KotlinD@DESKTOP-JV8VAO0",[[1,540,"- \n"]],[539,539],[542,542]]],[1552400928175,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552400928175,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552400916922,["KotlinD@DESKTOP-JV8VAO0",[[1,542,"有序、元素可重复性"]],[542,542],[551,551]]],[1552400917204,["KotlinD@DESKTOP-JV8VAO0",[[-1,550,"性"]],[551,551],[550,550]]],[1552400925354,["KotlinD@DESKTOP-JV8VAO0",[[1,550,"、允许null"]],[550,550],[557,557]]],[1552400925394,["KotlinD@DESKTOP-JV8VAO0",[[1,553," "]],[557,557],[558,558]]],[1552400926764,["KotlinD@DESKTOP-JV8VAO0",[[1,559,"- \n"]],[558,558],[561,561]]],[1552400938708,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552400938708,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552400937830,["KotlinD@DESKTOP-JV8VAO0",[[-1,562,"允许元素为null，同样也不是线程安全的，需要自己实现数据的同步访问。\n"]],[561,597],[561,561]]],[1552400993564,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552400993564,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552400940402,["KotlinD@DESKTOP-JV8VAO0",[[1,439,"- \n"]],[438,438],[441,441]]],[1552400944380,["KotlinD@DESKTOP-JV8VAO0",[[1,441,"内部實現"]],[441,441],[445,445]]],[1552400944765,["KotlinD@DESKTOP-JV8VAO0",[[-1,443,"實現"]],[445,445],[443,443]]],[1552400956356,["KotlinD@DESKTOP-JV8VAO0",[[1,443,"实现使用的是数组，初始莫I人"]],[443,443],[457,457]]],[1552400956862,["KotlinD@DESKTOP-JV8VAO0",[[-1,454,"莫I人"]],[457,457],[454,454]]],[1552400960967,["KotlinD@DESKTOP-JV8VAO0",[[1,454,"默认场"]],[454,454],[457,457]]],[1552400961186,["KotlinD@DESKTOP-JV8VAO0",[[-1,456,"场"]],[457,457],[456,456]]],[1552400964952,["KotlinD@DESKTOP-JV8VAO0",[[1,456,"容积"]],[456,456],[458,458]]],[1552400965477,["KotlinD@DESKTOP-JV8VAO0",[[-1,456,"容积"]],[458,458],[456,456]]],[1552400969923,["KotlinD@DESKTOP-JV8VAO0",[[1,456,"容量为1"]],[456,456],[460,460]]],[1552400969963,["KotlinD@DESKTOP-JV8VAO0",[[1,459," "]],[460,460],[461,461]]],[1552400977874,["KotlinD@DESKTOP-JV8VAO0",[[1,461,"0，扩容时"]],[461,461],[466,466]]],[1552400978941,["KotlinD@DESKTOP-JV8VAO0",[[-1,465,"时"]],[466,466],[465,465]]],[1552400987902,["KotlinD@DESKTOP-JV8VAO0",[[1,465,"增长为原来的1"]],[465,465],[472,472]]],[1552400987942,["KotlinD@DESKTOP-JV8VAO0",[[1,471," "]],[472,472],[473,473]]],[1552400988084,["KotlinD@DESKTOP-JV8VAO0",[[1,473,"1"]],[473,473],[474,474]]],[1552400988758,["KotlinD@DESKTOP-JV8VAO0",[[-1,472,"11"]],[474,474],[472,472]]],[1552400992464,["KotlinD@DESKTOP-JV8VAO0",[[1,472,"2倍"]],[472,472],[474,474]]],[1552400992505,["KotlinD@DESKTOP-JV8VAO0",[[1,473," "]],[474,474],[475,475]]],[1552401000754,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552401000754,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552400994303,["KotlinD@DESKTOP-JV8VAO0",[[1,475,"，"]],[475,475],[476,476]]],[1552400998105,["KotlinD@DESKTOP-JV8VAO0",[[-1,475,"，"]],[476,476],[475,475]]],[1552400998417,["KotlinD@DESKTOP-JV8VAO0",[[1,476,"- \n"]],[475,475],[478,478]]],[1552400999669,["KotlinD@DESKTOP-JV8VAO0",[[-1,476,"- "]],[478,478],[476,476]]],[1552401000110,["KotlinD@DESKTOP-JV8VAO0",[[-1,477,"\n"]],[476,476],[475,475]]],[1552401060771,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552401060771,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552401049594,["KotlinD@DESKTOP-JV8VAO0",[[1,598,"方便"]],[598,598],[600,600]]],[1552401050551,["KotlinD@DESKTOP-JV8VAO0",[[-1,598,"方便"]],[600,600],[598,598]]],[1552401054375,["KotlinD@DESKTOP-JV8VAO0",[[1,598,"方便查询"]],[598,598],[602,602]]],[1552401056012,["KotlinD@DESKTOP-JV8VAO0",[[-1,598,"方便查询"]],[602,602],[598,598]]],[1552401060517,["KotlinD@DESKTOP-JV8VAO0",[[1,598,"内部实现使用的"]],[598,598],[605,605]]],[1552401075037,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552401075037,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552401068403,["KotlinD@DESKTOP-JV8VAO0",[[1,605,"是数组，初始容量为1"]],[605,605],[615,615]]],[1552401068442,["KotlinD@DESKTOP-JV8VAO0",[[1,614," "]],[615,615],[616,616]]],[1552401069711,["KotlinD@DESKTOP-JV8VAO0",[[1,616,"0，"]],[616,616],[618,618]]],[1552401072288,["KotlinD@DESKTOP-JV8VAO0",[[-1,439,"- 内部实现使用的是数组，初始默认容量为 10，扩容增长为原来的 2 倍"]],[439,475],[439,439]]],[1552401074318,["KotlinD@DESKTOP-JV8VAO0",[[1,835,"\n"]],[834,834],[835,835]]],[1552401074579,["KotlinD@DESKTOP-JV8VAO0",[[1,835,"- 内部实现使用的是数组，初始默认容量为 10，扩容增长为原来的 2 倍"]],[835,835],[871,871]]],[1552401090741,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552401090741,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552401087103,["KotlinD@DESKTOP-JV8VAO0",[[1,582,"扩容增长为原来的1"]],[582,582],[591,591]]],[1552401087143,["KotlinD@DESKTOP-JV8VAO0",[[1,590," "]],[591,591],[592,592]]],[1552401089986,["KotlinD@DESKTOP-JV8VAO0",[[1,592,".5倍"]],[592,592],[595,595]]],[1552401090027,["KotlinD@DESKTOP-JV8VAO0",[[1,594," "]],[595,595],[596,596]]],[1552401093474,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552401093474,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552401091871,["KotlinD@DESKTOP-JV8VAO0",[[1,597,"- \n"]],[596,596],[599,599]]],[1552401153084,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552401153084,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552401121974,["KotlinD@DESKTOP-JV8VAO0",[[1,596,"，数据转移使用的是"]],[596,596],[605,605]]],[1552401122577,["KotlinD@DESKTOP-JV8VAO0",[[-1,603,"的是"]],[605,605],[603,603]]],[1552401126067,["KotlinD@DESKTOP-JV8VAO0",[[1,603,"===="]],[603,603],[605,605]]],[1552401130424,["KotlinD@DESKTOP-JV8VAO0",[[1,605,"Arrays。"]],[605,605],[612,612]]],[1552401130972,["KotlinD@DESKTOP-JV8VAO0",[[-1,611,"。"]],[612,612],[611,611]]],[1552401135300,["KotlinD@DESKTOP-JV8VAO0",[[1,611,".copyof()"]],[611,611],[620,620]]],[1552401137533,["KotlinD@DESKTOP-JV8VAO0",[[1,619,"ele,m"]],[619,619],[624,624]]],[1552401138837,["KotlinD@DESKTOP-JV8VAO0",[[-1,622,",m"]],[624,624],[622,622]]],[1552401143144,["KotlinD@DESKTOP-JV8VAO0",[[1,622,"mentDatam"]],[622,622],[631,631]]],[1552401143888,["KotlinD@DESKTOP-JV8VAO0",[[-1,630,"m"]],[631,631],[630,630]]],[1552401151903,["KotlinD@DESKTOP-JV8VAO0",[[1,630,",newCapacity"]],[630,630],[642,642]]],[1552401165929,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552401165929,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552401164865,["KotlinD@DESKTOP-JV8VAO0",[[1,937,"，数据转移使用==Arrays.copyof(elementData,newCapacity)=="]],[937,937],[986,986]]],[1552401705944,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552401705944,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552401697190,["KotlinD@DESKTOP-JV8VAO0",[[1,603,"grow "]],[603,603],[608,608]]],[1552401697231,["KotlinD@DESKTOP-JV8VAO0",[[1,603," "]],[608,608],[609,609]]],[1552401699756,["KotlinD@DESKTOP-JV8VAO0",[[-1,603," grow "]],[609,609],[603,603]]],[1552401705739,["KotlinD@DESKTOP-JV8VAO0",[[1,597,"grow f "]],[597,597],[603,603]]],[1552401705795,["KotlinD@DESKTOP-JV8VAO0",[[1,603,"a"]],[603,603],[604,604]]],[1552401710869,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552401710869,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552401706104,["KotlinD@DESKTOP-JV8VAO0",[[1,604,"n"]],[604,604],[605,605]]],[1552401707074,["KotlinD@DESKTOP-JV8VAO0",[[-1,602,"fan "]],[605,605],[601,601]]],[1552401710201,["KotlinD@DESKTOP-JV8VAO0",[[1,601,"方法"]],[601,601],[603,603]]],[1552401710241,["KotlinD@DESKTOP-JV8VAO0",[[1,601," "]],[603,603],[604,604]]],[1552401720416,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552401720416,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552401715572,["KotlinD@DESKTOP-JV8VAO0",[[1,604,"z"]],[604,604],[605,605]]],[1552401715613,["KotlinD@DESKTOP-JV8VAO0",[[1,604," "]],[605,605],[606,606]]],[1552401716036,["KotlinD@DESKTOP-JV8VAO0",[[1,606,"hong"]],[606,606],[610,610]]],[1552401716959,["KotlinD@DESKTOP-JV8VAO0",[[-1,605,"zhong"]],[610,610],[605,605]]],[1552401717829,["KotlinD@DESKTOP-JV8VAO0",[[1,605,"zho"]],[605,605],[608,608]]],[1552401718667,["KotlinD@DESKTOP-JV8VAO0",[[-1,605,"zho "]],[608,608],[604,604]]],[1552401719918,["KotlinD@DESKTOP-JV8VAO0",[[1,604,"中"]],[604,604],[605,605]]],[1552401721476,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552401721476,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552401721113,["KotlinD@DESKTOP-JV8VAO0",[[-1,605," "]],[606,606],[605,605]]],[1552401810616,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552401810616,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552401807202,["KotlinD@DESKTOP-JV8VAO0",[[-1,654,"- ArrayList 实例有一个容量 Capacity ，也就是用于存储元素的数组的大，从JDK1.8看到默认的出事容量为10，这个容量会随着不断添加新的元素而自动增加。\n会通过调用 grow 方法对数组扩容量，使用的方法是，==Arrays.copyof(elementData,newCapacity)== 进行数据拷贝，并设定新的容量。\n同步方式： ==List list = Collection.synchronizedList(new LinkedList());==\n\n"]],[656,897],[654,654]]],[1552401810036,["KotlinD@DESKTOP-JV8VAO0",[[-1,440,"\n"]],[439,439],[438,438]]],[1552401879299,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552401879299,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552401878667,["KotlinD@DESKTOP-JV8VAO0",[[1,656,"#"]],[656,656],[657,657]]],[1552401892086,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552401892086,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552401891264,["KotlinD@DESKTOP-JV8VAO0",[[1,906,"#"]],[905,905],[906,906]]],[1552402012105,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552402012105,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552401967496,["KotlinD@DESKTOP-JV8VAO0",[[1,666,"\n"]],[665,665],[666,666]]],[1552401969998,["KotlinD@DESKTOP-JV8VAO0",[[1,666,"- shi"]],[666,666],[671,671]]],[1552401970770,["KotlinD@DESKTOP-JV8VAO0",[[-1,668,"shi"]],[671,671],[668,668]]],[1552401971449,["KotlinD@DESKTOP-JV8VAO0",[[1,668,"shi"]],[668,668],[671,671]]],[1552401972334,["KotlinD@DESKTOP-JV8VAO0",[[-1,668,"shi"]],[671,671],[668,668]]],[1552401979936,["KotlinD@DESKTOP-JV8VAO0",[[1,668,"是线程安全的，美不的操作"]],[668,668],[680,680]]],[1552401981734,["KotlinD@DESKTOP-JV8VAO0",[[-1,675,"美不的操作"]],[680,680],[675,675]]],[1552402072104,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552402072104,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552402020761,["KotlinD@DESKTOP-JV8VAO0",[[1,675,"内部的操作方法搜是"]],[675,675],[684,684]]],[1552402021157,["KotlinD@DESKTOP-JV8VAO0",[[-1,682,"搜是"]],[684,684],[682,682]]],[1552402031248,["KotlinD@DESKTOP-JV8VAO0",[[1,682,"都是用synchroized"]],[682,682],[696,696]]],[1552402031287,["KotlinD@DESKTOP-JV8VAO0",[[1,685," "]],[696,696],[697,697]]],[1552402037339,["KotlinD@DESKTOP-JV8VAO0",[[-1,686,"synchroized"]],[697,697],[686,686]]],[1552402047429,["KotlinD@DESKTOP-JV8VAO0",[[1,686,"synchronized "]],[686,686],[699,699]]],[1552402132102,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552402132102,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552402083720,["KotlinD@DESKTOP-JV8VAO0",[[1,699,"进行修饰来"]],[699,699],[704,704]]],[1552402612111,[null,[[-1,352,"  "],[1,423,"ue"]],[352,352],[425,425]]],[1552402612111,[null,[[1,352,"  "],[-1,421,"ue"]],[425,425],[352,352]]],[1552402585759,["KotlinD@DESKTOP-JV8VAO0",[[1,494,"s"]],[494,494],[495,495]]],[1552402587213,["KotlinD@DESKTOP-JV8VAO0",[[1,288,"s"]],[288,288],[289,289]]],[1552403160937,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552403160937,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552403153005,["KotlinD@DESKTOP-JV8VAO0",[[-1,793,"与 ArrayList 类似都是使用数组实现的，默认容量为10，但是 Vector 是线程安全的。所以由"]],[793,845],[793,793]]],[1552403154710,["KotlinD@DESKTOP-JV8VAO0",[[1,793,"-"]],[793,793],[794,794]]],[1552403158238,["KotlinD@DESKTOP-JV8VAO0",[[1,795,"ru"]],[795,795],[797,797]]],[1552403158951,["KotlinD@DESKTOP-JV8VAO0",[[-1,795,"ru"]],[797,797],[795,795]]],[1552403160229,["KotlinD@DESKTOP-JV8VAO0",[[1,795,"如果 "]],[795,795],[797,797]]],[1552403166682,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552403166682,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552403162566,["KotlinD@DESKTOP-JV8VAO0",[[-1,793,"- 如果 Vector 创建的 Iterator 被使用的时候，另一个线程改变 Vector 状态，会抛出 ==ConcurrentModificationException== ，因此必须捕获这个异常。\n"]],[792,895],[792,792]]],[1552403164105,["KotlinD@DESKTOP-JV8VAO0",[[1,709,"\n- 如果 Vector 创建的 Iterator 被使用的时候，另一个线程改变 Vector 状态，会抛出 ==ConcurrentModificationException== ，因此必须捕获这个异常。\n- "]],[706,706],[812,812]]],[1552403166301,["KotlinD@DESKTOP-JV8VAO0",[[-1,709,"\n- "]],[706,709],[706,706]]],[1552403449783,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552403449783,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552403428185,["KotlinD@DESKTOP-JV8VAO0",[[1,440,"- \n"]],[439,439],[442,442]]],[1552403434316,["KotlinD@DESKTOP-JV8VAO0",[[1,442,"内审部"]],[442,442],[445,445]]],[1552403435098,["KotlinD@DESKTOP-JV8VAO0",[[-1,442,"内审部"]],[445,445],[442,442]]],[1552403448777,["KotlinD@DESKTOP-JV8VAO0",[[1,442,"内部实现使用的是链表数据结构"]],[442,442],[456,456]]],[1552403457475,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552403457475,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552403454169,["KotlinD@DESKTOP-JV8VAO0",[[1,456,"，前一个"]],[456,456],[460,460]]],[1552403456907,["KotlinD@DESKTOP-JV8VAO0",[[-1,456,"，前一个"]],[460,460],[456,456]]],[1552403517484,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552403517484,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552403494219,["KotlinD@DESKTOP-JV8VAO0",[[1,456,"，元素时间使用"]],[456,456],[463,463]]],[1552403494900,["KotlinD@DESKTOP-JV8VAO0",[[-1,459,"时间使用"]],[463,463],[459,459]]],[1552403496103,["KotlinD@DESKTOP-JV8VAO0",[[1,459,"质检"]],[459,459],[461,461]]],[1552403498388,["KotlinD@DESKTOP-JV8VAO0",[[-1,457,"元素质检"]],[461,461],[457,457]]],[1552403577484,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552403577484,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552403519905,["KotlinD@DESKTOP-JV8VAO0",[[1,457,"元素之间"]],[457,457],[461,461]]],[1552403620284,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552403620284,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552403619849,["KotlinD@DESKTOP-JV8VAO0",[[1,461,"使用指针引用关联"]],[461,461],[469,469]]],[1552403639553,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552403639553,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552403638794,["KotlinD@DESKTOP-JV8VAO0",[[1,488,"=="],[1,495,"=="]],[488,495],[488,499]]],[1552403643435,[null,[[-1,353,"  "],[1,424,"ue"]],[353,353],[426,426]]],[1552403643435,[null,[[1,353,"  "],[-1,422,"ue"]],[426,426],[353,353]]],[1552403642689,["KotlinD@DESKTOP-JV8VAO0",[[1,251,"=="],[1,258,"=="]],[251,258],[251,262]]],[1552403647484,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552403647484,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552403646642,["KotlinD@DESKTOP-JV8VAO0",[[1,708,"=="],[1,714,"=="]],[708,714],[708,718]]],[1552403690107,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552403690107,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552403682404,["KotlinD@DESKTOP-JV8VAO0",[[1,1029,"使用ArrayList"]],[1029,1029],[1040,1040]]],[1552403682445,["KotlinD@DESKTOP-JV8VAO0",[[1,1031," "]],[1040,1040],[1041,1041]]],[1552403689554,["KotlinD@DESKTOP-JV8VAO0",[[1,1069,"LinkedList"]],[1069,1069],[1079,1079]]],[1552403695464,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552403695464,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552403695099,["KotlinD@DESKTOP-JV8VAO0",[[-1,1054,"一个类"]],[1054,1057],[1054,1054]]],[1552403702290,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552403702290,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552403701912,["KotlinD@DESKTOP-JV8VAO0",[[-1,1055,"因"],[1,1056,"应"]],[1055,1055],[1056,1056]]],[1552403740056,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552403740056,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552403733443,["KotlinD@DESKTOP-JV8VAO0",[[1,1321,"- "]],[1321,1321],[1323,1323]]],[1552403736543,["KotlinD@DESKTOP-JV8VAO0",[[1,1359,"- "]],[1359,1359],[1361,1361]]],[1552403739118,["KotlinD@DESKTOP-JV8VAO0",[[1,1399,"- "]],[1399,1399],[1401,1401]]],[1552403915358,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552403915358,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552403914611,["KotlinD@DESKTOP-JV8VAO0",[[1,1482,"#"]],[1482,1482],[1483,1483]]],[1552403958117,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552403958117,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552403957459,["KotlinD@DESKTOP-JV8VAO0",[[1,2118,"#"]],[2118,2118],[2119,2119]]],[1552403986970,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552403986970,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552403968432,["KotlinD@DESKTOP-JV8VAO0",[[1,2129,"\n"]],[2128,2128],[2129,2129]]],[1552403977660,["KotlinD@DESKTOP-JV8VAO0",[[1,2129,"- 无序、不可重复、可渔村"]],[2129,2129],[2142,2142]]],[1552403978308,["KotlinD@DESKTOP-JV8VAO0",[[-1,2139,"可渔村"]],[2142,2142],[2139,2139]]],[1552403983599,["KotlinD@DESKTOP-JV8VAO0",[[1,2139,"可以存储null"]],[2139,2139],[2147,2147]]],[1552403983639,["KotlinD@DESKTOP-JV8VAO0",[[1,2143," "]],[2147,2147],[2148,2148]]],[1552403984701,["KotlinD@DESKTOP-JV8VAO0",[[1,2148,"，"]],[2148,2148],[2149,2149]]],[1552403985476,["KotlinD@DESKTOP-JV8VAO0",[[-1,2148,"，"]],[2149,2149],[2148,2148]]],[1552403985846,["KotlinD@DESKTOP-JV8VAO0",[[1,2149,"- \n"]],[2148,2148],[2151,2151]]],[1552404032831,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404032831,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404000623,["KotlinD@DESKTOP-JV8VAO0",[[1,2151,"通过哈希算法实现防止重复的"]],[2151,2151],[2164,2164]]],[1552404001294,["KotlinD@DESKTOP-JV8VAO0",[[-1,2163,"的"]],[2164,2164],[2163,2163]]],[1552404003035,["KotlinD@DESKTOP-JV8VAO0",[[1,2163,"，"]],[2163,2163],[2164,2164]]],[1552404003419,["KotlinD@DESKTOP-JV8VAO0",[[-1,2163,"，"]],[2164,2164],[2163,2163]]],[1552404003671,["KotlinD@DESKTOP-JV8VAO0",[[1,2164,"- \n"]],[2163,2163],[2166,2166]]],[1552404008153,["KotlinD@DESKTOP-JV8VAO0",[[1,2166,"存放原始"]],[2166,2166],[2170,2170]]],[1552404008833,["KotlinD@DESKTOP-JV8VAO0",[[-1,2168,"原始"]],[2170,2170],[2168,2168]]],[1552404012805,["KotlinD@DESKTOP-JV8VAO0",[[1,2168,"元素使用key"]],[2168,2168],[2175,2175]]],[1552404012846,["KotlinD@DESKTOP-JV8VAO0",[[1,2172," "]],[2175,2175],[2176,2176]]],[1552404016428,["KotlinD@DESKTOP-JV8VAO0",[[1,2176,"-value形式"]],[2176,2176],[2184,2184]]],[1552404016468,["KotlinD@DESKTOP-JV8VAO0",[[1,2182," "]],[2184,2184],[2185,2185]]],[1552404019575,["KotlinD@DESKTOP-JV8VAO0",[[1,2186,"- \n"]],[2185,2185],[2188,2188]]],[1552404023050,["KotlinD@DESKTOP-JV8VAO0",[[1,2129,"\n"]],[2128,2128],[2129,2129]]],[1552404029543,["KotlinD@DESKTOP-JV8VAO0",[[1,2129,"- 不是线程安全的，"]],[2129,2129],[2139,2139]]],[1552404032408,["KotlinD@DESKTOP-JV8VAO0",[[-1,2197,"- \n无序，不可重复，可以存储null，是通过哈希算法来实现防止重复的，存放元素也是key-value的形式，可以通过迭代器遍历获取数据；\n不是线程安全的。"]],[2197,2275],[2197,2197]]],[1552404092828,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404092828,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404039383,["KotlinD@DESKTOP-JV8VAO0",[[1,2139,"可以说"]],[2139,2139],[2142,2142]]],[1552404039630,["KotlinD@DESKTOP-JV8VAO0",[[-1,2141,"说"]],[2142,2142],[2141,2141]]],[1552404042083,["KotlinD@DESKTOP-JV8VAO0",[[1,2141,"使用===="]],[2141,2141],[2145,2145]]],[1552404092188,["KotlinD@DESKTOP-JV8VAO0",[[1,2145,"Collections.synchroi"]],[2145,2145],[2165,2165]]],[1552404129946,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404129946,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404094303,["KotlinD@DESKTOP-JV8VAO0",[[1,2165,"n"]],[2165,2165],[2166,2166]]],[1552404096043,["KotlinD@DESKTOP-JV8VAO0",[[-1,2159,"nchroin"]],[2166,2166],[2159,2159]]],[1552404102090,["KotlinD@DESKTOP-JV8VAO0",[[1,2159,"nchronized"]],[2159,2159],[2169,2169]]],[1552404104408,["KotlinD@DESKTOP-JV8VAO0",[[-1,2168,"d"]],[2169,2169],[2168,2168]]],[1552404109034,["KotlinD@DESKTOP-JV8VAO0",[[1,2168,"dSet()"]],[2168,2168],[2174,2174]]],[1552404119830,["KotlinD@DESKTOP-JV8VAO0",[[1,2173,"new HashSet("]],[2173,2173],[2185,2185]]],[1552404121854,["KotlinD@DESKTOP-JV8VAO0",[[1,2186,");"]],[2185,2185],[2188,2188]]],[1552404128914,["KotlinD@DESKTOP-JV8VAO0",[[1,2145,"Set set = "]],[2145,2145],[2155,2155]]],[1552404137152,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404137152,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404131602,["KotlinD@DESKTOP-JV8VAO0",[[1,2200,"shi"]],[2200,2200],[2203,2203]]],[1552404132380,["KotlinD@DESKTOP-JV8VAO0",[[-1,2200,"shi"]],[2203,2203],[2200,2200]]],[1552404136729,["KotlinD@DESKTOP-JV8VAO0",[[1,2200,"实现同步"]],[2200,2200],[2204,2204]]],[1552404140957,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404140957,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404140117,["KotlinD@DESKTOP-JV8VAO0",[[1,2200," "]],[2200,2200],[2201,2201]]],[1552404142822,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404142822,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404142352,["KotlinD@DESKTOP-JV8VAO0",[[1,2143," "]],[2143,2143],[2144,2144]]],[1552404153806,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404153806,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404151411,["KotlinD@DESKTOP-JV8VAO0",[[-1,2202,"实现同步"],[1,2206,"保证"]],[2202,2202],[2204,2204]]],[1552404153334,["KotlinD@DESKTOP-JV8VAO0",[[1,2204,"线程安全"]],[2204,2204],[2208,2208]]],[1552404156952,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404156952,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404156404,["KotlinD@DESKTOP-JV8VAO0",[[-1,2267,"\n"]],[2266,2266],[2265,2265]]],[1552404159832,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404159832,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404159161,["KotlinD@DESKTOP-JV8VAO0",[[1,2269,"#"]],[2269,2269],[2270,2270]]],[1552404186704,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404186704,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404161158,["KotlinD@DESKTOP-JV8VAO0",[[1,2280,"\n"]],[2279,2279],[2280,2280]]],[1552404169347,["KotlinD@DESKTOP-JV8VAO0",[[1,2280,"- 不是线程安全的，"]],[2280,2280],[2290,2290]]],[1552404173875,["KotlinD@DESKTOP-JV8VAO0",[[-1,2280,"- 不是线程安全的，"]],[2290,2290],[2280,2280]]],[1552404176207,["KotlinD@DESKTOP-JV8VAO0",[[-1,2280,"\n"]],[2280,2280],[2279,2279]]],[1552404178372,["KotlinD@DESKTOP-JV8VAO0",[[1,2280,"\n"]],[2279,2279],[2280,2280]]],[1552404178790,["KotlinD@DESKTOP-JV8VAO0",[[1,2280,"- 不是线程安全的，"]],[2280,2280],[2290,2290]]],[1552404182711,["KotlinD@DESKTOP-JV8VAO0",[[-1,2138,"，"]],[2138,2208],[2207,2207]]],[1552404183698,["KotlinD@DESKTOP-JV8VAO0",[[1,2138,"，"]],[2207,2207],[2138,2208]]],[1552404186174,["KotlinD@DESKTOP-JV8VAO0",[[1,2290,"可以使用 ==Set set = Collections.synchronizedSet(new HashSet());== 保证线程安全"]],[2289,2290],[2359,2359]]],[1552404190601,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404190601,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404190099,["KotlinD@DESKTOP-JV8VAO0",[[-1,2339,"Hash"],[1,2343,"Tree"],[1,2346," "]],[2339,2346],[2347,2347]]],[1552404191949,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404191949,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404191392,["KotlinD@DESKTOP-JV8VAO0",[[-1,2346," "]],[2347,2347],[2346,2346]]],[1552404251781,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404251781,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404193627,["KotlinD@DESKTOP-JV8VAO0",[[1,2360,"- \n"]],[2359,2359],[2362,2362]]],[1552404195796,["KotlinD@DESKTOP-JV8VAO0",[[1,2362,"五"]],[2362,2362],[2363,2363]]],[1552404196009,["KotlinD@DESKTOP-JV8VAO0",[[-1,2362,"五"]],[2363,2363],[2362,2362]]],[1552404197414,["KotlinD@DESKTOP-JV8VAO0",[[1,2362,"有序的"]],[2362,2362],[2365,2365]]],[1552404197941,["KotlinD@DESKTOP-JV8VAO0",[[-1,2364,"的"]],[2365,2365],[2364,2364]]],[1552404198184,["KotlinD@DESKTOP-JV8VAO0",[[1,2364,"，"]],[2364,2364],[2365,2365]]],[1552404199050,["KotlinD@DESKTOP-JV8VAO0",[[-1,2364,"，"]],[2365,2365],[2364,2364]]],[1552404208642,["KotlinD@DESKTOP-JV8VAO0",[[1,2364,"、不可重复、不可存储null"]],[2364,2364],[2378,2378]]],[1552404208683,["KotlinD@DESKTOP-JV8VAO0",[[1,2374," "]],[2378,2378],[2379,2379]]],[1552404209827,["KotlinD@DESKTOP-JV8VAO0",[[1,2380,"- \n"]],[2379,2379],[2382,2382]]],[1552404218287,["KotlinD@DESKTOP-JV8VAO0",[[1,2382,"与HashSet"]],[2382,2382],[2390,2390]]],[1552404218327,["KotlinD@DESKTOP-JV8VAO0",[[1,2383," "]],[2390,2390],[2391,2391]]],[1552404220234,["KotlinD@DESKTOP-JV8VAO0",[[1,2391,"相比较"]],[2391,2391],[2394,2394]]],[1552404220275,["KotlinD@DESKTOP-JV8VAO0",[[1,2391," "]],[2394,2394],[2395,2395]]],[1552404234027,["KotlinD@DESKTOP-JV8VAO0",[[1,2395,"，多了排序算法，是基于TreeMap"]],[2395,2395],[2413,2413]]],[1552404234067,["KotlinD@DESKTOP-JV8VAO0",[[1,2406," "]],[2413,2413],[2414,2414]]],[1552404235439,["KotlinD@DESKTOP-JV8VAO0",[[1,2414,"实现"]],[2414,2414],[2416,2416]]],[1552404235481,["KotlinD@DESKTOP-JV8VAO0",[[1,2414," "]],[2416,2416],[2417,2417]]],[1552404248714,["KotlinD@DESKTOP-JV8VAO0",[[1,2417,"的。底层数据结构是二叉树。"]],[2417,2417],[2430,2430]]],[1552404251455,["KotlinD@DESKTOP-JV8VAO0",[[-1,2431,"有序，不可重复，不可以存储null，相对于 HashSet 提供了排序方法，TreeSet 是基于 TreeMap 实现的，底层数据结构是：二叉树。\n不是线程安全的。\n"]],[2430,2514],[2430,2430]]],[1552404254027,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404254027,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404253475,["KotlinD@DESKTOP-JV8VAO0",[[-1,2432,"\n"]],[2432,2432],[2431,2431]]],[1552404374015,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404374015,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404365841,["KotlinD@DESKTOP-JV8VAO0",[[1,2266,"- \n"]],[2265,2265],[2268,2268]]],[1552404369615,["KotlinD@DESKTOP-JV8VAO0",[[1,2268,"是繼"]],[2268,2268],[2270,2270]]],[1552404369986,["KotlinD@DESKTOP-JV8VAO0",[[-1,2268,"是繼"]],[2270,2270],[2268,2268]]],[1552404370617,["KotlinD@DESKTOP-JV8VAO0",[[1,2268,"及"]],[2268,2268],[2269,2269]]],[1552404370817,["KotlinD@DESKTOP-JV8VAO0",[[-1,2268,"及"]],[2269,2269],[2268,2268]]],[1552404371942,["KotlinD@DESKTOP-JV8VAO0",[[1,2268,"基于"]],[2268,2268],[2270,2270]]],[1552404415401,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404415401,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404374666,["KotlinD@DESKTOP-JV8VAO0",[[1,2270,"HashMap"]],[2270,2270],[2277,2277]]],[1552404374708,["KotlinD@DESKTOP-JV8VAO0",[[1,2270," "]],[2277,2277],[2278,2278]]],[1552404379375,["KotlinD@DESKTOP-JV8VAO0",[[1,2278,"实现"]],[2278,2278],[2280,2280]]],[1552404379418,["KotlinD@DESKTOP-JV8VAO0",[[1,2278," "]],[2280,2280],[2281,2281]]],[1552404379856,["KotlinD@DESKTOP-JV8VAO0",[[1,2281,"的，"]],[2281,2281],[2283,2283]]],[1552404414159,["KotlinD@DESKTOP-JV8VAO0",[[-1,2282,"，"]],[2283,2283],[2282,2282]]],[1552404444031,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404444031,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404438467,["KotlinD@DESKTOP-JV8VAO0",[[1,2420,"\n"]],[2420,2420],[2421,2421]]],[1552404440159,["KotlinD@DESKTOP-JV8VAO0",[[1,2421,"- "]],[2421,2421],[2423,2423]]],[1552404443407,["KotlinD@DESKTOP-JV8VAO0",[[-1,2419,"，"]],[2420,2420],[2419,2419]]],[1552404450754,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404450754,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404448766,["KotlinD@DESKTOP-JV8VAO0",[[1,2434,"的NavigableSet"]],[2434,2434],[2447,2447]]],[1552404448809,["KotlinD@DESKTOP-JV8VAO0",[[1,2435," "],[1,2447," "]],[2447,2447],[2448,2448]]],[1552404462780,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404462780,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404460932,["KotlinD@DESKTOP-JV8VAO0",[[1,2465,"- \n"]],[2464,2464],[2467,2467]]],[1552404462280,["KotlinD@DESKTOP-JV8VAO0",[[-1,2465,"- \n"]],[2467,2467],[2464,2464]]],[1552404512244,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404512244,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404488804,["KotlinD@DESKTOP-JV8VAO0",[[1,2419,"，默认使用元素的自然数序，也可以根据创建set"]],[2419,2419],[2442,2442]]],[1552404488844,["KotlinD@DESKTOP-JV8VAO0",[[1,2439," "]],[2442,2442],[2443,2443]]],[1552404489902,["KotlinD@DESKTOP-JV8VAO0",[[1,2443,"时"]],[2443,2443],[2444,2444]]],[1552404489944,["KotlinD@DESKTOP-JV8VAO0",[[1,2443," "]],[2444,2444],[2445,2445]]],[1552404490775,["KotlinD@DESKTOP-JV8VAO0",[[1,2445,"我"]],[2445,2445],[2446,2446]]],[1552404491137,["KotlinD@DESKTOP-JV8VAO0",[[-1,2445,"我"]],[2446,2446],[2445,2445]]],[1552404496212,["KotlinD@DESKTOP-JV8VAO0",[[1,2445,"设置的Compare"]],[2445,2445],[2455,2455]]],[1552404496251,["KotlinD@DESKTOP-JV8VAO0",[[1,2448," "]],[2455,2455],[2456,2456]]],[1552404500410,["KotlinD@DESKTOP-JV8VAO0",[[-1,2455,"e"]],[2456,2456],[2455,2455]]],[1552404505193,["KotlinD@DESKTOP-JV8VAO0",[[1,2455,"ator进行"]],[2455,2455],[2461,2461]]],[1552404505234,["KotlinD@DESKTOP-JV8VAO0",[[1,2459," "]],[2461,2461],[2462,2462]]],[1552404507380,["KotlinD@DESKTOP-JV8VAO0",[[1,2462,"排序。"]],[2462,2462],[2465,2465]]],[1552404556464,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404556464,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404552732,["KotlinD@DESKTOP-JV8VAO0",[[-1,2519,">"]],[2519,2520],[2519,2519]]],[1552404553558,["KotlinD@DESKTOP-JV8VAO0",[[1,2519,"-"]],[2519,2519],[2520,2520]]],[1552404554991,["KotlinD@DESKTOP-JV8VAO0",[[-1,2545,">"]],[2546,2546],[2545,2545]]],[1552404555415,["KotlinD@DESKTOP-JV8VAO0",[[1,2545,"-"]],[2545,2545],[2546,2546]]],[1552404563219,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404563219,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404559636,["KotlinD@DESKTOP-JV8VAO0",[[-1,2595,"HashMap "]],[2595,2603],[2595,2595]]],[1552404560597,["KotlinD@DESKTOP-JV8VAO0",[[1,2593,"\n"]],[2592,2592],[2593,2593]]],[1552404562443,["KotlinD@DESKTOP-JV8VAO0",[[1,2593,"### HashMap "]],[2593,2593],[2605,2605]]],[1552404581448,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404581448,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404566583,["KotlinD@DESKTOP-JV8VAO0",[[1,2606,"\n"]],[2605,2605],[2606,2606]]],[1552404572269,["KotlinD@DESKTOP-JV8VAO0",[[1,2606,"- 不是线程安全的，"]],[2606,2606],[2616,2616]]],[1552404576899,["KotlinD@DESKTOP-JV8VAO0",[[1,2299,"=="],[1,2306,"=="]],[2299,2306],[2299,2310]]],[1552404580011,["KotlinD@DESKTOP-JV8VAO0",[[1,2131,"=="],[1,2138,"=="]],[2131,2138],[2131,2142]]],[1552404593615,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404593615,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404592541,["KotlinD@DESKTOP-JV8VAO0",[[1,2616,"=="],[1,2623,"=="]],[2616,2623],[2616,2627]]],[1552404653624,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404653624,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404643600,["KotlinD@DESKTOP-JV8VAO0",[[1,2628,"可以使用 ===="]],[2628,2628],[2635,2635]]],[1552404648637,["KotlinD@DESKTOP-JV8VAO0",[[1,2635,"Map《》"]],[2635,2635],[2640,2640]]],[1552404649227,["KotlinD@DESKTOP-JV8VAO0",[[-1,2639,"》"]],[2640,2640],[2639,2639]]],[1552404649283,["KotlinD@DESKTOP-JV8VAO0",[[1,2641,"="]],[2639,2639],[2640,2640]]],[1552404649590,["KotlinD@DESKTOP-JV8VAO0",[[-1,2638,"《="]],[2640,2640],[2638,2638]]],[1552404651576,["KotlinD@DESKTOP-JV8VAO0",[[1,2638," map "]],[2638,2638],[2643,2643]]],[1552404651726,["KotlinD@DESKTOP-JV8VAO0",[[1,2645,"="]],[2643,2643],[2644,2644]]],[1552404651915,["KotlinD@DESKTOP-JV8VAO0",[[1,2644," "]],[2644,2644],[2645,2645]]],[1552404692395,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404692395,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404655899,["KotlinD@DESKTOP-JV8VAO0",[[1,2645,"Collections。"]],[2645,2645],[2657,2657]]],[1552404656839,["KotlinD@DESKTOP-JV8VAO0",[[-1,2656,"。"]],[2657,2657],[2656,2656]]],[1552404662664,["KotlinD@DESKTOP-JV8VAO0",[[1,2656,".synchroi"]],[2656,2656],[2665,2665]]],[1552404663363,["KotlinD@DESKTOP-JV8VAO0",[[-1,2664,"i"]],[2665,2665],[2664,2664]]],[1552404669077,["KotlinD@DESKTOP-JV8VAO0",[[1,2664,"nizedMap()"]],[2664,2664],[2674,2674]]],[1552404673945,["KotlinD@DESKTOP-JV8VAO0",[[1,2673,"new HashMap("]],[2673,2673],[2685,2685]]],[1552404678975,["KotlinD@DESKTOP-JV8VAO0",[[1,2686,");"]],[2685,2685],[2688,2688]]],[1552404681282,["KotlinD@DESKTOP-JV8VAO0",[[1,2690," lao"]],[2690,2690],[2694,2694]]],[1552404681988,["KotlinD@DESKTOP-JV8VAO0",[[-1,2691,"lao"]],[2694,2694],[2691,2691]]],[1552404686039,["KotlinD@DESKTOP-JV8VAO0",[[1,2691,"來保證"]],[2691,2691],[2694,2694]]],[1552404686807,["KotlinD@DESKTOP-JV8VAO0",[[-1,2690," 來保證"]],[2694,2694],[2690,2690]]],[1552404691899,["KotlinD@DESKTOP-JV8VAO0",[[1,2690," 保证线程安全"]],[2690,2690],[2697,2697]]],[1552404723781,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404723781,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404694044,["KotlinD@DESKTOP-JV8VAO0",[[1,2698,"- \n"]],[2697,2697],[2700,2700]]],[1552404698492,["KotlinD@DESKTOP-JV8VAO0",[[1,2700,"无序，"]],[2700,2700],[2703,2703]]],[1552404699001,["KotlinD@DESKTOP-JV8VAO0",[[-1,2702,"，"]],[2703,2703],[2702,2702]]],[1552404708835,["KotlinD@DESKTOP-JV8VAO0",[[1,2702,"、键不可重复"]],[2702,2702],[2708,2708]]],[1552404709724,["KotlinD@DESKTOP-JV8VAO0",[[-1,2703,"键不可重复"]],[2708,2708],[2703,2703]]],[1552404713008,["KotlinD@DESKTOP-JV8VAO0",[[1,2703,"key不可重复"]],[2703,2703],[2710,2710]]],[1552404713048,["KotlinD@DESKTOP-JV8VAO0",[[1,2706," "]],[2710,2710],[2711,2711]]],[1552404715342,["KotlinD@DESKTOP-JV8VAO0",[[1,2711,"，冲了了"]],[2711,2711],[2715,2715]]],[1552404716042,["KotlinD@DESKTOP-JV8VAO0",[[-1,2711,"，冲了了"]],[2715,2715],[2711,2711]]],[1552404716836,["KotlinD@DESKTOP-JV8VAO0",[[1,2711,"（）"]],[2711,2711],[2713,2713]]],[1552404719191,["KotlinD@DESKTOP-JV8VAO0",[[1,2712,"会覆盖"]],[2712,2712],[2715,2715]]],[1552404722003,["KotlinD@DESKTOP-JV8VAO0",[[1,2716,"。"]],[2716,2716],[2717,2717]]],[1552404722448,["KotlinD@DESKTOP-JV8VAO0",[[-1,2716,"。"]],[2717,2717],[2716,2716]]],[1552404722679,["KotlinD@DESKTOP-JV8VAO0",[[1,2716,"、"]],[2716,2716],[2717,2717]]],[1552404760479,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404760479,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404726405,["KotlinD@DESKTOP-JV8VAO0",[[-1,2716,"、"]],[2717,2717],[2716,2716]]],[1552404726751,["KotlinD@DESKTOP-JV8VAO0",[[1,2717,"- \n"]],[2716,2716],[2719,2719]]],[1552404735637,["KotlinD@DESKTOP-JV8VAO0",[[1,2716,"、key"]],[2716,2716],[2720,2720]]],[1552404736550,["KotlinD@DESKTOP-JV8VAO0",[[-1,2717,"key"]],[2720,2720],[2717,2717]]],[1552404740332,["KotlinD@DESKTOP-JV8VAO0",[[1,2717,"可以存储null"]],[2717,2717],[2725,2725]]],[1552404740372,["KotlinD@DESKTOP-JV8VAO0",[[1,2721," "]],[2725,2725],[2726,2726]]],[1552404742234,["KotlinD@DESKTOP-JV8VAO0",[[1,2726,"的"]],[2726,2726],[2727,2727]]],[1552404742274,["KotlinD@DESKTOP-JV8VAO0",[[1,2726," "]],[2727,2727],[2728,2728]]],[1552404743720,["KotlinD@DESKTOP-JV8VAO0",[[1,2728,"key"]],[2728,2728],[2731,2731]]],[1552404743761,["KotlinD@DESKTOP-JV8VAO0",[[1,2728," "]],[2731,2731],[2732,2732]]],[1552404747283,["KotlinD@DESKTOP-JV8VAO0",[[1,2721,"一条"]],[2721,2721],[2723,2723]]],[1552404752314,["KotlinD@DESKTOP-JV8VAO0",[[-1,2730," k"]],[2730,2732],[2730,2730]]],[1552404753483,["KotlinD@DESKTOP-JV8VAO0",[[1,2730," k"]],[2730,2730],[2730,2732]]],[1552404754743,["KotlinD@DESKTOP-JV8VAO0",[[-1,2730," key"]],[2730,2734],[2730,2730]]],[1552404756584,["KotlinD@DESKTOP-JV8VAO0",[[1,2724,"key  "]],[2723,2723],[2728,2728]]],[1552404758313,["KotlinD@DESKTOP-JV8VAO0",[[1,2728,"為"]],[2728,2728],[2729,2729]]],[1552404758838,["KotlinD@DESKTOP-JV8VAO0",[[-1,2728,"為"]],[2729,2729],[2728,2728]]],[1552404759965,["KotlinD@DESKTOP-JV8VAO0",[[1,2728,"为"]],[2728,2728],[2729,2729]]],[1552404765051,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404765051,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404764514,["KotlinD@DESKTOP-JV8VAO0",[[1,2736,"数据"]],[2736,2736],[2738,2738]]],[1552404766807,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404766807,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404766042,["KotlinD@DESKTOP-JV8VAO0",[[1,2742,"- \n"]],[2738,2738],[2741,2741]]],[1552404792812,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404792812,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404772603,["KotlinD@DESKTOP-JV8VAO0",[[1,2741,"内部使用Node"]],[2741,2741],[2749,2749]]],[1552404772643,["KotlinD@DESKTOP-JV8VAO0",[[1,2745," "]],[2749,2749],[2750,2750]]],[1552404773711,["KotlinD@DESKTOP-JV8VAO0",[[1,2750,"数组"]],[2750,2750],[2752,2752]]],[1552404773752,["KotlinD@DESKTOP-JV8VAO0",[[1,2750," "]],[2752,2752],[2753,2753]]],[1552404773915,["KotlinD@DESKTOP-JV8VAO0",[[1,2753,"，"]],[2753,2753],[2754,2754]]],[1552404774264,["KotlinD@DESKTOP-JV8VAO0",[[-1,2753,"，"]],[2754,2754],[2753,2753]]],[1552404789783,["KotlinD@DESKTOP-JV8VAO0",[[1,2753,"+链表+红黑树的数据结构实现的"]],[2753,2753],[2768,2768]]],[1552404791522,["KotlinD@DESKTOP-JV8VAO0",[[1,2772,"- \n"]],[2768,2768],[2771,2771]]],[1552404838745,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404838745,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404800612,["KotlinD@DESKTOP-JV8VAO0",[[1,2771,"如果Kye"]],[2771,2771],[2776,2776]]],[1552404800653,["KotlinD@DESKTOP-JV8VAO0",[[1,2773," "]],[2776,2776],[2777,2777]]],[1552404801236,["KotlinD@DESKTOP-JV8VAO0",[[-1,2774,"Kye"]],[2777,2777],[2774,2774]]],[1552404802543,["KotlinD@DESKTOP-JV8VAO0",[[1,2774,"key是"]],[2774,2774],[2778,2778]]],[1552404802584,["KotlinD@DESKTOP-JV8VAO0",[[1,2777," "]],[2778,2778],[2779,2779]]],[1552404808482,["KotlinD@DESKTOP-JV8VAO0",[[1,2779,"自定义类需要"]],[2779,2779],[2785,2785]]],[1552404809792,["KotlinD@DESKTOP-JV8VAO0",[[-1,2783,"需要"]],[2785,2785],[2783,2783]]],[1552404813001,["KotlinD@DESKTOP-JV8VAO0",[[1,2783,"，需要实现hash"]],[2783,2783],[2792,2792]]],[1552404813041,["KotlinD@DESKTOP-JV8VAO0",[[1,2788," "]],[2792,2792],[2793,2793]]],[1552404817047,["KotlinD@DESKTOP-JV8VAO0",[[1,2793,"Code（）和"]],[2793,2793],[2800,2800]]],[1552404817598,["KotlinD@DESKTOP-JV8VAO0",[[-1,2797,"（）和"]],[2800,2800],[2797,2797]]],[1552404819227,["KotlinD@DESKTOP-JV8VAO0",[[1,2797,"（）"]],[2797,2797],[2799,2799]]],[1552404820092,["KotlinD@DESKTOP-JV8VAO0",[[-1,2797,"（）"]],[2799,2799],[2797,2797]]],[1552404832212,["KotlinD@DESKTOP-JV8VAO0",[[1,2797,"() 和 equals（）"]],[2797,2797],[2810,2810]]],[1552404832803,["KotlinD@DESKTOP-JV8VAO0",[[-1,2808,"（）"]],[2810,2810],[2808,2808]]],[1552404836044,["KotlinD@DESKTOP-JV8VAO0",[[1,2808,"() 方法"]],[2808,2808],[2813,2813]]],[1552404838050,["KotlinD@DESKTOP-JV8VAO0",[[1,2817,"- \n"]],[2813,2813],[2816,2816]]],[1552404845740,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404845740,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404845081,["KotlinD@DESKTOP-JV8VAO0",[[-1,2814,"- - \n> 无序的，根据key的HashCode值存储数据，根据键直接获取它对应的值，具有很快的访问速度，遍历时获取的数据顺序是随机的。\n> 因为键不可以重复，所以 HashMap 只允许记录一条 key 为 null 的数据，不限制 value 为 null 的数据。\n> 使用 Node数组+链表+恭嘿书的数据结构实现的。\n> 如果 key 是自定义类的话，需要实现 hashCode() 和 equals() 方法实现。\n> 不是线程安全的。\n> 可以使用 Collection.synchronizedMap(hashMap)来达到同步的效果\n"]],[2816,3091],[2814,2814]]],[1552404852983,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404852983,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404849420,["KotlinD@DESKTOP-JV8VAO0",[[-1,2818,"Hashtable "]],[2818,2828],[2818,2818]]],[1552404852666,["KotlinD@DESKTOP-JV8VAO0",[[1,2815,"### Hashtable "]],[2815,2815],[2829,2829]]],[1552404891447,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404891447,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404853819,["KotlinD@DESKTOP-JV8VAO0",[[1,2830,"\n"]],[2829,2829],[2830,2830]]],[1552404860067,["KotlinD@DESKTOP-JV8VAO0",[[1,2830,"- 与HashMap"]],[2830,2830],[2840,2840]]],[1552404860107,["KotlinD@DESKTOP-JV8VAO0",[[1,2833," "]],[2840,2840],[2841,2841]]],[1552404862295,["KotlinD@DESKTOP-JV8VAO0",[[1,2841,"特性"]],[2841,2841],[2843,2843]]],[1552404862335,["KotlinD@DESKTOP-JV8VAO0",[[1,2841," "]],[2843,2843],[2844,2844]]],[1552404867951,["KotlinD@DESKTOP-JV8VAO0",[[1,2844,"相似，不通风的地方为"]],[2844,2844],[2854,2854]]],[1552404869658,["KotlinD@DESKTOP-JV8VAO0",[[-1,2847,"不通风的地方为"]],[2854,2854],[2847,2847]]],[1552404872295,["KotlinD@DESKTOP-JV8VAO0",[[1,2847,"不同点是"]],[2847,2847],[2851,2851]]],[1552404875998,["KotlinD@DESKTOP-JV8VAO0",[[-1,2846,"，不同点是"]],[2851,2851],[2846,2846]]],[1552404877417,["KotlinD@DESKTOP-JV8VAO0",[[1,2830,"\n"]],[2829,2829],[2830,2830]]],[1552404879120,["KotlinD@DESKTOP-JV8VAO0",[[1,2830,"-是"]],[2830,2830],[2832,2832]]],[1552404879951,["KotlinD@DESKTOP-JV8VAO0",[[-1,2831,"是"]],[2832,2832],[2831,2831]]],[1552404885525,["KotlinD@DESKTOP-JV8VAO0",[[1,2831," 是线程安全的、"]],[2831,2831],[2839,2839]]],[1552404889277,["KotlinD@DESKTOP-JV8VAO0",[[-1,2838,"、"]],[2839,2839],[2838,2838]]],[1552404920142,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404920142,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404898217,["KotlinD@DESKTOP-JV8VAO0",[[1,2838,"，操作防范与"]],[2838,2838],[2844,2844]]],[1552404898542,["KotlinD@DESKTOP-JV8VAO0",[[-1,2843,"与"]],[2844,2844],[2843,2843]]],[1552404901908,["KotlinD@DESKTOP-JV8VAO0",[[1,2843,"都是用 ===="]],[2843,2843],[2849,2849]]],[1552404910228,["KotlinD@DESKTOP-JV8VAO0",[[1,2849,"synchronized"]],[2849,2849],[2861,2861]]],[1552404914927,["KotlinD@DESKTOP-JV8VAO0",[[1,2863," 进行了修饰"]],[2863,2863],[2869,2869]]],[1552404917470,["KotlinD@DESKTOP-JV8VAO0",[[-1,2841,"防范"]],[2843,2843],[2841,2841]]],[1552404919403,["KotlinD@DESKTOP-JV8VAO0",[[1,2841,"方法"]],[2841,2841],[2843,2843]]],[1552404924973,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404924973,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404922705,["KotlinD@DESKTOP-JV8VAO0",[[-1,2843,"都是"]],[2844,2844],[2843,2843]]],[1552404923793,["KotlinD@DESKTOP-JV8VAO0",[[1,2843,"使用"]],[2843,2843],[2845,2845]]],[1552404924669,["KotlinD@DESKTOP-JV8VAO0",[[-1,2845,"用"]],[2845,2845],[2844,2844]]],[1552404956731,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404956731,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404932948,["KotlinD@DESKTOP-JV8VAO0",[[-1,2888,"与 HashMap 特性相似，不同的地方 Hashtable 是线程安全的，支持线程同步，任一时刻只有一个线程能写 Hashtable ,\n> "]],[2885,2957],[2885,2885]]],[1552404937871,["KotlinD@DESKTOP-JV8VAO0",[[1,2871,"其他"]],[2871,2871],[2873,2873]]],[1552404940626,["KotlinD@DESKTOP-JV8VAO0",[[-1,2871,"其他"]],[2873,2873],[2871,2871]]],[1552404942338,["KotlinD@DESKTOP-JV8VAO0",[[-1,2871,"与 HashMap 特性相似"],[1,2885,"w"]],[2871,2885],[2871,2872]]],[1552404943266,["KotlinD@DESKTOP-JV8VAO0",[[-1,2871,"w"],[1,2872,"無需"]],[2871,2871],[2873,2873]]],[1552404943671,["KotlinD@DESKTOP-JV8VAO0",[[-1,2871,"無需"]],[2873,2873],[2871,2871]]],[1552404956029,["KotlinD@DESKTOP-JV8VAO0",[[1,2871,"无序、key 不可重复（会覆盖）、可以存储一条 key 为 null 的数据\n- 内部使用 Node 数组+链表+红黑树的数据结构实现的\n- 如果 key 是自定义类，需要实现 hashCode() 和 equals() 方法"]],[2871,2871],[2984,2984]]],[1552404962992,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552404962992,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404961774,["KotlinD@DESKTOP-JV8VAO0",[[1,2871,"\n- "]],[2868,2868],[2871,2871]]],[1552405011005,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405011005,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552404989102,["KotlinD@DESKTOP-JV8VAO0",[[1,2871,"继承自 Dictionary，"]],[2871,2871],[2886,2886]]],[1552404994489,["KotlinD@DESKTOP-JV8VAO0",[[-1,2905,"、可以存储一条 key 为 null 的数据"]],[2905,2927],[2905,2905]]],[1552404997352,["KotlinD@DESKTOP-JV8VAO0",[[1,2886,"key"]],[2886,2886],[2889,2889]]],[1552404999131,["KotlinD@DESKTOP-JV8VAO0",[[-1,2885,"，key"]],[2889,2889],[2885,2885]]],[1552404999858,["KotlinD@DESKTOP-JV8VAO0",[[1,2888,"\n- "]],[2885,2885],[2888,2888]]],[1552405002263,["KotlinD@DESKTOP-JV8VAO0",[[1,2888,"key或"]],[2888,2888],[2892,2892]]],[1552405002304,["KotlinD@DESKTOP-JV8VAO0",[[1,2891," "]],[2892,2892],[2893,2893]]],[1552405003761,["KotlinD@DESKTOP-JV8VAO0",[[1,2893,"value"]],[2893,2893],[2898,2898]]],[1552405003801,["KotlinD@DESKTOP-JV8VAO0",[[1,2893," "]],[2898,2898],[2899,2899]]],[1552405007146,["KotlinD@DESKTOP-JV8VAO0",[[1,2899,"不能为"]],[2899,2899],[2902,2902]]],[1552405007187,["KotlinD@DESKTOP-JV8VAO0",[[1,2899," "]],[2902,2902],[2903,2903]]],[1552405008329,["KotlinD@DESKTOP-JV8VAO0",[[1,2903,"null"]],[2903,2903],[2907,2907]]],[1552405008369,["KotlinD@DESKTOP-JV8VAO0",[[1,2903," "]],[2907,2907],[2908,2908]]],[1552405010775,["KotlinD@DESKTOP-JV8VAO0",[[-1,3003,"> 因此导致效率比较差，继承自 Dictionary 类。同时也不允许记录，key 或 value 为 null 的数据。\n> 线程安全\n"]],[3002,3071],[3002,3002]]],[1552405022765,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405022765,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405019859,["KotlinD@DESKTOP-JV8VAO0",[[1,3004,"\n"]],[3003,3003],[3004,3004]]],[1552405022012,["KotlinD@DESKTOP-JV8VAO0",[[1,3004,"### ConcurrentHashMap "]],[3004,3004],[3026,3026]]],[1552405032067,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405032067,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405027822,["KotlinD@DESKTOP-JV8VAO0",[[-1,3027,"> ConcurrentHashMap 是线程安全的，实现原理如下："]],[3027,3061],[3027,3027]]],[1552405029039,["KotlinD@DESKTOP-JV8VAO0",[[-1,3027,"\n"]],[3027,3027],[3026,3026]]],[1552405030993,["KotlinD@DESKTOP-JV8VAO0",[[-1,3027,">"],[1,3028,"-"]],[3027,3027],[3028,3028]]],[1552405034547,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405034547,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405034074,["KotlinD@DESKTOP-JV8VAO0",[[-1,3095,">"],[1,3096,"-"]],[3095,3096],[3096,3096]]],[1552405044836,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405044836,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405038455,["KotlinD@DESKTOP-JV8VAO0",[[1,3003,"- \n"]],[3002,3002],[3005,3005]]],[1552405039272,["KotlinD@DESKTOP-JV8VAO0",[[-1,3003,"- "]],[3005,3005],[3004,3004]]],[1552405042229,["KotlinD@DESKTOP-JV8VAO0",[[1,3004,"###LinkedHashMap "]],[3004,3004],[3021,3021]]],[1552405042698,["KotlinD@DESKTOP-JV8VAO0",[[1,3022,"\n"]],[3021,3021],[3022,3022]]],[1552405044302,["KotlinD@DESKTOP-JV8VAO0",[[1,3007," "]],[3007,3007],[3008,3008]]],[1552405057488,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405057488,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405054389,["KotlinD@DESKTOP-JV8VAO0",[[1,3023,"- ==不是线程安全的==，可以使用 ==Map map = Collections.synchronizedMap(new HashMap());== 保证线程安全\n- 无序、key 不可重复（会覆盖）、可以存储一条 key 为 null 的数据\n- 内部使用 Node 数组+链表+红黑树的数据结构实现的\n- 如果 key 是自定义类，需要实现 hashCode() 和 equals() 方法"]],[3023,3023],[3222,3222]]],[1552405055494,["KotlinD@DESKTOP-JV8VAO0",[[1,3223,"- \n"]],[3222,3222],[3225,3225]]],[1552405056798,["KotlinD@DESKTOP-JV8VAO0",[[-1,3223,"- "]],[3225,3225],[3224,3224]]],[1552405058130,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405058130,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405057694,["KotlinD@DESKTOP-JV8VAO0",[[1,3224,"\n"]],[3224,3224],[3225,3225]]],[1552405068730,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405068730,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405066176,["KotlinD@DESKTOP-JV8VAO0",[[-1,3109,"无序"],[1,3111,"y"]],[3109,3111],[3109,3110]]],[1552405067376,["KotlinD@DESKTOP-JV8VAO0",[[-1,3109,"y"],[1,3110,"有序"]],[3109,3109],[3111,3111]]],[1552405075455,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405075455,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405074656,["KotlinD@DESKTOP-JV8VAO0",[[1,3223,"- "]],[3223,3223],[3225,3225]]],[1552405084799,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405084799,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405084286,["KotlinD@DESKTOP-JV8VAO0",[[-1,3109,"有序、"]],[3109,3112],[3109,3109]]],[1552405107617,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405107617,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405103419,["KotlinD@DESKTOP-JV8VAO0",[[1,3222,"有序的，记录了插入数据的书序"]],[3222,3222],[3236,3236]]],[1552405104275,["KotlinD@DESKTOP-JV8VAO0",[[-1,3234,"书序"]],[3236,3236],[3234,3234]]],[1552405105471,["KotlinD@DESKTOP-JV8VAO0",[[1,3234,"顺序"]],[3234,3234],[3236,3236]]],[1552405141855,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405141855,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405129216,["KotlinD@DESKTOP-JV8VAO0",[[1,3236,"，所以下"]],[3236,3236],[3240,3240]]],[1552405129505,["KotlinD@DESKTOP-JV8VAO0",[[-1,3239,"下"]],[3240,3240],[3239,3239]]],[1552405138425,["KotlinD@DESKTOP-JV8VAO0",[[1,3239,"查询速度比HashMap"]],[3239,3239],[3251,3251]]],[1552405138467,["KotlinD@DESKTOP-JV8VAO0",[[1,3244," "]],[3251,3251],[3252,3252]]],[1552405139551,["KotlinD@DESKTOP-JV8VAO0",[[1,3252,"慢"]],[3252,3252],[3253,3253]]],[1552405139593,["KotlinD@DESKTOP-JV8VAO0",[[1,3252," "]],[3253,3253],[3254,3254]]],[1552405140312,["KotlinD@DESKTOP-JV8VAO0",[[1,3254,"；"]],[3254,3254],[3255,3255]]],[1552405140791,["KotlinD@DESKTOP-JV8VAO0",[[-1,3254,"；"]],[3255,3255],[3254,3254]]],[1552405144891,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405144891,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405144709,["KotlinD@DESKTOP-JV8VAO0",[[-1,3409,"> LinkedHashMap 具有HashMap全部特性，不同的是，记录了插入数据的顺序，在使用 Iterator 遍历 LinkedHashMap 时，先得到的记录肯定是先插入的，速度比 HashMap 慢;\n"]],[3408,3515],[3408,3408]]],[1552405146755,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405146755,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405146277,["KotlinD@DESKTOP-JV8VAO0",[[-1,3409,"\n"]],[3408,3408],[3407,3407]]],[1552405152582,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405152582,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405150134,["KotlinD@DESKTOP-JV8VAO0",[[1,3409,"\n"]],[3408,3408],[3409,3409]]],[1552405152173,["KotlinD@DESKTOP-JV8VAO0",[[1,3409,"### TreeMap "]],[3409,3409],[3421,3421]]],[1552405153849,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405153849,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405153151,["KotlinD@DESKTOP-JV8VAO0",[[1,3422,"\n"]],[3421,3421],[3422,3422]]],[1552405155136,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405155136,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405154628,["KotlinD@DESKTOP-JV8VAO0",[[1,3422,"- "]],[3422,3422],[3424,3424]]],[1552405169206,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405169206,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405156788,["KotlinD@DESKTOP-JV8VAO0",[[1,3424,"shi"]],[3424,3424],[3427,3427]]],[1552405157607,["KotlinD@DESKTOP-JV8VAO0",[[-1,3424,"shi"]],[3427,3427],[3424,3424]]],[1552405159062,["KotlinD@DESKTOP-JV8VAO0",[[1,3424,"實現了"]],[3424,3424],[3427,3427]]],[1552405159990,["KotlinD@DESKTOP-JV8VAO0",[[-1,3423," 實現了"]],[3427,3427],[3423,3423]]],[1552405164290,["KotlinD@DESKTOP-JV8VAO0",[[1,3423," 实现了"]],[3423,3423],[3427,3427]]],[1552405167073,["KotlinD@DESKTOP-JV8VAO0",[[-1,3424,"实现了"]],[3427,3427],[3424,3424]]],[1552405177506,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405177506,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405176342,["KotlinD@DESKTOP-JV8VAO0",[[1,3424,"不是线程安全的"]],[3424,3424],[3431,3431]]],[1552405237522,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405237522,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405182568,["KotlinD@DESKTOP-JV8VAO0",[[-1,3409,"### TreeMap \n- 不是线程安全的\n> TreeMap 实现了 SortMap 接口，能够把保存的记录根据键排序，默认是按键值的升序排序，也可以指定比较器；\n> 当使用 Iterator 遍历 TreeMap 时，得到的记录是排序后的，不允许 kye 为 null\n> 不是线程不安全\n"]],[3408,3556],[3408,3408]]],[1552405183409,["KotlinD@DESKTOP-JV8VAO0",[[1,3260,"TreeMap \n- 不是线程安全的\n> TreeMap 实现了 SortMap 接口，能够把保存的记录根据键排序，默认是按键值的升序排序，也可以指定比较器；\n> 当使用 Iterator 遍历 TreeMap 时，得到的记录是排序后的，不允许 kye 为 null\n> 不是线程不安全\n### "]],[3255,3255],[3403,3403]]],[1552405183922,["KotlinD@DESKTOP-JV8VAO0",[[1,3404,"\n"]],[3403,3403],[3404,3404]]],[1552405204059,["KotlinD@DESKTOP-JV8VAO0",[[1,3237,"，"]],[3236,3236],[3237,3237]]],[1552405223235,["KotlinD@DESKTOP-JV8VAO0",[[1,3237,"使用Iterator"]],[3237,3237],[3247,3247]]],[1552405223277,["KotlinD@DESKTOP-JV8VAO0",[[1,3239," "]],[3247,3247],[3248,3248]]],[1552405263192,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405263192,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405243409,["KotlinD@DESKTOP-JV8VAO0",[[1,3248,"遍历"]],[3248,3248],[3250,3250]]],[1552405243451,["KotlinD@DESKTOP-JV8VAO0",[[1,3248," "]],[3250,3250],[3251,3251]]],[1552405258202,["KotlinD@DESKTOP-JV8VAO0",[[1,3251,"时先得到的记录是先插入的"]],[3251,3251],[3263,3263]]],[1552405323200,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405323200,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405278243,["KotlinD@DESKTOP-JV8VAO0",[[1,3306,"- \n"]],[3305,3305],[3308,3308]]],[1552405299514,["KotlinD@DESKTOP-JV8VAO0",[[1,3308,"吧"]],[3308,3308],[3309,3309]]],[1552405300094,["KotlinD@DESKTOP-JV8VAO0",[[-1,3308,"吧"]],[3309,3309],[3308,3308]]],[1552405303849,["KotlinD@DESKTOP-JV8VAO0",[[1,3308,"key不可以"]],[3308,3308],[3314,3314]]],[1552405303891,["KotlinD@DESKTOP-JV8VAO0",[[1,3311," "]],[3314,3314],[3315,3315]]],[1552405305892,["KotlinD@DESKTOP-JV8VAO0",[[1,3315,"重复（）"]],[3315,3315],[3319,3319]]],[1552405309300,["KotlinD@DESKTOP-JV8VAO0",[[1,3318,"会覆盖"]],[3318,3318],[3321,3321]]],[1552405318832,["KotlinD@DESKTOP-JV8VAO0",[[1,3322,"、不可以存储key"]],[3322,3322],[3331,3331]]],[1552405318874,["KotlinD@DESKTOP-JV8VAO0",[[1,3328," "]],[3331,3331],[3332,3332]]],[1552405319764,["KotlinD@DESKTOP-JV8VAO0",[[1,3332,"为"]],[3332,3332],[3333,3333]]],[1552405319805,["KotlinD@DESKTOP-JV8VAO0",[[1,3332," "]],[3333,3333],[3334,3334]]],[1552405321091,["KotlinD@DESKTOP-JV8VAO0",[[1,3334,"null"]],[3334,3334],[3338,3338]]],[1552405321132,["KotlinD@DESKTOP-JV8VAO0",[[1,3334," "]],[3338,3338],[3339,3339]]],[1552405322633,["KotlinD@DESKTOP-JV8VAO0",[[1,3339," 的数据"]],[3339,3339],[3343,3343]]],[1552405323011,["KotlinD@DESKTOP-JV8VAO0",[[1,3344,"- \n"]],[3343,3343],[3346,3346]]],[1552405383202,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405383202,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405354577,["KotlinD@DESKTOP-JV8VAO0",[[1,3346,"存入的数据需要实现 Compatator "]],[3346,3346],[3367,3367]]],[1552405359729,["KotlinD@DESKTOP-JV8VAO0",[[-1,3361,"tator "]],[3367,3367],[3361,3361]]],[1552405368589,["KotlinD@DESKTOP-JV8VAO0",[[1,3361,"rator "]],[3361,3361],[3367,3367]]],[1552405382275,["KotlinD@DESKTOP-JV8VAO0",[[-1,3366," "]],[3356,3367],[3366,3366]]],[1552405435060,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405435060,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405396834,["KotlinD@DESKTOP-JV8VAO0",[[1,3366," 接口或者 Comparable接口"]],[3366,3366],[3384,3384]]],[1552405396876,["KotlinD@DESKTOP-JV8VAO0",[[1,3382," "]],[3384,3384],[3385,3385]]],[1552405420944,["KotlinD@DESKTOP-JV8VAO0",[[1,3385,"，会按照排序后的数据"]],[3385,3385],[3395,3395]]],[1552405421692,["KotlinD@DESKTOP-JV8VAO0",[[-1,3393,"数据"]],[3395,3395],[3393,3393]]],[1552405434371,["KotlinD@DESKTOP-JV8VAO0",[[1,3393,"顺序迭代，"]],[3393,3393],[3398,3398]]],[1552405478881,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405478881,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405448300,["KotlinD@DESKTOP-JV8VAO0",[[1,3398,"所以两个要比较的k"]],[3398,3398],[3407,3407]]],[1552405448342,["KotlinD@DESKTOP-JV8VAO0",[[1,3406," "]],[3407,3407],[3408,3408]]],[1552405448574,["KotlinD@DESKTOP-JV8VAO0",[[1,3408,"ye"]],[3408,3408],[3410,3410]]],[1552405448719,["KotlinD@DESKTOP-JV8VAO0",[[1,3411,"- \n"]],[3410,3410],[3413,3413]]],[1552405450101,["KotlinD@DESKTOP-JV8VAO0",[[-1,3411,"- "]],[3413,3413],[3411,3411]]],[1552405450726,["KotlinD@DESKTOP-JV8VAO0",[[-1,3411,"\n"]],[3411,3411],[3410,3410]]],[1552405452477,["KotlinD@DESKTOP-JV8VAO0",[[1,3410,"buneng"]],[3410,3410],[3416,3416]]],[1552405453787,["KotlinD@DESKTOP-JV8VAO0",[[-1,3410,"buneng"]],[3416,3416],[3410,3410]]],[1552405454976,["KotlinD@DESKTOP-JV8VAO0",[[1,3410,"不能"]],[3410,3410],[3412,3412]]],[1552405455019,["KotlinD@DESKTOP-JV8VAO0",[[1,3410," "]],[3412,3412],[3413,3413]]],[1552405458919,["KotlinD@DESKTOP-JV8VAO0",[[1,3413,"抛出Class"]],[3413,3413],[3420,3420]]],[1552405458961,["KotlinD@DESKTOP-JV8VAO0",[[1,3415," "]],[3420,3420],[3421,3421]]],[1552405478137,["KotlinD@DESKTOP-JV8VAO0",[[1,3421,"CaseException，"]],[3421,3421],[3435,3435]]],[1552405479688,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405479688,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405479077,["KotlinD@DESKTOP-JV8VAO0",[[-1,3434,"，"]],[3435,3435],[3434,3434]]],[1552405479329,["KotlinD@DESKTOP-JV8VAO0",[[1,3434,"。"]],[3434,3434],[3435,3435]]],[1552405510571,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405510571,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405482654,["KotlinD@DESKTOP-JV8VAO0",[[1,3436,"- \n"]],[3435,3435],[3438,3438]]],[1552405491768,["KotlinD@DESKTOP-JV8VAO0",[[1,3346,"\n- "]],[3343,3343],[3346,3346]]],[1552405493376,["KotlinD@DESKTOP-JV8VAO0",[[1,3346,"shixian"]],[3346,3346],[3353,3353]]],[1552405495036,["KotlinD@DESKTOP-JV8VAO0",[[-1,3346,"shixian"]],[3353,3353],[3346,3346]]],[1552405497101,["KotlinD@DESKTOP-JV8VAO0",[[1,3346,"实现了SortMap "]],[3346,3346],[3357,3357]]],[1552405497142,["KotlinD@DESKTOP-JV8VAO0",[[1,3349," "]],[3357,3357],[3358,3358]]],[1552405509316,["KotlinD@DESKTOP-JV8VAO0",[[1,3358,"接口，默认是按键升序排列。"]],[3358,3358],[3371,3371]]],[1552405509815,["KotlinD@DESKTOP-JV8VAO0",[[-1,3370,"。"]],[3371,3371],[3370,3370]]],[1552405514082,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405514082,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405513124,["KotlinD@DESKTOP-JV8VAO0",[[-1,3463,"- > TreeMap 实现了 SortMap 接口，能够把保存的记录根据键排序，默认是按键值的升序排序，也可以指定比较器；\n> 当使用 Iterator 遍历 TreeMap 时，得到的记录是排序后的，不允许 kye 为 null\n> 不是线程不安全\n"]],[3465,3590],[3463,3463]]],[1552405513499,["KotlinD@DESKTOP-JV8VAO0",[[-1,3464,"\n"]],[3463,3463],[3462,3462]]],[1552405536974,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405536974,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405535947,["KotlinD@DESKTOP-JV8VAO0",[[1,3463,"- \n"]],[3462,3462],[3465,3465]]],[1552405536287,["KotlinD@DESKTOP-JV8VAO0",[[1,3465,"基于红黑二叉树的NavigableMap的实现"]],[3465,3465],[3488,3488]]],[1552405549798,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405549798,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405548061,["KotlinD@DESKTOP-JV8VAO0",[[-1,3644,"> "],[1,3646,"#"]],[3644,3644],[3645,3645]]],[1552405548837,["KotlinD@DESKTOP-JV8VAO0",[[1,3645,"## "]],[3645,3645],[3648,3648]]],[1552405555195,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405555195,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405551094,["KotlinD@DESKTOP-JV8VAO0",[[-1,3651,"> "]],[3651,3653],[3651,3651]]],[1552405552978,["KotlinD@DESKTOP-JV8VAO0",[[-1,3707,"> "]],[3707,3709],[3707,3707]]],[1552405554138,["KotlinD@DESKTOP-JV8VAO0",[[-1,3768,"> "]],[3768,3770],[3768,3768]]],[1552405557521,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405557521,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405556548,["KotlinD@DESKTOP-JV8VAO0",[[1,3643,"="]],[3643,3643],[3644,3644]]],[1552405556604,["KotlinD@DESKTOP-JV8VAO0",[[-1,3643,"="]],[3644,3644],[3643,3643]]],[1552405557050,["KotlinD@DESKTOP-JV8VAO0",[[-1,3643,"\n"]],[3643,3643],[3642,3642]]],[1552405574413,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405574413,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405573885,["KotlinD@DESKTOP-JV8VAO0",[[1,3298,"=="],[1,3305,"=="]],[3298,3305],[3298,3309]]],[1552405580995,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405580995,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405578476,["KotlinD@DESKTOP-JV8VAO0",[[1,3387,"=="],[1,3398,"=="]],[3387,3398],[3387,3402]]],[1552405580293,["KotlinD@DESKTOP-JV8VAO0",[[1,3407,"=="],[1,3418,"=="]],[3407,3418],[3407,3422]]],[1552405586319,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405586319,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405582294,["KotlinD@DESKTOP-JV8VAO0",[[1,3402," "]],[3402,3402],[3403,3403]]],[1552405583306,["KotlinD@DESKTOP-JV8VAO0",[[1,3387," "]],[3387,3387],[3388,3388]]],[1552405585311,["KotlinD@DESKTOP-JV8VAO0",[[1,3424," "]],[3424,3424],[3425,3425]]],[1552405589740,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405589740,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405588690,["KotlinD@DESKTOP-JV8VAO0",[[-1,3400," "]],[3401,3401],[3400,3400]]],[1552405591824,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405591824,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405591388,["KotlinD@DESKTOP-JV8VAO0",[[-1,3420," "]],[3421,3421],[3420,3420]]],[1552405633110,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405633110,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405632798,["KotlinD@DESKTOP-JV8VAO0",[[-1,3822,"\n"]],[3821,3821],[3820,3820]]],[1552405645190,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405645190,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405639322,["KotlinD@DESKTOP-JV8VAO0",[[1,3825,"-"]],[3825,3825],[3826,3826]]],[1552405640836,["KotlinD@DESKTOP-JV8VAO0",[[1,3825," "]],[3825,3825],[3826,3826]]],[1552405644288,["KotlinD@DESKTOP-JV8VAO0",[[-1,3825," -"]],[3826,3826],[3825,3825]]],[1552405647786,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405647786,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405647011,["KotlinD@DESKTOP-JV8VAO0",[[-1,3824,"#"]],[3825,3825],[3824,3824]]],[1552405731837,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405731837,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405731333,["KotlinD@DESKTOP-JV8VAO0",[[1,2888,"=="],[1,2908,"=="]],[2888,2908],[2888,2912]]],[1552405737077,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405737077,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405735645,["KotlinD@DESKTOP-JV8VAO0",[[1,2832,"=="],[1,2838,"=="]],[2832,2838],[2832,2842]]],[1552405760373,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405760373,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405752435,["KotlinD@DESKTOP-JV8VAO0",[[-1,3832," 为什么使用线程池？常见的线程池有哪些？线程池关键参数？解决什么问题？有什么业务场景？如果超出了线程池最大数量会发什么？"]],[3832,3892],[3832,3832]]],[1552405754758,["KotlinD@DESKTOP-JV8VAO0",[[1,3832," java中"]],[3832,3832],[3838,3838]]],[1552405754799,["KotlinD@DESKTOP-JV8VAO0",[[1,3837," "]],[3838,3838],[3839,3839]]],[1552405755845,["KotlinD@DESKTOP-JV8VAO0",[[-1,3833,"java 中"]],[3839,3839],[3833,3833]]],[1552405757603,["KotlinD@DESKTOP-JV8VAO0",[[1,3833,"Java中"]],[3833,3833],[3838,3838]]],[1552405757647,["KotlinD@DESKTOP-JV8VAO0",[[1,3837," "]],[3838,3838],[3839,3839]]],[1552405759980,["KotlinD@DESKTOP-JV8VAO0",[[1,3839,"的线程池"]],[3839,3839],[3843,3843]]],[1552405764159,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405764159,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405763952,["KotlinD@DESKTOP-JV8VAO0",[[-1,3848,"#"]],[3848,3849],[3848,3848]]],[1552405785732,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405785732,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405778447,["KotlinD@DESKTOP-JV8VAO0",[[-1,3876,"频繁地为每一个任务创建一个线程，缺乏统一管理，降低性能，并且容易出现问题。"]],[3876,3913],[3876,3876]]],[1552405779504,["KotlinD@DESKTOP-JV8VAO0",[[1,3859,"\n"]],[3858,3858],[3859,3859]]],[1552405781891,["KotlinD@DESKTOP-JV8VAO0",[[1,3859,"- 因爲"]],[3859,3859],[3863,3863]]],[1552405782971,["KotlinD@DESKTOP-JV8VAO0",[[-1,3860," 因爲"]],[3863,3863],[3860,3860]]],[1552405784903,["KotlinD@DESKTOP-JV8VAO0",[[1,3860," 因为频繁地为每一个任务创建一个线程，缺乏统一管理，降低性能，并且容易出现问题。"]],[3860,3860],[3900,3900]]],[1552405794979,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405794979,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405788008,["KotlinD@DESKTOP-JV8VAO0",[[-1,3905,"new Thread():"]],[3905,3918],[3905,3905]]],[1552405789148,["KotlinD@DESKTOP-JV8VAO0",[[-1,3906,"\n"]],[3905,3905],[3904,3904]]],[1552405791712,["KotlinD@DESKTOP-JV8VAO0",[[-1,3906,"线程池:\n- 可以对多个线程统一管理 ，避免资源竞争出现问题；\n- 对线程进行复用，线程执行完任务后不会立刻销毁，而会等待另外的任务，这样可以减少创建、销毁、以及GC调用。\n- Java 提供了 ExecutorService 线程池的 API，可以创建多种功能不一样的线程池，使用方便。"]],[3906,4050],[3906,3906]]],[1552405793788,["KotlinD@DESKTOP-JV8VAO0",[[-1,3901,"```\n\n\n```"],[1,3910,"线程池:\n- 可以对多个线程统一管理 ，避免资源竞争出现问题；\n- 对线程进行复用，线程执行完任务后不会立刻销毁，而会等待另外的任务，这样可以减少创建、销毁、以及GC调用。\n- Java 提供了 ExecutorService 线程池的 API，可以创建多种功能不一样的线程池，使用方便。"]],[3901,3910],[4045,4045]]],[1552405818008,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405818008,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405795299,["KotlinD@DESKTOP-JV8VAO0",[[1,4046,"- \n"]],[4045,4045],[4048,4048]]],[1552405807915,["KotlinD@DESKTOP-JV8VAO0",[[-1,3901,"线程池:"]],[3901,3904],[3901,3901]]],[1552405808278,["KotlinD@DESKTOP-JV8VAO0",[[-1,3901,"\n"]],[3901,3901],[3900,3900]]],[1552405809760,["KotlinD@DESKTOP-JV8VAO0",[[1,3903,"线程池"]],[3903,3903],[3906,3906]]],[1552405814049,["KotlinD@DESKTOP-JV8VAO0",[[1,3933,"线程池"]],[3933,3933],[3936,3936]]],[1552405819962,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405819962,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405819626,["KotlinD@DESKTOP-JV8VAO0",[[-1,4047,"- "]],[4047,4049],[4047,4047]]],[1552405859571,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552405859571,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552405854331,["KotlinD@DESKTOP-JV8VAO0",[[1,3843,"Executer"]],[3843,3843],[3851,3851]]],[1552405854374,["KotlinD@DESKTOP-JV8VAO0",[[1,3843," "]],[3851,3851],[3852,3852]]],[1552405855341,["KotlinD@DESKTOP-JV8VAO0",[[-1,3850,"er"]],[3852,3852],[3850,3850]]],[1552405859104,["KotlinD@DESKTOP-JV8VAO0",[[1,3850,"or "]],[3850,3850],[3853,3853]]],[1552406048179,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406048179,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406047428,["KotlinD@DESKTOP-JV8VAO0",[[-1,4061,"#"]],[4061,4062],[4061,4061]]],[1552406055132,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406055132,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406051795,["KotlinD@DESKTOP-JV8VAO0",[[-1,4086,"# 1"]],[4086,4089],[4086,4086]]],[1552406054281,["KotlinD@DESKTOP-JV8VAO0",[[1,4086," 1"]],[4086,4086],[4088,4088]]],[1552406084633,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406084633,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406069493,["KotlinD@DESKTOP-JV8VAO0",[[1,4167,"\n"]],[4167,4167],[4168,4168]]],[1552406074425,["KotlinD@DESKTOP-JV8VAO0",[[1,4168,"                          "]],[4168,4168],[4194,4194]]],[1552406080610,["KotlinD@DESKTOP-JV8VAO0",[[-1,4192,"  "],[-1,4212,"  "],[-1,4259,"  "],[-1,4329,"  "],[-1,4346,"  "],[-1,4407,"  "]],[4194,4463],[4192,4451]]],[1552406080988,["KotlinD@DESKTOP-JV8VAO0",[[-1,4190,"  "],[-1,4210,"  "],[-1,4255,"  "],[-1,4321,"  "],[-1,4338,"  "],[-1,4397,"  "]],[4192,4451],[4190,4439]]],[1552406081375,["KotlinD@DESKTOP-JV8VAO0",[[-1,4188,"  "],[-1,4208,"  "],[-1,4251,"  "],[-1,4313,"  "],[-1,4330,"  "],[-1,4387,"  "]],[4190,4439],[4188,4427]]],[1552406081841,["KotlinD@DESKTOP-JV8VAO0",[[-1,4186,"  "],[-1,4206,"  "],[-1,4247,"  "],[-1,4305,"  "],[-1,4322,"  "],[-1,4377,"  "]],[4188,4427],[4186,4415]]],[1552406082685,["KotlinD@DESKTOP-JV8VAO0",[[-1,4184,"  "],[-1,4204,"  "],[-1,4243,"  "],[-1,4297,"  "],[-1,4314,"  "],[-1,4367,"  "]],[4186,4415],[4184,4403]]],[1552406083121,["KotlinD@DESKTOP-JV8VAO0",[[-1,4182,"  "],[-1,4202,"  "],[-1,4239,"  "],[-1,4289,"  "],[-1,4306,"  "],[-1,4357,"  "]],[4184,4403],[4182,4391]]],[1552406098453,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406098454,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406094190,["KotlinD@DESKTOP-JV8VAO0",[[1,4199,"、、"]],[4199,4199],[4201,4201]]],[1552406094775,["KotlinD@DESKTOP-JV8VAO0",[[-1,4199,"、、"]],[4201,4201],[4199,4199]]],[1552406095592,["KotlinD@DESKTOP-JV8VAO0",[[1,4199,"//corePoolSize：线程池中的核心线程数量。"]],[4199,4199],[4226,4226]]],[1552406097841,["KotlinD@DESKTOP-JV8VAO0",[[1,4199," "]],[4199,4199],[4200,4200]]],[1552406100998,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406100998,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406099097,["KotlinD@DESKTOP-JV8VAO0",[[1,4202,"/"]],[4200,4200],[4201,4201]]],[1552406100149,["KotlinD@DESKTOP-JV8VAO0",[[-1,4202,"/"]],[4201,4201],[4200,4200]]],[1552406105377,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406105377,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406105162,["KotlinD@DESKTOP-JV8VAO0",[[-1,4202,"corePoolSize："]],[4202,4215],[4202,4202]]],[1552406114717,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406114717,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406113838,["KotlinD@DESKTOP-JV8VAO0",[[-1,4202,"线程池中的核心线程数量。"]],[4203,4214],[4202,4202]]],[1552406114111,["KotlinD@DESKTOP-JV8VAO0",[[1,4202,"核心线程数,允许同时执行任务的最大线程数"]],[4202,4202],[4222,4222]]],[1552406124574,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406124574,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406121934,["KotlinD@DESKTOP-JV8VAO0",[[1,4257,"最大线程数，允许同时处理任务的最大线程数"]],[4257,4257],[4277,4277]]],[1552406122462,["KotlinD@DESKTOP-JV8VAO0",[[-1,4257,"最大线程数，允许同时处理任务的最大线程数"]],[4277,4277],[4257,4257]]],[1552406123885,["KotlinD@DESKTOP-JV8VAO0",[[1,4257,"//最大线程数，允许同时处理任务的最大线程数"]],[4257,4257],[4279,4279]]],[1552406142633,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406142633,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406141923,["KotlinD@DESKTOP-JV8VAO0",[[1,4313,"//超出核心线程数的空闲线程的最大存活时间"]],[4313,4313],[4334,4334]]],[1552406148956,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406148956,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406148517,["KotlinD@DESKTOP-JV8VAO0",[[1,4363,"//空闲线程存活时间单位"]],[4363,4363],[4375,4375]]],[1552406160710,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406160710,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406159682,["KotlinD@DESKTOP-JV8VAO0",[[1,4424,"// 阻塞任务队列，存储待执行的任务"]],[4424,4424],[4442,4442]]],[1552406177786,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406177786,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406167390,["KotlinD@DESKTOP-JV8VAO0",[[1,4363,"                    "]],[4363,4363],[4383,4383]]],[1552406168616,["KotlinD@DESKTOP-JV8VAO0",[[-1,4363,"                    "]],[4383,4383],[4363,4363]]],[1552406170332,["KotlinD@DESKTOP-JV8VAO0",[[1,4365," "]],[4365,4365],[4366,4366]]],[1552406171147,["KotlinD@DESKTOP-JV8VAO0",[[1,4363," "]],[4363,4363],[4364,4364]]],[1552406172335,["KotlinD@DESKTOP-JV8VAO0",[[1,4313," "]],[4313,4313],[4314,4314]]],[1552406173025,["KotlinD@DESKTOP-JV8VAO0",[[1,4257," "]],[4257,4257],[4258,4258]]],[1552406173679,["KotlinD@DESKTOP-JV8VAO0",[[1,4200," "]],[4200,4200],[4201,4201]]],[1552406174867,["KotlinD@DESKTOP-JV8VAO0",[[1,4429," "]],[4429,4429],[4430,4430]]],[1552406175885,["KotlinD@DESKTOP-JV8VAO0",[[1,4203," "]],[4203,4203],[4204,4204]]],[1552406176551,["KotlinD@DESKTOP-JV8VAO0",[[1,4262," "]],[4262,4262],[4263,4263]]],[1552406177108,["KotlinD@DESKTOP-JV8VAO0",[[1,4320," "]],[4320,4320],[4321,4321]]],[1552406205776,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406205776,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406181608,["KotlinD@DESKTOP-JV8VAO0",[[1,4201,"   "]],[4201,4201],[4204,4204]]],[1552406183948,["KotlinD@DESKTOP-JV8VAO0",[[-1,4203," "]],[4204,4204],[4203,4203]]],[1552406189027,["KotlinD@DESKTOP-JV8VAO0",[[-1,4261," "]],[4262,4262],[4261,4261]]],[1552406199122,["KotlinD@DESKTOP-JV8VAO0",[[1,4260," "]],[4260,4260],[4261,4261]]],[1552406200510,["KotlinD@DESKTOP-JV8VAO0",[[-1,4260," "]],[4261,4261],[4260,4260]]],[1552406201092,["KotlinD@DESKTOP-JV8VAO0",[[1,4261," "]],[4261,4261],[4262,4262]]],[1552406202215,["KotlinD@DESKTOP-JV8VAO0",[[1,4320," "]],[4320,4320],[4321,4321]]],[1552406204972,["KotlinD@DESKTOP-JV8VAO0",[[1,4373,"      "]],[4373,4373],[4379,4379]]],[1552406221543,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406221543,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406218298,["KotlinD@DESKTOP-JV8VAO0",[[1,4502,"\n              "]],[4502,4502],[4517,4517]]],[1552406220604,["KotlinD@DESKTOP-JV8VAO0",[[-1,4511,"      "]],[4517,4517],[4511,4511]]],[1552406224955,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406224955,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406224081,["KotlinD@DESKTOP-JV8VAO0",[[1,4502," // 线程工厂，用于创建线程，可指定线程命名规则"]],[4502,4502],[4527,4527]]],[1552406245215,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406245215,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406236662,["KotlinD@DESKTOP-JV8VAO0",[[1,4502,"，"]],[4502,4502],[4503,4503]]],[1552406238433,["KotlinD@DESKTOP-JV8VAO0",[[-1,4502,"，"]],[4503,4503],[4502,4502]]],[1552406239078,["KotlinD@DESKTOP-JV8VAO0",[[1,4502,","]],[4502,4502],[4503,4503]]],[1552406241380,["KotlinD@DESKTOP-JV8VAO0",[[1,4537,"      \n        "]],[4528,4528],[4543,4543]]],[1552406241831,["KotlinD@DESKTOP-JV8VAO0",[[1,4543,"RejectedExecutionHandler handler // 饱和策略(拒绝策略)，当线程池阻塞队列已满时对新任务的处理"]],[4543,4543],[4608,4608]]],[1552406268550,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406268550,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406254058,["KotlinD@DESKTOP-JV8VAO0",[[-1,4531,"            "]],[4533,4543],[4531,4531]]],[1552406256492,["KotlinD@DESKTOP-JV8VAO0",[[1,4531,"            "]],[4531,4531],[4533,4543]]],[1552406262406,["KotlinD@DESKTOP-JV8VAO0",[[-1,4588,")，"]],[4590,4590],[4588,4588]]],[1552406267903,["KotlinD@DESKTOP-JV8VAO0",[[1,4588,"），"]],[4588,4588],[4590,4590]]],[1552406289449,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406289449,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406288042,["KotlinD@DESKTOP-JV8VAO0",[[-1,4643,"- corePoolSize：线程池中的核心线程数量。\n- maximumPoolSize：线程池中最大线程数量。\n- keepAliveTime：非核心线程空闲存活时间，如果任务很多，每个任务执行时间很短，可以调大这个数值，有助于提高线程利用率。\n- unit:keepAliveTime 单位。\n- workQueue：任务队列。如果任务队列超出了这个长度才会开启非核心线程。\n- threadFactory：线程工厂，可用于设置线程名字等，一般可以不设置这个。"]],[4643,4876],[4643,4643]]],[1552406288450,["KotlinD@DESKTOP-JV8VAO0",[[-1,4644,"\n"]],[4643,4643],[4642,4642]]],[1552406308669,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406308669,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406307978,["KotlinD@DESKTOP-JV8VAO0",[[-1,4647,"#"]],[4647,4648],[4647,4647]]],[1552406312372,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406312372,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406311485,["KotlinD@DESKTOP-JV8VAO0",[[-1,4682,">"],[1,4683,"- "]],[4682,4683],[4684,4684]]],[1552406322894,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406322894,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406322221,["KotlinD@DESKTOP-JV8VAO0",[[1,4717,"=="],[1,4743,"=="]],[4717,4743],[4717,4747]]],[1552406353022,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406353022,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406338736,["KotlinD@DESKTOP-JV8VAO0",[[-1,4644,"### 如果超出了线程池最大数（maximumPoolSize）会发什么？\n-  如果线程池中的线程超过了这个数值，则拒绝执行该任务，并抛出异常 ==RejectedExecutionException== "]],[4644,4748],[4644,4644]]],[1552406339401,["KotlinD@DESKTOP-JV8VAO0",[[-1,4645,"\n"]],[4644,4644],[4643,4643]]],[1552406339587,["KotlinD@DESKTOP-JV8VAO0",[[-1,4644,"\n"]],[4643,4643],[4642,4642]]],[1552406346405,["KotlinD@DESKTOP-JV8VAO0",[[1,4057,"### 如果超出了线程池最大数（maximumPoolSize）会发什么？\n-  如果线程池中的线程超过了这个数值，则拒绝执行该任务，并抛出异常 ==RejectedExecutionException== "]],[4057,4057],[4161,4161]]],[1552406348159,["KotlinD@DESKTOP-JV8VAO0",[[-1,4057,"### 如果超出了线程池最大数（maximumPoolSize）会发什么？\n-  如果线程池中的线程超过了这个数值，则拒绝执行该任务，并抛出异常 ==RejectedExecutionException== "]],[4161,4161],[4057,4057]]],[1552406349883,["KotlinD@DESKTOP-JV8VAO0",[[1,4057,"### 如果超出了线程池最大数（maximumPoolSize）会发什么？\n-  如果线程池中的线程超过了这个数值，则拒绝执行该任务，并抛出异常 ==RejectedExecutionException== "]],[4057,4057],[4161,4161]]],[1552406350324,["KotlinD@DESKTOP-JV8VAO0",[[1,4162,"- \n"]],[4161,4161],[4164,4164]]],[1552406352275,["KotlinD@DESKTOP-JV8VAO0",[[-1,4162,"- "]],[4164,4164],[4162,4162]]],[1552406358393,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406358393,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406356094,["KotlinD@DESKTOP-JV8VAO0",[[1,4057,"- \n"]],[4056,4056],[4059,4059]]],[1552406357519,["KotlinD@DESKTOP-JV8VAO0",[[-1,4057,"- "]],[4059,4059],[4057,4057]]],[1552406374872,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406374872,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406371219,["KotlinD@DESKTOP-JV8VAO0",[[-1,4783,">"],[1,4784,"-"]],[4783,4784],[4784,4784]]],[1552406373869,["KotlinD@DESKTOP-JV8VAO0",[[-1,4802,">"]],[4803,4803],[4802,4802]]],[1552406374111,["KotlinD@DESKTOP-JV8VAO0",[[1,4802,"-"]],[4802,4802],[4803,4803]]],[1552406400603,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406400603,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406381721,["KotlinD@DESKTOP-JV8VAO0",[[-1,5214,"# "]],[5214,5216],[5214,5214]]],[1552406386353,["KotlinD@DESKTOP-JV8VAO0",[[-1,4754,"#"]],[4755,4755],[4754,4754]]],[1552406386470,["KotlinD@DESKTOP-JV8VAO0",[[1,4755," "]],[4754,4754],[4755,4755]]],[1552406387913,["KotlinD@DESKTOP-JV8VAO0",[[-1,4755," "]],[4755,4755],[4754,4754]]],[1552406389835,["KotlinD@DESKTOP-JV8VAO0",[[-1,5213,"3"],[1,5214," "]],[5213,5213],[5214,5214]]],[1552406391931,["KotlinD@DESKTOP-JV8VAO0",[[1,5214,"3"]],[5214,5214],[5215,5215]]],[1552406394061,["KotlinD@DESKTOP-JV8VAO0",[[1,5214," "]],[5213,5213],[5214,5214]]],[1552406395409,["KotlinD@DESKTOP-JV8VAO0",[[-1,5214," 3"]],[5214,5214],[5214,5214]]],[1552406395729,["KotlinD@DESKTOP-JV8VAO0",[[1,5213,"3"],[-1,5213," "]],[5214,5214],[5213,5213]]],[1552406400081,["KotlinD@DESKTOP-JV8VAO0",[[1,5213," "]],[5213,5213],[5214,5214]]],[1552406407628,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406407628,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406403944,["KotlinD@DESKTOP-JV8VAO0",[[-1,5238,"> "],[1,5240,"-"]],[5238,5240],[5239,5239]]],[1552406404363,["KotlinD@DESKTOP-JV8VAO0",[[1,5239," "]],[5239,5239],[5240,5240]]],[1552406406738,["KotlinD@DESKTOP-JV8VAO0",[[-1,5257,">"],[1,5258,"-"]],[5257,5258],[5258,5258]]],[1552406409599,[null,[[-1,357,"  "],[1,428,"ue"]],[357,357],[430,430]]],[1552406409599,[null,[[1,357,"  "],[-1,426,"ue"]],[430,430],[357,357]]],[1552406409096,["KotlinD@DESKTOP-JV8VAO0",[[-1,5320,">"],[1,5321,"-"]],[5320,5321],[5321,5321]]]],null,"KotlinD@DESKTOP-JV8VAO0"],["bb4118c7-42a2-473e-a31f-d79904f70ff2",1552485429442,"# Java中的集合类有哪些。区别是什么，如何保证安全性。\n## Collection、Map:\n- Collection ：List、Set，区别是 List 有序&可重复，而 Set 无序&不可重复。\n- Map 为key-value的对应关系，key不可以重复\n\n## List\n- List 接口是有序可重复的 Collection 接口实现，可以通过索引来访问 List 中的元素；\n- 实现类 LinkedList、ArrayList、Vector；\n\n### LinkedList \n- ==不是线程安全的==，可以使用 ==List list = Collections.synchronizedList(new LinkedList());== 保证线程安全\n- 有序、素可重复、允许 null\n- 提供了 get、remove、insert、方法在 LinedList 首部或尾部操作数据，所以可以作为：堆栈（stack）、队列（queue）、双向队列（deque）\n- 内部实现使用的是链表数据结构，元素之间使用指针引用关联\n\n### ArrayList \n- ==不是线程安全的==，可以使用 ==List list = Collections.synchronizedList(new LinkedList());== 保证线程安全\n- 有序、元素可重复、允许 null\n- 内部实现使用的是数组，初始容量为 10，扩容增长为原来的 1.5 倍，grow 方法中数据转移使用==Arrays.copyof(elementData,newCapacity)==\n\n### Vector \n- ==是线程安全的==，内部的操作方法都是用 synchronized 进行修饰来\n- 如果 Vector 创建的 Iterator 被使用的时候，另一个线程改变 Vector 状态，会抛出 ==ConcurrentModificationException== ，因此必须捕获这个异常。\n- 内部实现使用的是数组，初始默认容量为 10，扩容增长为原来的 2 倍，数据转移使用==Arrays.copyof(elementData,newCapacity)==\n\n### 使用场景：\n- 当需要快速插入、删除元素，应该使用 LinkedList，如果需要快速随机访问元素，应该使用 ArrayList。\n- 如果是单个线程使用，需要效率更更高。使用 ArrayList\n- 如果是多线程同时操作，应该使用线程安全的类。LinkedList\n- 使用的时候尽量的使用接口类声明，例如：List。目的是考虑到以后业务变成，由ArrayList 替换成了LinkedList，减少代码的修改。\n\n### 总结 ArrayList & LinkedList\n- ArrayList 是基于动态数组的数据结构，LinkedList是基于链表的数据结构；\n- 随机访问数据，get和set，ArrayList更优于 LinkedList ，因为 LinkedList 是链表结构，需要移动指针，效率更低；\n- 对于新增和删除操作：\n    - 如果只是对单条数据插入或删除，ArrayList 速度更快些。\n    - 如果是批量随机的插入或删除数据，LinkedList 速度更快些。\n    - 原因是 ArrayList 每插入一条数据就要移动插入点及后面的所有数据，效率更低，而 LinkedList 只需要替换插入点的前后指针引用即可完成操作；\n\n### 总结 Vector 和 ArrayList\n- Vector 是线程同步的，所以是线程安全的，而 ArrayList 是线程异步的，不是线程安全的。通过源码看到，Vector 在操作的方法前使用 synchronized 进行同步操作\n- 默认情况下，在进行添加元素操作的时候，如果元素数目大于当前的集合数组的长度时，Vector 增长率为目前数组的 100% ，而 ArrayList 为 50%，同时 Vector 在创建时支持指定增长容量\n- 如果查找一个指定位置的数据， Vector 和 ArrayList 的使用时间是相同的O(1)。但移动一个指定未知的数据使用的时间是 O(n-1),n为总长度，这个时候就会考虑使用 LinkedList ，因为它使用的时间为O(1),而查询指定位置数据使用的时间为O(i)\n- ArrayList 和 Vector 都是采用数组的方式进行存储的，且数组元素数量大于实际存储的数据，以便增加或插入，可以直接通过索引访问元素。\n- Vector 由于使用了 synchronized 方法所以性能上会比 ArrayList 差一些，LinkedList 使用的是双链表实现的存储，按照序号索引数据可以进行向前或向后遍历，但是插入数据时只需要记录当前元素的前后项即可，所以插入速度更快些。\n\n## Set\n- Set 接口是无序不可重复 Collection 接口实现，\n- 实现类有，HashSet、TreeSet\n\n### HashSet \n- ==不是线程安全的==，可以使用 ==Set set = Collections.synchronizedSet(new HashSet());== 保证线程安全\n- 无序、不可重复、可以存储 null\n- 通过哈希算法实现防止重复\n- 存放元素使用 key-value 形式\n- 基于 HashMap 实现的\n\n### TreeSet \n- ==不是线程安全的==，可以使用 ==Set set = Collections.synchronizedSet(new TreeSet());== 保证线程安全\n- 有序、不可重复、不可存储 null\n- 与 HashSet 相比较，多了排序算法，默认使用元素的自然数序，也可以根据创建 set 时设置的 Comparator 进行排序。\n- 是基于 TreeMap 的 NavigableSet 实现的。底层数据结构是二叉树。\n\n## Map\n- key-value 形式存在，key不能重复。\n- 实现类有，HashMap、TreeMap、LinkedHashMap、Hashtable\n\n### HashMap \n- ==不是线程安全的==，可以使用 ==Map map = Collections.synchronizedMap(new HashMap());== 保证线程安全\n- 无序、key 不可重复（会覆盖）、可以存储一条 key 为 null 的数据\n- 内部使用 Node 数组+链表+红黑树的数据结构实现的\n- 如果 key 是自定义类，需要实现 hashCode() 和 equals() 方法\n\n### Hashtable \n- ==是线程安全的==，操作方法使用 ==synchronized== 进行了修饰\n- 继承自 Dictionary\n- ==key 或 value 不能为 null==\n- 无序、key 不可重复（会覆盖）\n- 内部使用 Node 数组+链表+红黑树的数据结构实现的\n- 如果 key 是自定义类，需要实现 hashCode() 和 equals() 方法\n\n### LinkedHashMap \n- ==不是线程安全的==，可以使用 ==Map map = Collections.synchronizedMap(new HashMap());== 保证线程安全\n- key 不可重复（会覆盖）、可以存储一条 key 为 null 的数据\n- 内部使用 Node 数组+链表+红黑树的数据结构实现的\n- 如果 key 是自定义类，需要实现 hashCode() 和 equals() 方法\n- 有序的，记录了插入数据的顺序，使用 Iterator 遍历时先得到的记录是先插入的，所以查询速度比 HashMap 慢\n\n### TreeMap \n- ==不是线程安全的==\n- key 不可以重复（会覆盖）、不可以存储 key 为 null 的数据\n- 实现了 SortMap 接口，默认是按键升序排列\n- 存入的数据需要实现  ==Comparator== 接口或者 ==Comparable== 接口，会按照排序后的顺序迭代，所以两个要比较的 kye 不能抛出 ClassCaseException。\n- 基于红黑二叉树的NavigableMap的实现\n\n### ConcurrentHashMap \n- 使用锁分离思想，只锁住一个node，而锁住的Node之前的操作是基于在 volatile 和 CAS算法 之上无锁并且线程安全的；\n- CAS 是一种算法，基本思想就是不断的去比较当前内存中的变量值与指定的一个变量值是否相等，如果相等则接受，否则拒绝。\n\n### 总结\n- 当在Map中插入、删除、定位元素，HashMap 速度比较快，因为是无序的，通过 HashCode 定位；\n- 如果需要自然然排序或自定义排序，TreeMap 是最好的选择，因为它实现了 SortMap 默认按照key升序排序；\n- 如果需要输出数据与输入时候相同，LinkedHashMap 是比较好的选择。\n\n## Java 中的线程池 Executor \n\n### 为什么使用线程池？\n- 因为频繁地为每一个任务创建一个线程，缺乏统一管理，降低性能，并且容易出现问题。\n- 线程池可以对多个线程统一管理 ，避免资源竞争出现问题；\n- 线程池对线程进行复用，线程执行完任务后不会立刻销毁，而会等待另外的任务，这样可以减少创建、销毁、以及GC调用。\n- Java 提供了 ExecutorService 线程池的 API，可以创建多种功能不一样的线程池，使用方便。\n\n### 如果超出了线程池最大数（maximumPoolSize）会发什么？\n-  如果线程池中的线程超过了这个数值，则拒绝执行该任务，并抛出异常 ==RejectedExecutionException== \n\n### 常见的线程池有哪些？ 线程池关键参数？\n#### 1、ThreadPoolExecutor 基本线程\n使用这个类创建线程池，构造方法参数如下\n```java\npublic ThreadPoolExecutor(\n              int corePoolSize,    // 核心线程数,允许同时执行任务的最大线程数\n              int maximumPoolSize, // 最大线程数，允许同时处理任务的最大线程数\n              long keepAliveTime,  // 超出核心线程数的空闲线程的最大存活时间\n              TimeUnit unit,       // 空闲线程存活时间单位\n              BlockingQueue<Runnable> workQueue, // 阻塞任务队列，存储待执行的任务\n              ThreadFactory threadFactory, // 线程工厂，用于创建线程，可指定线程命名规则\n              RejectedExecutionHandler handler // 饱和策略(拒绝策略），当线程池阻塞队列已满时对新任务的处理\n        ) {\n        ...\n    }\n```\n\n#### 2、FixedThreadPool 可重用固定线程数\n- Executors 中的创建方法\n- 特点：参数为核心线程数，只有核心线程，没有非核心线程，并且阻塞队列没有边界限制\n```java\n public static ExecutorService newFixedThreadPool(int nThreads, ThreadFactory threadFactory) {\n        return new ThreadPoolExecutor(nThreads, nThreads,\n                                      0L, TimeUnit.MILLISECONDS,\n                                      new LinkedBlockingQueue<Runnable>(),\n                                      threadFactory);\n    }\n```\n\n#### 3、CachedThreadPool 按需创建\n- Executors 中的创建方法\n- 特点：没有核心线程，只有非核心线程，并且每个非核心线程空闲等待的时间为60秒，采用SynchronousQueue队列；\n- 由于没有设置最大线程数限制，如果提交速度大于执行速度，则会一直创建新的线程，需要注意，应该采取措施调整两边的速度，因为太多的线程会影响性能；\n\n```java\npublic static ExecutorService newCachedThreadPool() {\n        return new ThreadPoolExecutor(0, Integer.MAX_VALUE,\n                                      60L, TimeUnit.SECONDS,\n                                      new SynchronousQueue<Runnable>());\n    }\n```\n\n\n安卓应用间可以进行通讯的方式有哪些，有什么区别。\n\n安卓广播机制有哪些，区别是什么。\n\nJava中的集合类有哪些。区别是什么，如何保证安全性。\n\nAndroid的集合类有哪些？如何保证安全性，有什么好处。\n\n做过哪些安卓性能优化？\n\n如何检测应用卡顿，如何优化？\n\n造成安卓oom的原因有哪些？如何处理。\n\nRxJava的实现机制，如何处理背压。\n\nRetureFate实现原理\n\n对现在存在的Glide还有哪些优化方案？\n\n安卓中的内存泄漏如何解决，为什么会造成内存泄漏？\n\n如何检测内存泄漏？\n\n点击桌面应用图标之后发什么什么，回调了哪些方法。\n\njava中的lock相关。\n\nActivity  与 Fragment 相关生命周期对照\n\n能不能试用Applaction启动一个Activity为什么不能？\n\nAMS，PMS，WMS\n\n文件存储，分别使用的场景，SP是线程安全的么？是进程安全的么？如何保证安全性",[[1552485421469,["KotlinD@DESKTOP-JV8VAO0",[[1,5660,"An"]],[5660,5660],[5659,5662]]],[1552485422202,["KotlinD@DESKTOP-JV8VAO0",[[-1,5659,"\n"],[-1,5662,"\n"],[1,5663,"droid"]],[5659,5659],[5666,5666]]],[1552485423872,["KotlinD@DESKTOP-JV8VAO0",[[-1,5658,"`Android"]],[5666,5666],[5658,5658]]],[1552485424156,["KotlinD@DESKTOP-JV8VAO0",[[1,5659,"\n"]],[5658,5658],[5659,5659]]],[1552485426807,["KotlinD@DESKTOP-JV8VAO0",[[1,5656,"·"]],[5656,5656],[5657,5657]]],[1552485427521,["KotlinD@DESKTOP-JV8VAO0",[[-1,5656,"·"]],[5657,5657],[5656,5656]]],[1552485427938,["KotlinD@DESKTOP-JV8VAO0",[[1,5658,"`"]],[5656,5656],[5657,5657]]],[1552485438525,["KotlinD@DESKTOP-JV8VAO0",[[1,5661,"\n"]],[5660,5660],[5661,5661]]],[1552485438712,["KotlinD@DESKTOP-JV8VAO0",[[1,5662,"\n"]],[5661,5661],[5662,5662]]],[1552485442658,["KotlinD@DESKTOP-JV8VAO0",[[1,5660,"### "]],[5660,5660],[5664,5664]]],[1552485448625,["KotlinD@DESKTOP-JV8VAO0",[[1,5664,"Android na"]],[5664,5664],[5674,5674]]],[1552485449231,["KotlinD@DESKTOP-JV8VAO0",[[-1,5672,"na"]],[5674,5674],[5672,5672]]],[1552485452818,["KotlinD@DESKTOP-JV8VAO0",[[1,5672,"那些地方使用"]],[5672,5672],[5678,5678]]],[1552485455033,["KotlinD@DESKTOP-JV8VAO0",[[-1,5672,"那些地方使用"]],[5678,5678],[5672,5672]]],[1552485460544,["KotlinD@DESKTOP-JV8VAO0",[[1,5672,"哪些地方使用綫程池"]],[5672,5672],[5681,5681]]],[1552485463228,["KotlinD@DESKTOP-JV8VAO0",[[-1,5676,"使用綫程池"]],[5681,5681],[5676,5676]]],[1552485468962,["KotlinD@DESKTOP-JV8VAO0",[[1,5676,"使用线程池"]],[5676,5676],[5681,5681]]],[1552485469319,["KotlinD@DESKTOP-JV8VAO0",[[1,5684,"\n"]],[5681,5681],[5682,5682]]],[1552485923668,["KotlinD@DESKTOP-JV8VAO0",[[1,4057,"- \n"]],[4056,4056],[4059,4059]]],[1552485924354,["KotlinD@DESKTOP-JV8VAO0",[[1,4057,"  "]],[4059,4059],[4061,4061]]],[1552485955119,["KotlinD@DESKTOP-JV8VAO0",[[1,4061,"西安"]],[4061,4061],[4063,4063]]],[1552485956643,["KotlinD@DESKTOP-JV8VAO0",[[-1,4061,"西安"]],[4063,4063],[4061,4061]]],[1552485984904,["KotlinD@DESKTOP-JV8VAO0",[[1,4061,"线程的创建和销毁由线程池维护，一个线程执行完成之后不会立即销毁，"]],[4061,4061],[4093,4093]]],[1552485995659,["KotlinD@DESKTOP-JV8VAO0",[[1,4093,"而是由后续的任务复用这个线程，"]],[4093,4093],[4108,4108]]],[1552485997234,["KotlinD@DESKTOP-JV8VAO0",[[-1,4107,"，"]],[4108,4108],[4107,4107]]],[1552486003757,["KotlinD@DESKTOP-JV8VAO0",[[1,4107,"，从而减少此案称"]],[4107,4107],[4115,4115]]],[1552486004313,["KotlinD@DESKTOP-JV8VAO0",[[-1,4112,"此案称"]],[4115,4115],[4112,4112]]],[1552486015006,["KotlinD@DESKTOP-JV8VAO0",[[1,4112,"线程的创建和销毁，节约系统的开销"]],[4112,4112],[4128,4128]]],[1552486016913,["KotlinD@DESKTOP-JV8VAO0",[[1,4129,"  - \n"]],[4128,4128],[4133,4133]]],[1552486046219,["KotlinD@DESKTOP-JV8VAO0",[[1,4133,"在执行大量异步任务的时候提高性能。"]],[4133,4133],[4150,4150]]],[1552486046597,["KotlinD@DESKTOP-JV8VAO0",[[-1,4149,"。"]],[4150,4150],[4149,4149]]],[1552486046816,["KotlinD@DESKTOP-JV8VAO0",[[1,4150,"  - \n"]],[4149,4149],[4154,4154]]],[1552486057911,["KotlinD@DESKTOP-JV8VAO0",[[-1,4152,"- "]],[4154,4154],[4152,4152]]],[1552486061521,["KotlinD@DESKTOP-JV8VAO0",[[-1,4057,"  - 线程的创建和销毁由线程池维护，一个线程执行完成之后不会立即销毁，而是由后续的任务复用这个线程，从而减少线程的创建和销毁，节约系统的开销\n  - 在执行大量异步任务的时候提高性能"],[1,4149,"！"]],[4057,4057],[4058,4058]]],[1552486062481,["KotlinD@DESKTOP-JV8VAO0",[[1,4057,"  - 线程的创建和销毁由线程池维护，一个线程执行完成之后不会立即销毁，而是由后续的任务复用这个线程，从而减少线程的创建和销毁，节约系统的开销\n  - 在执行大量异步任务的时候提高性能"],[-1,4057,"！"]],[4058,4058],[4057,4057]]],[1552486065260,["KotlinD@DESKTOP-JV8VAO0",[[-1,4057,"  "],[-1,4129,"  "],[-1,4150,"  "]],[4057,4152],[4057,4146]]],[1552486069088,["KotlinD@DESKTOP-JV8VAO0",[[-1,4057,"- 线程的创建和销毁由线程池维护，一个线程执行完成之后不会立即销毁，而是由后续的任务复用这个线程，从而减少线程的创建和销毁，节约系统的开销\n- 在执行大量异步任务的时候提高性能"]],[4057,4145],[4057,4057]]],[1552486069925,["KotlinD@DESKTOP-JV8VAO0",[[1,4001,"\n- "]],[3998,3998],[4001,4001]]],[1552486070231,["KotlinD@DESKTOP-JV8VAO0",[[1,4001,"- 线程的创建和销毁由线程池维护，一个线程执行完成之后不会立即销毁，而是由后续的任务复用这个线程，从而减少线程的创建和销毁，节约系统的开销\n- 在执行大量异步任务的时候提高性能"]],[4001,4001],[4089,4089]]],[1552486073701,["KotlinD@DESKTOP-JV8VAO0",[[-1,4001,"- 线程的创建和销毁由线程池维护，一个线程执行完成之后不会立即销毁，而是由后续的任务复用这个线程，从而减少线程的创建和销毁，节约系统的开销\n- 在执行大量异步任务的时候提高性能\n- "]],[4089,4089],[3998,3998]]],[1552486074562,["KotlinD@DESKTOP-JV8VAO0",[[1,4001,"\n- "]],[3998,3998],[4001,4001]]],[1552486075154,["KotlinD@DESKTOP-JV8VAO0",[[-1,4000," "]],[4001,4001],[4000,4000]]],[1552486075462,["KotlinD@DESKTOP-JV8VAO0",[[1,4000,"- 线程的创建和销毁由线程池维护，一个线程执行完成之后不会立即销毁，而是由后续的任务复用这个线程，从而减少线程的创建和销毁，节约系统的开销\n- 在执行大量异步任务的时候提高性能"]],[4000,4000],[4088,4088]]],[1552486076205,["KotlinD@DESKTOP-JV8VAO0",[[-1,4000,"- 线程的创建和销毁由线程池维护，一个线程执行完成之后不会立即销毁，而是由后续的任务复用这个线程，从而减少线程的创建和销毁，节约系统的开销\n- 在执行大量异步任务的时候提高性能"]],[4088,4088],[4000,4000]]],[1552486076503,["KotlinD@DESKTOP-JV8VAO0",[[1,4000," "]],[4000,4000],[4001,4001]]],[1552486077096,["KotlinD@DESKTOP-JV8VAO0",[[-1,3999,"- "]],[4001,4001],[3999,3999]]],[1552486077391,["KotlinD@DESKTOP-JV8VAO0",[[1,3999,"- 线程的创建和销毁由线程池维护，一个线程执行完成之后不会立即销毁，而是由后续的任务复用这个线程，从而减少线程的创建和销毁，节约系统的开销\n- 在执行大量异步任务的时候提高性能"]],[3999,3999],[4087,4087]]],[1552486648061,["KotlinD@DESKTOP-JV8VAO0",[[1,4841,"\n"]],[4840,4840],[4841,4841]]],[1552486648235,["KotlinD@DESKTOP-JV8VAO0",[[1,4842,"\n"]],[4841,4841],[4842,4842]]],[1552486654049,["KotlinD@DESKTOP-JV8VAO0",[[1,4840,"- "]],[4840,4840],[4842,4842]]],[1552486668615,["KotlinD@DESKTOP-JV8VAO0",[[1,4842,"corePoolSize：核心池"]],[4842,4842],[4858,4858]]],[1552486670270,["KotlinD@DESKTOP-JV8VAO0",[[-1,4857,"池"]],[4858,4858],[4857,4857]]],[1552486678614,["KotlinD@DESKTOP-JV8VAO0",[[1,4857,"线程的数量，在创建得了"]],[4857,4857],[4868,4868]]],[1552486680338,["KotlinD@DESKTOP-JV8VAO0",[[-1,4866,"得了"]],[4868,4868],[4866,4866]]],[1552486684048,["KotlinD@DESKTOP-JV8VAO0",[[1,4866,"了线程值"]],[4866,4866],[4870,4870]]],[1552486684405,["KotlinD@DESKTOP-JV8VAO0",[[-1,4869,"值"]],[4870,4870],[4869,4869]]],[1552486700747,["KotlinD@DESKTOP-JV8VAO0",[[1,4869,"池之后，默认情况下，线程池中并没有任何线程，"]],[4869,4869],[4891,4891]]],[1552486727754,["KotlinD@DESKTOP-JV8VAO0",[[1,4891,"而是等待有任务放到"]],[4891,4891],[4900,4900]]],[1552486730857,["KotlinD@DESKTOP-JV8VAO0",[[-1,4898,"放到"]],[4900,4900],[4898,4898]]],[1552486734438,["KotlinD@DESKTOP-JV8VAO0",[[1,4898,"到来的是偶"]],[4898,4898],[4903,4903]]],[1552486737147,["KotlinD@DESKTOP-JV8VAO0",[[-1,4900,"的是偶"]],[4903,4903],[4900,4900]]],[1552486740965,["KotlinD@DESKTOP-JV8VAO0",[[1,4900,"时才会创建"]],[4900,4900],[4905,4905]]],[1552486741479,["KotlinD@DESKTOP-JV8VAO0",[[-1,4902,"会创建"]],[4905,4905],[4902,4902]]],[1552486749708,["KotlinD@DESKTOP-JV8VAO0",[[1,4902,"创建线程无执行任务"]],[4902,4902],[4911,4911]]],[1552486752682,["KotlinD@DESKTOP-JV8VAO0",[[-1,4904,"线程无执行任务"]],[4911,4911],[4904,4904]]],[1552486754218,["KotlinD@DESKTOP-JV8VAO0",[[1,4904,"纤尘提高"]],[4904,4904],[4908,4908]]],[1552486755330,["KotlinD@DESKTOP-JV8VAO0",[[-1,4904,"纤尘提高"]],[4908,4908],[4904,4904]]],[1552486761030,["KotlinD@DESKTOP-JV8VAO0",[[1,4904,"线程去执行任务 ，"]],[4904,4904],[4913,4913]]],[1552486761896,["KotlinD@DESKTOP-JV8VAO0",[[-1,4911," ，"]],[4913,4913],[4911,4911]]],[1552486778954,["KotlinD@DESKTOP-JV8VAO0",[[1,4911,"，当线程池中的线程数目达到core"]],[4911,4911],[4928,4928]]],[1552486778993,["KotlinD@DESKTOP-JV8VAO0",[[1,4924," "]],[4928,4928],[4929,4929]]],[1552486786960,["KotlinD@DESKTOP-JV8VAO0",[[1,4929,"PoolSize之后"]],[4929,4929],[4939,4939]]],[1552486786999,["KotlinD@DESKTOP-JV8VAO0",[[1,4937," "]],[4939,4939],[4940,4940]]],[1552486812683,["KotlinD@DESKTOP-JV8VAO0",[[1,4940,"，就会把达到的任务放到缓存队列BlockingQuequ"]],[4940,4940],[4968,4968]]],[1552486812722,["KotlinD@DESKTOP-JV8VAO0",[[1,4955," "]],[4968,4968],[4969,4969]]],[1552486818578,["KotlinD@DESKTOP-JV8VAO0",[[1,4969," 中，"]],[4969,4969],[4972,4972]]],[1552486820463,["KotlinD@DESKTOP-JV8VAO0",[[-1,4971,"，"]],[4972,4972],[4971,4971]]],[1552486820676,["KotlinD@DESKTOP-JV8VAO0",[[1,4971,"，"]],[4971,4971],[4972,4972]]],[1552486829385,["KotlinD@DESKTOP-JV8VAO0",[[1,4972,"只有当工作队列慢"]],[4972,4972],[4980,4980]]],[1552486829767,["KotlinD@DESKTOP-JV8VAO0",[[-1,4979,"慢"]],[4980,4980],[4979,4979]]],[1552486831239,["KotlinD@DESKTOP-JV8VAO0",[[1,4979,"满了，"]],[4979,4979],[4982,4982]]],[1552486833521,["KotlinD@DESKTOP-JV8VAO0",[[-1,4981,"，"]],[4982,4982],[4981,4981]]],[1552486845204,["KotlinD@DESKTOP-JV8VAO0",[[1,4981,"的情况下才会创建超出这个数值"]],[4981,4981],[4995,4995]]],[1552486845944,["KotlinD@DESKTOP-JV8VAO0",[[-1,4993,"数值"]],[4995,4995],[4993,4993]]],[1552486849703,["KotlinD@DESKTOP-JV8VAO0",[[1,4993,"数量的线程，"]],[4993,4993],[4999,4999]]],[1552486851537,["KotlinD@DESKTOP-JV8VAO0",[[-1,4998,"，"]],[4999,4999],[4998,4998]]],[1552486851769,["KotlinD@DESKTOP-JV8VAO0",[[1,4998,"，"]],[4998,4998],[4999,4999]]],[1552486852686,["KotlinD@DESKTOP-JV8VAO0",[[-1,4998,"，"]],[4999,4999],[4998,4998]]],[1552486852874,["KotlinD@DESKTOP-JV8VAO0",[[1,4998,"。"]],[4998,4998],[4999,4999]]],[1552486865797,["KotlinD@DESKTOP-JV8VAO0",[[1,4999,"如果摸个线程的"]],[4999,4999],[5006,5006]]],[1552486867487,["KotlinD@DESKTOP-JV8VAO0",[[-1,5001,"摸个线程的"]],[5006,5006],[5001,5001]]],[1552486898006,["KotlinD@DESKTOP-JV8VAO0",[[1,5001,"某个线程的空闲时间超过了活动时间，那么将标记为可回首"]],[5001,5001],[5027,5027]]],[1552486899694,["KotlinD@DESKTOP-JV8VAO0",[[-1,5024,"可回首"]],[5027,5027],[5024,5024]]],[1552486907494,["KotlinD@DESKTOP-JV8VAO0",[[1,5024,"可回收，并且只有当前"]],[5024,5024],[5034,5034]]],[1552486907725,["KotlinD@DESKTOP-JV8VAO0",[[-1,5033,"前"]],[5034,5034],[5033,5033]]],[1552486913690,["KotlinD@DESKTOP-JV8VAO0",[[1,5033,"线程吃的当前"]],[5033,5033],[5039,5039]]],[1552486921974,["KotlinD@DESKTOP-JV8VAO0",[[1,5039,"大小朝贡会"]],[5039,5039],[5044,5044]]],[1552486922617,["KotlinD@DESKTOP-JV8VAO0",[[-1,5041,"朝贡会"]],[5044,5044],[5041,5041]]],[1552486936607,["KotlinD@DESKTOP-JV8VAO0",[[1,5041,"超过，corePoolSize的"]],[5041,5041],[5057,5057]]],[1552486936648,["KotlinD@DESKTOP-JV8VAO0",[[1,5056," "]],[5057,5057],[5058,5058]]],[1552486936891,["KotlinD@DESKTOP-JV8VAO0",[[-1,5057,"的"]],[5058,5058],[5057,5057]]],[1552486938606,["KotlinD@DESKTOP-JV8VAO0",[[1,5057,"是"]],[5057,5057],[5058,5058]]],[1552486938929,["KotlinD@DESKTOP-JV8VAO0",[[-1,5057,"是"]],[5058,5058],[5057,5057]]],[1552486948460,["KotlinD@DESKTOP-JV8VAO0",[[1,5057,"时该线程才会被终止，"]],[5057,5057],[5067,5067]]],[1552486949234,["KotlinD@DESKTOP-JV8VAO0",[[-1,5066,"，"]],[5067,5067],[5066,5066]]],[1552486949448,["KotlinD@DESKTOP-JV8VAO0",[[1,5066,"。"]],[5066,5066],[5067,5067]]],[1552486958812,["KotlinD@DESKTOP-JV8VAO0",[[1,5067,"用户可以调用prestar"]],[5067,5067],[5080,5080]]],[1552486958851,["KotlinD@DESKTOP-JV8VAO0",[[1,5073," "]],[5080,5080],[5081,5081]]],[1552486971187,["KotlinD@DESKTOP-JV8VAO0",[[1,5081,"AllCoreThreads（）"]],[5081,5081],[5097,5097]]],[1552486971836,["KotlinD@DESKTOP-JV8VAO0",[[-1,5095,"（）"]],[5097,5097],[5095,5095]]],[1552486972403,["KotlinD@DESKTOP-JV8VAO0",[[1,5095,"(*)"]],[5095,5095],[5098,5098]]],[1552486973256,["KotlinD@DESKTOP-JV8VAO0",[[-1,5096,"*)"]],[5098,5098],[5096,5096]]],[1552486977420,["KotlinD@DESKTOP-JV8VAO0",[[1,5096,"),huozhe"]],[5096,5096],[5104,5104]]],[1552486979420,["KotlinD@DESKTOP-JV8VAO0",[[-1,5097,",huozhe"]],[5104,5104],[5097,5097]]],[1552486983493,["KotlinD@DESKTOP-JV8VAO0",[[1,5097,"或者core"]],[5097,5097],[5103,5103]]],[1552486983533,["KotlinD@DESKTOP-JV8VAO0",[[1,5099," "]],[5103,5103],[5104,5104]]],[1552486988749,["KotlinD@DESKTOP-JV8VAO0",[[1,5104,"PoolSize"]],[5104,5104],[5112,5112]]],[1552486994043,["KotlinD@DESKTOP-JV8VAO0",[[-1,5100,"corePoolSize"]],[5112,5112],[5100,5100]]],[1552487009123,["KotlinD@DESKTOP-JV8VAO0",[[1,5100,"prestartCoreThread（）"]],[5100,5100],[5120,5120]]],[1552487009735,["KotlinD@DESKTOP-JV8VAO0",[[-1,5118,"（）"]],[5120,5120],[5118,5118]]],[1552487037962,["KotlinD@DESKTOP-JV8VAO0",[[1,5118,"()方法预先创建线程，即在没有任务到来之前就创建core"]],[5118,5118],[5146,5146]]],[1552487038003,["KotlinD@DESKTOP-JV8VAO0",[[1,5142," "]],[5146,5146],[5147,5147]]],[1552487056757,["KotlinD@DESKTOP-JV8VAO0",[[1,5147,"PoolSize 个线程或者一个线程。"]],[5147,5147],[5166,5166]]],[1552487196270,["KotlinD@DESKTOP-JV8VAO0",[[1,5074,"=="],[1,5097,"=="]],[5074,5097],[5074,5101]]],[1552487199264,["KotlinD@DESKTOP-JV8VAO0",[[1,5101," "]],[5101,5101],[5102,5102]]],[1552487206854,["KotlinD@DESKTOP-JV8VAO0",[[1,5105,"=="],[1,5125,"=="]],[5105,5125],[5105,5129]]],[1552487238308,["KotlinD@DESKTOP-JV8VAO0",[[1,5176,"max"]],[5176,5176],[5179,5179]]],[1552487239891,["KotlinD@DESKTOP-JV8VAO0",[[-1,5176,"max"]],[5179,5179],[5176,5176]]],[1552487240450,["KotlinD@DESKTOP-JV8VAO0",[[1,5176,"-0"]],[5176,5176],[5178,5178]]],[1552487242902,["KotlinD@DESKTOP-JV8VAO0",[[-1,5176,"-0"]],[5178,5178],[5176,5176]]],[1552487257054,["KotlinD@DESKTOP-JV8VAO0",[[1,5176,"- maximumPoolSize"]],[5176,5176],[5193,5193]]],[1552487258650,["KotlinD@DESKTOP-JV8VAO0",[[1,5193,"："]],[5193,5193],[5194,5194]]],[1552487267273,["KotlinD@DESKTOP-JV8VAO0",[[1,5194,"线程池最大线程数，"]],[5194,5194],[5203,5203]]],[1552487275139,["KotlinD@DESKTOP-JV8VAO0",[[1,5203,"这个数一ing要"]],[5203,5203],[5211,5211]]],[1552487276217,["KotlinD@DESKTOP-JV8VAO0",[[-1,5206,"一ing要"]],[5211,5211],[5206,5206]]],[1552487283809,["KotlinD@DESKTOP-JV8VAO0",[[1,5206,"大于等于corePool"]],[5206,5206],[5218,5218]]],[1552487283851,["KotlinD@DESKTOP-JV8VAO0",[[1,5210," "]],[5218,5218],[5219,5219]]],[1552487287412,["KotlinD@DESKTOP-JV8VAO0",[[1,5219,"Size"]],[5219,5219],[5223,5223]]],[1552487288981,["KotlinD@DESKTOP-JV8VAO0",[[1,5223," "]],[5223,5223],[5224,5224]]],[1552487381758,["KotlinD@DESKTOP-JV8VAO0",[[1,5224,"否则会 IllegalArgumentException"]],[5224,5224],[5252,5252]]],[1552487382475,["KotlinD@DESKTOP-JV8VAO0",[[-1,5219,"Size 否则会 IllegalArgumentException"]],[5252,5252],[5219,5219]]],[1552487384474,["KotlinD@DESKTOP-JV8VAO0",[[1,5219,"抛出"]],[5219,5219],[5221,5221]]],[1552487384516,["KotlinD@DESKTOP-JV8VAO0",[[1,5219," "]],[5221,5221],[5222,5222]]],[1552487393055,["KotlinD@DESKTOP-JV8VAO0",[[1,5222,"Illegal"]],[5222,5222],[5229,5229]]],[1552487393098,["KotlinD@DESKTOP-JV8VAO0",[[1,5222," "]],[5229,5229],[5230,5230]]],[1552487407958,["KotlinD@DESKTOP-JV8VAO0",[[1,5230,"ArgumentException"]],[5230,5230],[5247,5247]]],[1552487412701,["KotlinD@DESKTOP-JV8VAO0",[[1,5223,"=="],[1,5247,"=="]],[5223,5247],[5223,5251]]],[1552487428050,["KotlinD@DESKTOP-JV8VAO0",[[1,5219,"Size"]],[5219,5219],[5223,5223]]],[1552487433638,["KotlinD@DESKTOP-JV8VAO0",[[1,5224,"否则会"]],[5224,5224],[5227,5227]]],[1552487437590,["KotlinD@DESKTOP-JV8VAO0",[[1,5259,"- \n"]],[5258,5258],[5261,5261]]],[1552487453843,["KotlinD@DESKTOP-JV8VAO0",[[1,5261,"keepAliveTime："]],[5261,5261],[5275,5275]]],[1552487463605,["KotlinD@DESKTOP-JV8VAO0",[[1,5275,"表示纤尘么"]],[5275,5275],[5280,5280]]],[1552487464177,["KotlinD@DESKTOP-JV8VAO0",[[-1,5277,"纤尘么"]],[5280,5280],[5277,5277]]],[1552487484110,["KotlinD@DESKTOP-JV8VAO0",[[1,5277,"线程没有任务执行时最多保持多久时间会终止，"]],[5277,5277],[5298,5298]]],[1552487484698,["KotlinD@DESKTOP-JV8VAO0",[[-1,5297,"，"]],[5298,5298],[5297,5297]]],[1552487488510,["KotlinD@DESKTOP-JV8VAO0",[[1,5297,"。默认秦广下"]],[5297,5297],[5303,5303]]],[1552487497990,["KotlinD@DESKTOP-JV8VAO0",[[1,5258,"，他表示"]],[5258,5258],[5262,5262]]],[1552487499065,["KotlinD@DESKTOP-JV8VAO0",[[-1,5258,"，他表示"]],[5262,5262],[5258,5258]]],[1552487502820,["KotlinD@DESKTOP-JV8VAO0",[[1,5258,"，它表ishi"]],[5258,5258],[5265,5265]]],[1552487503876,["KotlinD@DESKTOP-JV8VAO0",[[-1,5260,"表ishi"]],[5265,5265],[5260,5260]]],[1552487513022,["KotlinD@DESKTOP-JV8VAO0",[[1,5260,"表示在线程池中"]],[5260,5260],[5267,5267]]],[1552487536872,["KotlinD@DESKTOP-JV8VAO0",[[1,5267,"最多能创建多少线程，当大于这个值就会将Thread"]],[5267,5267],[5292,5292]]],[1552487536914,["KotlinD@DESKTOP-JV8VAO0",[[1,5286," "]],[5292,5292],[5293,5293]]],[1552487540113,["KotlinD@DESKTOP-JV8VAO0",[[1,5293,"由"]],[5293,5293],[5294,5294]]],[1552487540155,["KotlinD@DESKTOP-JV8VAO0",[[1,5293," "]],[5294,5294],[5295,5295]]],[1552487543554,["KotlinD@DESKTOP-JV8VAO0",[[1,5295,"一个"]],[5295,5295],[5297,5297]]],[1552487549051,["KotlinD@DESKTOP-JV8VAO0",[[-1,5285,"将 Thread 由一个"]],[5297,5297],[5285,5285]]],[1552487552023,["KotlinD@DESKTOP-JV8VAO0",[[1,5285,"抛出"]],[5285,5285],[5287,5287]]],[1552487572930,["KotlinD@DESKTOP-JV8VAO0",[[1,5287,"RejectedExcution"]],[5287,5287],[5303,5303]]],[1552487572976,["KotlinD@DESKTOP-JV8VAO0",[[1,5287," "]],[5303,5303],[5304,5304]]],[1552487579292,["KotlinD@DESKTOP-JV8VAO0",[[1,5304,"Exception"]],[5304,5304],[5313,5313]]],[1552487586414,["KotlinD@DESKTOP-JV8VAO0",[[1,5288,"=="],[1,5313,"=="]],[5288,5313],[5288,5317]]],[1552487609983,["KotlinD@DESKTOP-JV8VAO0",[[1,5285,"拒绝任务，并"]],[5285,5285],[5291,5291]]],[1552487631440,["KotlinD@DESKTOP-JV8VAO0",[[-1,5365,"秦广下"]],[5368,5368],[5365,5365]]],[1552487633405,["KotlinD@DESKTOP-JV8VAO0",[[1,5365,"情况下"]],[5365,5365],[5368,5368]]],[1552487658852,["KotlinD@DESKTOP-JV8VAO0",[[1,5368,"，只有当线程池中的线程数大于core"]],[5368,5368],[5386,5386]]],[1552487658895,["KotlinD@DESKTOP-JV8VAO0",[[1,5382," "]],[5386,5386],[5387,5387]]],[1552487664188,["KotlinD@DESKTOP-JV8VAO0",[[1,5387,"PoolSize，"]],[5387,5387],[5396,5396]]],[1552487669144,["KotlinD@DESKTOP-JV8VAO0",[[-1,5395,"，"]],[5396,5396],[5395,5395]]],[1552487670156,["KotlinD@DESKTOP-JV8VAO0",[[1,5395,"时"]],[5395,5395],[5396,5396]]],[1552487670198,["KotlinD@DESKTOP-JV8VAO0",[[1,5395," "]],[5396,5396],[5397,5397]]],[1552487680150,["KotlinD@DESKTOP-JV8VAO0",[[1,5397,"，keepAliveTime才会"]],[5397,5397],[5413,5413]]],[1552487680193,["KotlinD@DESKTOP-JV8VAO0",[[1,5411," "]],[5413,5413],[5414,5414]]],[1552487684709,["KotlinD@DESKTOP-JV8VAO0",[[1,5414,"起作用，知道希"]],[5414,5414],[5421,5421]]],[1552487685263,["KotlinD@DESKTOP-JV8VAO0",[[-1,5418,"知道希"]],[5421,5421],[5418,5418]]],[1552487693697,["KotlinD@DESKTOP-JV8VAO0",[[1,5418,"直到线程池中的线程数"]],[5418,5418],[5428,5428]]],[1552487697719,["KotlinD@DESKTOP-JV8VAO0",[[1,5428,"不大于core"]],[5428,5428],[5435,5435]]],[1552487697761,["KotlinD@DESKTOP-JV8VAO0",[[1,5431," "]],[5435,5435],[5436,5436]]],[1552487718130,["KotlinD@DESKTOP-JV8VAO0",[[1,5436,"PoolSize，即当线程池中的线程数大于core"]],[5436,5436],[5461,5461]]],[1552487718172,["KotlinD@DESKTOP-JV8VAO0",[[1,5457," "]],[5461,5461],[5462,5462]]],[1552487721546,["KotlinD@DESKTOP-JV8VAO0",[[1,5462,"Pppl"]],[5462,5462],[5466,5466]]],[1552487722172,["KotlinD@DESKTOP-JV8VAO0",[[-1,5463,"ppl"]],[5466,5466],[5463,5463]]],[1552487728019,["KotlinD@DESKTOP-JV8VAO0",[[1,5463,"oolSize"]],[5463,5463],[5470,5470]]],[1552487948979,["KotlinD@DESKTOP-JV8VAO0",[[-1,5445,"即当线程池中的线程数大于 corePoolSize"]],[5445,5470],[5445,5445]]],[1552488013942,["KotlinD@DESKTOP-JV8VAO0",[[1,5446,"- \n"]],[5445,5445],[5448,5448]]],[1552488054208,["KotlinD@DESKTOP-JV8VAO0",[[1,5445,"如果调用了allowCore"]],[5445,5445],[5459,5459]]],[1552488054251,["KotlinD@DESKTOP-JV8VAO0",[[1,5450," "]],[5459,5459],[5460,5460]]],[1552488065875,["KotlinD@DESKTOP-JV8VAO0",[[1,5460,"ThreadTimeOut（）"]],[5460,5460],[5475,5475]]],[1552488066805,["KotlinD@DESKTOP-JV8VAO0",[[-1,5473,"（）"]],[5475,5475],[5473,5473]]],[1552488067803,["KotlinD@DESKTOP-JV8VAO0",[[1,5473,"A()"]],[5473,5473],[5476,5476]]],[1552488069913,["KotlinD@DESKTOP-JV8VAO0",[[1,5475,"true"]],[5475,5475],[5479,5479]]],[1552488072196,["KotlinD@DESKTOP-JV8VAO0",[[1,5480,"fang"]],[5480,5480],[5484,5484]]],[1552488073259,["KotlinD@DESKTOP-JV8VAO0",[[-1,5480,"fang"]],[5484,5484],[5480,5480]]],[1552488074958,["KotlinD@DESKTOP-JV8VAO0",[[1,5480,"防范，"]],[5480,5480],[5483,5483]]],[1552488076258,["KotlinD@DESKTOP-JV8VAO0",[[-1,5480,"防范，"]],[5483,5483],[5480,5480]]],[1552488081139,["KotlinD@DESKTOP-JV8VAO0",[[1,5480,"方法，在县城中"]],[5480,5480],[5487,5487]]],[1552488082113,["KotlinD@DESKTOP-JV8VAO0",[[-1,5484,"县城中"]],[5487,5487],[5484,5484]]],[1552488098571,["KotlinD@DESKTOP-JV8VAO0",[[1,5484,"线程池中的线程数不大于corePoolSize"]],[5484,5484],[5507,5507]]],[1552488098613,["KotlinD@DESKTOP-JV8VAO0",[[1,5495," "]],[5507,5507],[5508,5508]]],[1552488101473,["KotlinD@DESKTOP-JV8VAO0",[[1,5508,"时"]],[5508,5508],[5509,5509]]],[1552488101515,["KotlinD@DESKTOP-JV8VAO0",[[1,5508," "]],[5509,5509],[5510,5510]]],[1552488108453,["KotlinD@DESKTOP-JV8VAO0",[[1,5510,"，keepAliceTime参数"]],[5510,5510],[5526,5526]]],[1552488108496,["KotlinD@DESKTOP-JV8VAO0",[[1,5524," "]],[5526,5526],[5527,5527]]],[1552488114362,["KotlinD@DESKTOP-JV8VAO0",[[1,5527,"也会起作用，知道"]],[5527,5527],[5535,5535]]],[1552488114915,["KotlinD@DESKTOP-JV8VAO0",[[-1,5533,"知道"]],[5535,5535],[5533,5533]]],[1552488123175,["KotlinD@DESKTOP-JV8VAO0",[[1,5533,"直到线程池中的线程数位"]],[5533,5533],[5544,5544]]],[1552488123506,["KotlinD@DESKTOP-JV8VAO0",[[-1,5543,"位"]],[5544,5544],[5543,5543]]],[1552488124937,["KotlinD@DESKTOP-JV8VAO0",[[1,5543,"为0"]],[5543,5543],[5545,5545]]],[1552488124984,["KotlinD@DESKTOP-JV8VAO0",[[1,5544," "]],[5545,5545],[5546,5546]]],[1552488125216,["KotlinD@DESKTOP-JV8VAO0",[[1,5546,"；"]],[5546,5546],[5547,5547]]],[1552488125943,["KotlinD@DESKTOP-JV8VAO0",[[1,5551,"- \n"]],[5547,5547],[5550,5550]]],[1552488126974,["KotlinD@DESKTOP-JV8VAO0",[[-1,5548,"- "]],[5550,5550],[5548,5548]]],[1552488127474,["KotlinD@DESKTOP-JV8VAO0",[[-1,5548,"\n"]],[5548,5548],[5547,5547]]],[1552488128025,["KotlinD@DESKTOP-JV8VAO0",[[-1,5546,"；"]],[5547,5547],[5546,5546]]],[1552488197856,["KotlinD@DESKTOP-JV8VAO0",[[1,5549,"unit:"]],[5549,5549],[5554,5554]]],[1552488199235,["KotlinD@DESKTOP-JV8VAO0",[[-1,5553,":"]],[5554,5554],[5553,5553]]],[1552488199643,["KotlinD@DESKTOP-JV8VAO0",[[1,5553,"；"]],[5553,5553],[5554,5554]]],[1552488200180,["KotlinD@DESKTOP-JV8VAO0",[[-1,5553,"；"]],[5554,5554],[5553,5553]]],[1552488202380,["KotlinD@DESKTOP-JV8VAO0",[[1,5553,"：参数的"]],[5553,5553],[5557,5557]]],[1552488203213,["KotlinD@DESKTOP-JV8VAO0",[[-1,5554,"参数的"]],[5557,5557],[5554,5554]]],[1552488206125,["KotlinD@DESKTOP-JV8VAO0",[[1,5554,"keepTime"]],[5554,5554],[5562,5562]]],[1552488207042,["KotlinD@DESKTOP-JV8VAO0",[[-1,5558,"Time"]],[5562,5562],[5558,5558]]],[1552488214589,["KotlinD@DESKTOP-JV8VAO0",[[1,5558,"AliveTime 的时间单位，"]],[5558,5558],[5574,5574]]],[1552488217219,["KotlinD@DESKTOP-JV8VAO0",[[-1,5573,"，"]],[5574,5574],[5573,5573]]],[1552488217458,["KotlinD@DESKTOP-JV8VAO0",[[1,5574,"- \n"]],[5573,5573],[5576,5576]]],[1552488225479,["KotlinD@DESKTOP-JV8VAO0",[[1,5576,"我认可Au额u额"]],[5576,5576],[5584,5584]]],[1552488226899,["KotlinD@DESKTOP-JV8VAO0",[[-1,5576,"我认可Au额u额"]],[5584,5584],[5576,5576]]],[1552488231554,["KotlinD@DESKTOP-JV8VAO0",[[1,5576,"workQUeue:"]],[5576,5576],[5586,5586]]],[1552488232847,["KotlinD@DESKTOP-JV8VAO0",[[-1,5581,"Ueue:"]],[5586,5586],[5581,5581]]],[1552488234916,["KotlinD@DESKTOP-JV8VAO0",[[1,5581,"ueue:"]],[5581,5581],[5586,5586]]],[1552488238787,["KotlinD@DESKTOP-JV8VAO0",[[-1,5585,":"]],[5585,5586],[5585,5585]]],[1552488240000,["KotlinD@DESKTOP-JV8VAO0",[[1,5585,"："]],[5585,5585],[5586,5586]]],[1552488256668,["KotlinD@DESKTOP-JV8VAO0",[[1,5586,"一个阻塞队列"]],[5586,5586],[5592,5592]]],[1552488329248,["KotlinD@DESKTOP-JV8VAO0",[[1,5592,"，用来存储扥待执行"]],[5592,5592],[5601,5601]]],[1552488331274,["KotlinD@DESKTOP-JV8VAO0",[[-1,5597,"扥待执行"]],[5601,5601],[5597,5597]]],[1552488352794,["KotlinD@DESKTOP-JV8VAO0",[[1,5597,"等待执行的任务，当线程池中的线程数目达到了"]],[5597,5597],[5618,5618]]],[1552488354459,["KotlinD@DESKTOP-JV8VAO0",[[-1,5617,"了"]],[5618,5618],[5617,5617]]],[1552488361991,["KotlinD@DESKTOP-JV8VAO0",[[1,5617,"corePool"]],[5617,5617],[5625,5625]]],[1552488362034,["KotlinD@DESKTOP-JV8VAO0",[[1,5617," "]],[5625,5625],[5626,5626]]],[1552488368238,["KotlinD@DESKTOP-JV8VAO0",[[1,5626,"Size后"]],[5626,5626],[5631,5631]]],[1552488368280,["KotlinD@DESKTOP-JV8VAO0",[[1,5630," "]],[5631,5631],[5632,5632]]],[1552488372018,["KotlinD@DESKTOP-JV8VAO0",[[1,5632,"，就会把"]],[5632,5632],[5636,5636]]],[1552488397449,["KotlinD@DESKTOP-JV8VAO0",[[1,5636,"到达的任务放到任务缓存队列中"]],[5636,5636],[5650,5650]]],[1552488398134,["KotlinD@DESKTOP-JV8VAO0",[[1,5650,"。"]],[5650,5650],[5651,5651]]],[1552488399095,["KotlinD@DESKTOP-JV8VAO0",[[-1,5650,"。"]],[5651,5651],[5650,5650]]],[1552488399434,["KotlinD@DESKTOP-JV8VAO0",[[1,5651,"- \n"]],[5650,5650],[5653,5653]]],[1552488542011,["KotlinD@DESKTOP-JV8VAO0",[[1,5654,"- \n"]],[5650,5650],[5653,5653]]],[1552488552768,["KotlinD@DESKTOP-JV8VAO0",[[1,5653,"threadFractory"]],[5653,5653],[5667,5667]]],[1552488554727,["KotlinD@DESKTOP-JV8VAO0",[[-1,5659,"Fractory"]],[5667,5667],[5659,5659]]],[1552488569768,["KotlinD@DESKTOP-JV8VAO0",[[1,5659,"Factory：贤臣工厂"]],[5659,5659],[5671,5671]]],[1552488570562,["KotlinD@DESKTOP-JV8VAO0",[[-1,5667,"贤臣工厂"]],[5671,5671],[5667,5667]]],[1552488581766,["KotlinD@DESKTOP-JV8VAO0",[[1,5667,"线程工厂，主要用来创建线程"]],[5667,5667],[5680,5680]]],[1552488582060,["KotlinD@DESKTOP-JV8VAO0",[[1,5684,"- \n"]],[5680,5680],[5683,5683]]],[1552488701192,["KotlinD@DESKTOP-JV8VAO0",[[1,5683,"handler：处理拒绝处理任务时的策略，也就是参数maximum"]],[5683,5683],[5716,5716]]],[1552488701235,["KotlinD@DESKTOP-JV8VAO0",[[1,5709," "]],[5716,5716],[5717,5717]]],[1552488713609,["KotlinD@DESKTOP-JV8VAO0",[[1,5717,"PoolSize达到"]],[5717,5717],[5727,5727]]],[1552488713653,["KotlinD@DESKTOP-JV8VAO0",[[1,5725," "]],[5727,5727],[5728,5728]]],[1552488719888,["KotlinD@DESKTOP-JV8VAO0",[[1,5728,"后丢弃处理的方法，"]],[5728,5728],[5737,5737]]],[1552488721461,["KotlinD@DESKTOP-JV8VAO0",[[-1,5736,"，"]],[5737,5737],[5736,5736]]],[1552488722516,["KotlinD@DESKTOP-JV8VAO0",[[1,5736,":"]],[5736,5736],[5737,5737]]],[1552488723719,["KotlinD@DESKTOP-JV8VAO0",[[1,5741,"- \n"]],[5737,5737],[5740,5740]]],[1552488724035,["KotlinD@DESKTOP-JV8VAO0",[[1,5738,"  "]],[5740,5740],[5742,5742]]],[1552488727712,["KotlinD@DESKTOP-JV8VAO0",[[1,5742,"Thread"]],[5742,5742],[5748,5748]]],[1552488727961,["KotlinD@DESKTOP-JV8VAO0",[[1,5749,"  - \n"]],[5748,5748],[5753,5753]]],[1552488728990,["KotlinD@DESKTOP-JV8VAO0",[[-1,5749,"  - \n"]],[5753,5753],[5748,5748]]],[1552488731075,["KotlinD@DESKTOP-JV8VAO0",[[1,5748,"Oll"]],[5748,5748],[5751,5751]]],[1552488732052,["KotlinD@DESKTOP-JV8VAO0",[[-1,5749,"ll"]],[5751,5751],[5749,5749]]],[1552488732443,["KotlinD@DESKTOP-JV8VAO0",[[1,5749,"oo"]],[5749,5749],[5751,5751]]],[1552488733195,["KotlinD@DESKTOP-JV8VAO0",[[-1,5747,"dOoo"]],[5751,5751],[5747,5747]]],[1552488733808,["KotlinD@DESKTOP-JV8VAO0",[[1,5747,"O"]],[5747,5747],[5748,5748]]],[1552488734147,["KotlinD@DESKTOP-JV8VAO0",[[-1,5747,"O"]],[5748,5748],[5747,5747]]],[1552488735731,["KotlinD@DESKTOP-JV8VAO0",[[1,5747,"Pool"]],[5747,5747],[5751,5751]]],[1552488736202,["KotlinD@DESKTOP-JV8VAO0",[[-1,5750,"l"]],[5751,5751],[5750,5750]]],[1552488746346,["KotlinD@DESKTOP-JV8VAO0",[[1,5750,"lExecutor.Abord"]],[5750,5750],[5765,5765]]],[1552488747188,["KotlinD@DESKTOP-JV8VAO0",[[-1,5764,"d"]],[5765,5765],[5764,5764]]],[1552488747795,["KotlinD@DESKTOP-JV8VAO0",[[1,5764,"=e"]],[5764,5764],[5766,5766]]],[1552488748400,["KotlinD@DESKTOP-JV8VAO0",[[-1,5764,"=e"]],[5766,5766],[5764,5764]]],[1552488754900,["KotlinD@DESKTOP-JV8VAO0",[[1,5764,"tPolicy:"]],[5764,5764],[5772,5772]]],[1552488759325,["KotlinD@DESKTOP-JV8VAO0",[[1,5772,"diu"]],[5772,5772],[5775,5775]]],[1552488760046,["KotlinD@DESKTOP-JV8VAO0",[[-1,5772,"diu"]],[5775,5775],[5772,5772]]],[1552488815752,["KotlinD@DESKTOP-JV8VAO0",[[1,5772,"丢弃任务并抛出Rejects"]],[5772,5772],[5786,5786]]],[1552488815795,["KotlinD@DESKTOP-JV8VAO0",[[1,5779," "]],[5786,5786],[5787,5787]]],[1552488819856,["KotlinD@DESKTOP-JV8VAO0",[[-1,5780,"Rejects"]],[5787,5787],[5780,5780]]],[1552488834301,["KotlinD@DESKTOP-JV8VAO0",[[1,5780,"RejectedExecutionExcu"]],[5780,5780],[5801,5801]]],[1552488838227,["KotlinD@DESKTOP-JV8VAO0",[[-1,5800,"u"]],[5801,5801],[5800,5800]]],[1552488838599,["KotlinD@DESKTOP-JV8VAO0",[[1,5800,"e"]],[5800,5800],[5801,5801]]],[1552488840207,["KotlinD@DESKTOP-JV8VAO0",[[-1,5797,"Exce"]],[5801,5801],[5797,5797]]],[1552488848244,["KotlinD@DESKTOP-JV8VAO0",[[1,5797,"Exception异常"]],[5797,5797],[5808,5808]]],[1552488848287,["KotlinD@DESKTOP-JV8VAO0",[[1,5806," "]],[5808,5808],[5809,5809]]],[1552488849777,["KotlinD@DESKTOP-JV8VAO0",[[1,5810,"  - \n"]],[5809,5809],[5814,5814]]],[1552488853755,["KotlinD@DESKTOP-JV8VAO0",[[1,5814,"Thread"]],[5814,5814],[5820,5820]]],[1552488858080,["KotlinD@DESKTOP-JV8VAO0",[[1,5747,"d"]],[5747,5747],[5748,5748]]],[1552488868638,["KotlinD@DESKTOP-JV8VAO0",[[1,5821,"PoolExecutor。"]],[5821,5821],[5834,5834]]],[1552488869248,["KotlinD@DESKTOP-JV8VAO0",[[-1,5833,"。"]],[5834,5834],[5833,5833]]],[1552488869594,["KotlinD@DESKTOP-JV8VAO0",[[1,5833,"."]],[5833,5833],[5834,5834]]],[1552488931135,["KotlinD@DESKTOP-JV8VAO0",[[1,5834,"Discard"]],[5834,5834],[5841,5841]]],[1552489007291,["KotlinD@DESKTOP-JV8VAO0",[[1,5841,"Policy:diu"]],[5841,5841],[5851,5851]]],[1552489007973,["KotlinD@DESKTOP-JV8VAO0",[[-1,5848,"diu"]],[5851,5851],[5848,5848]]],[1552489015848,["KotlinD@DESKTOP-JV8VAO0",[[1,5848,"丢弃任务，不抛异常"]],[5848,5848],[5857,5857]]],[1552489016262,["KotlinD@DESKTOP-JV8VAO0",[[1,5858,"  - \n"]],[5857,5857],[5862,5862]]],[1552489028333,["KotlinD@DESKTOP-JV8VAO0",[[1,5862,"ThreadPoolExecutor。"]],[5862,5862],[5881,5881]]],[1552489028724,["KotlinD@DESKTOP-JV8VAO0",[[-1,5880,"。"]],[5881,5881],[5880,5880]]],[1552489046530,["KotlinD@DESKTOP-JV8VAO0",[[1,5880,".DiscardOldestPolicy:x"]],[5880,5880],[5902,5902]]],[1552489046926,["KotlinD@DESKTOP-JV8VAO0",[[-1,5901,"x"]],[5902,5902],[5901,5901]]],[1552489050495,["KotlinD@DESKTOP-JV8VAO0",[[1,5901,"丢弃任务，"]],[5901,5901],[5906,5906]]],[1552489052746,["KotlinD@DESKTOP-JV8VAO0",[[-1,5905,"，"]],[5906,5906],[5905,5905]]],[1552489054622,["KotlinD@DESKTOP-JV8VAO0",[[1,5905,"队列"]],[5905,5905],[5907,5907]]],[1552489067885,["KotlinD@DESKTOP-JV8VAO0",[[1,5907,"最前面的任务，然后重新尝试执行任务（）"]],[5907,5907],[5926,5926]]],[1552489072766,["KotlinD@DESKTOP-JV8VAO0",[[1,5925,"重复此过程\n  "]],[5925,5925],[5933,5933]]],[1552489073519,["KotlinD@DESKTOP-JV8VAO0",[[-1,5925,"重复此过程\n  "]],[5933,5933],[5925,5925]]],[1552489075745,["KotlinD@DESKTOP-JV8VAO0",[[1,5925,"重复此过程\n  "]],[5925,5925],[5933,5933]]],[1552489076785,["KotlinD@DESKTOP-JV8VAO0",[[-1,5931,"  "]],[5933,5933],[5931,5931]]],[1552489077319,["KotlinD@DESKTOP-JV8VAO0",[[-1,5930,"\n"]],[5931,5931],[5930,5930]]],[1552489078400,["KotlinD@DESKTOP-JV8VAO0",[[1,5932,"  - \n"]],[5931,5931],[5936,5936]]],[1552489088528,["KotlinD@DESKTOP-JV8VAO0",[[1,5936,"ThreadPoolExecutor；"]],[5936,5936],[5955,5955]]],[1552489089047,["KotlinD@DESKTOP-JV8VAO0",[[-1,5954,"；"]],[5955,5955],[5954,5954]]],[1552489102048,["KotlinD@DESKTOP-JV8VAO0",[[1,5954,".CallerRunsPolicy:由於"]],[5954,5954],[5974,5974]]],[1552489102463,["KotlinD@DESKTOP-JV8VAO0",[[-1,5972,"由於"]],[5974,5974],[5972,5972]]],[1552489103046,["KotlinD@DESKTOP-JV8VAO0",[[1,5972,"you"]],[5972,5972],[5975,5975]]],[1552489103737,["KotlinD@DESKTOP-JV8VAO0",[[-1,5972,"you"]],[5975,5975],[5972,5972]]],[1552489104964,["KotlinD@DESKTOP-JV8VAO0",[[1,5972,"由於"]],[5972,5972],[5974,5974]]],[1552489105345,["KotlinD@DESKTOP-JV8VAO0",[[-1,5972,"由於"]],[5974,5974],[5972,5972]]],[1552489106988,["KotlinD@DESKTOP-JV8VAO0",[[1,5972,"由于"]],[5972,5972],[5974,5974]]],[1552489108177,["KotlinD@DESKTOP-JV8VAO0",[[-1,5973,"于"]],[5974,5974],[5973,5973]]],[1552489113579,["KotlinD@DESKTOP-JV8VAO0",[[1,5973,"调用线程处理该人物"]],[5973,5973],[5982,5982]]],[1552489123485,["KotlinD@DESKTOP-JV8VAO0",[[-1,5980,"人物"]],[5982,5982],[5980,5980]]],[1552489124687,["KotlinD@DESKTOP-JV8VAO0",[[1,5980,"任务"]],[5980,5980],[5982,5982]]],[1552489251243,["KotlinD@DESKTOP-JV8VAO0",[[1,5983,"  - \n"]],[5982,5982],[5987,5987]]],[1552489279010,["KotlinD@DESKTOP-JV8VAO0",[[1,5987,"也可以实现接口RejectedExecutionHandler"]],[5987,5987],[6018,6018]]],[1552489279062,["KotlinD@DESKTOP-JV8VAO0",[[1,5994," "]],[6018,6018],[6019,6019]]],[1552489281322,["KotlinD@DESKTOP-JV8VAO0",[[1,6019,"定制"]],[6019,6019],[6021,6021]]],[1552489281366,["KotlinD@DESKTOP-JV8VAO0",[[1,6019," "]],[6021,6021],[6022,6022]]],[1552489283737,["KotlinD@DESKTOP-JV8VAO0",[[1,6022,"自己的策略"]],[6022,6022],[6027,6027]]],[1552489284522,["KotlinD@DESKTOP-JV8VAO0",[[1,6028,"  - \n"]],[6027,6027],[6032,6032]]],[1552489286140,["KotlinD@DESKTOP-JV8VAO0",[[-1,6028,"  - "]],[6032,6032],[6028,6028]]],[1552489286505,["KotlinD@DESKTOP-JV8VAO0",[[-1,6028,"\n"]],[6028,6028],[6027,6027]]],[1552489287890,["KotlinD@DESKTOP-JV8VAO0",[[-1,6028,"- "]],[6030,6030],[6028,6028]]],[1552489288449,["KotlinD@DESKTOP-JV8VAO0",[[-1,6029,"\n"]],[6028,6028],[6027,6027]]],[1552489742271,["KotlinD@DESKTOP-JV8VAO0",[[-1,6939,"### Android 哪些地方使用线程池"]],[6939,6960],[6939,6939]]],[1552489745956,["KotlinD@DESKTOP-JV8VAO0",[[1,6939,"### Android 哪些地方使用线程池"]],[6939,6939],[6939,6960]]],[1552490590287,["KotlinD@DESKTOP-JV8VAO0",[[-1,6939,"### Android 哪些地方使用线程池"]],[6939,6960],[6939,6939]]],[1552490592107,["KotlinD@DESKTOP-JV8VAO0",[[-1,6942,"\n"]],[6941,6941],[6940,6940]]],[1552490598011,["KotlinD@DESKTOP-JV8VAO0",[[-1,6941,"\n"]],[6941,6941],[6940,6940]]],[1552490604511,["KotlinD@DESKTOP-JV8VAO0",[[-1,6985,"Java中的集合类有哪些。区别是什么，如何保证安全性。"]],[6985,7012],[6985,6985]]],[1552490604882,["KotlinD@DESKTOP-JV8VAO0",[[-1,6986,"\n"]],[6985,6985],[6984,6984]]],[1552490605532,["KotlinD@DESKTOP-JV8VAO0",[[-1,6985,"\n"]],[6984,6984],[6983,6983]]],[1552490623409,["KotlinD@DESKTOP-JV8VAO0",[[1,6940,"### Android的集合类有哪些"]],[6940,6940],[6958,6958]]],[1552490624184,["KotlinD@DESKTOP-JV8VAO0",[[1,6959,"\n"]],[6958,6958],[6959,6959]]],[1552490626199,["KotlinD@DESKTOP-JV8VAO0",[[1,6958,"?"]],[6958,6958],[6959,6959]]],[1552490628510,["KotlinD@DESKTOP-JV8VAO0",[[-1,6958,"?"]],[6959,6959],[6958,6958]]],[1552490629176,["KotlinD@DESKTOP-JV8VAO0",[[1,6958,"‘、"]],[6958,6958],[6960,6960]]],[1552490629243,["KotlinD@DESKTOP-JV8VAO0",[[-1,6958,"‘、"],[1,6960,"「"]],[6960,6960],[6959,6959]]],[1552490629535,["KotlinD@DESKTOP-JV8VAO0",[[-1,6958,"「"]],[6959,6959],[6958,6958]]],[1552490629806,["KotlinD@DESKTOP-JV8VAO0",[[1,6958,"？"]],[6958,6958],[6959,6959]]],[1552490630362,["KotlinD@DESKTOP-JV8VAO0",[[-1,6958,"？"]],[6959,6959],[6958,6958]]],[1552490632246,["KotlinD@DESKTOP-JV8VAO0",[[1,6958,"？"]],[6958,6958],[6959,6959]]],[1552490632893,["KotlinD@DESKTOP-JV8VAO0",[[1,6961,"\n"]],[6959,6959],[6960,6960]]],[1552490703102,["KotlinD@DESKTOP-JV8VAO0",[[-1,6940,"### Android的集合类有哪些？"]],[6940,6959],[6940,6940]]],[1552490709159,["KotlinD@DESKTOP-JV8VAO0",[[1,3830,"\n"]],[3829,3829],[3830,3830]]],[1552490709300,["KotlinD@DESKTOP-JV8VAO0",[[1,3831,"\n"]],[3830,3830],[3831,3831]]],[1552490710364,["KotlinD@DESKTOP-JV8VAO0",[[1,3830,"### Android的集合类有哪些？"]],[3830,3830],[3849,3849]]],[1552490712332,["KotlinD@DESKTOP-JV8VAO0",[[1,3851,"\n"]],[3849,3849],[3850,3850]]],[1552490737078,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"（）"]],[3849,3849],[3851,3851]]],[1552490737724,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"（）"]],[3851,3851],[3849,3849]]],[1552490738624,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"【】"]],[3849,3849],[3851,3851]]],[1552490739394,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"【】"]],[3851,3851],[3849,3849]]],[1552490740562,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"p"]],[3849,3849],[3850,3850]]],[1552490741105,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"p"]],[3850,3850],[3849,3849]]],[1552490741398,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"[]"]],[3849,3849],[3851,3851]]],[1552490742256,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"[]"]],[3851,3851],[3849,3849]]],[1552490743417,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"[]"]],[3849,3849],[3851,3851]]],[1552490744028,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"[]"]],[3851,3851],[3849,3849]]],[1552490744426,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"{}"]],[3849,3849],[3851,3851]]],[1552490745058,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"{}"]],[3851,3851],[3849,3849]]],[1552490756381,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"{}"]],[3849,3849],[3851,3851]]],[1552490757066,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"{}"]],[3851,3851],[3849,3849]]],[1552490757326,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"【】"]],[3849,3849],[3851,3851]]],[1552490757908,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"【】"]],[3851,3851],[3849,3849]]],[1552490759089,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"{}"]],[3849,3849],[3851,3851]]],[1552490759771,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"{}"]],[3851,3851],[3849,3849]]],[1552490761351,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"{}"]],[3849,3849],[3851,3851]]],[1552490762074,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"{}"]],[3851,3851],[3849,3849]]],[1552490762420,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"[]"]],[3849,3849],[3851,3851]]],[1552490763048,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"[]"]],[3851,3851],[3849,3849]]],[1552490767495,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"【】"]],[3849,3849],[3851,3851]]],[1552490768214,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"【】"]],[3851,3851],[3849,3849]]],[1552490768698,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"[]"]],[3849,3849],[3851,3851]]],[1552490769998,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"[]"]],[3851,3851],[3849,3849]]],[1552490770405,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"【】"]],[3849,3849],[3851,3851]]],[1552490771029,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"【】"]],[3851,3851],[3849,3849]]],[1552490771577,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"【】"]],[3849,3849],[3851,3851]]],[1552490772318,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"【】"]],[3851,3851],[3849,3849]]],[1552490773708,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"【】"]],[3849,3849],[3851,3851]]],[1552490774498,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"【】"]],[3851,3851],[3849,3849]]],[1552490778631,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"{}"]],[3849,3849],[3851,3851]]],[1552490779285,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"{}"]],[3851,3851],[3849,3849]]],[1552490779531,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"【】"]],[3849,3849],[3851,3851]]],[1552490781028,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"【】"]],[3851,3851],[3849,3849]]],[1552490789565,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"【】"]],[3849,3849],[3851,3851]]],[1552490790133,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"【】"]],[3851,3851],[3849,3849]]],[1552490790699,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"【】"]],[3849,3849],[3851,3851]]],[1552490791237,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"【】"]],[3851,3851],[3849,3849]]],[1552490791815,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"[]"]],[3849,3849],[3851,3851]]],[1552490792326,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"[]"]],[3851,3851],[3849,3849]]],[1552490793348,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"{}"]],[3849,3849],[3851,3851]]],[1552490793985,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"{}"]],[3851,3851],[3849,3849]]],[1552490798289,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"[]"]],[3849,3849],[3851,3851]]],[1552490799167,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"[]"]],[3851,3851],[3849,3849]]],[1552490806375,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"{}"]],[3849,3849],[3851,3851]]],[1552490807049,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"{}"]],[3851,3851],[3849,3849]]],[1552490807738,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"{"]],[3849,3849],[3850,3850]]],[1552490808081,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"{"]],[3850,3850],[3849,3849]]],[1552490809427,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"】"]],[3849,3849],[3850,3850]]],[1552490813336,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"】"]],[3850,3850],[3849,3849]]],[1552490813629,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"[]"]],[3849,3849],[3851,3851]]],[1552490814324,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"[]"]],[3851,3851],[3849,3849]]],[1552490814632,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"[]"]],[3849,3849],[3851,3851]]],[1552490815126,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"[]"]],[3851,3851],[3849,3849]]],[1552490818077,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"{}"]],[3849,3849],[3851,3851]]],[1552490818597,["KotlinD@DESKTOP-JV8VAO0",[[-1,3849,"{}"]],[3851,3851],[3849,3849]]],[1552490818880,["KotlinD@DESKTOP-JV8VAO0",[[1,3849,"【】"]],[3849,3849],[3851,3851]]],[1552490826195,["KotlinD@DESKTOP-JV8VAO0",[[1,3850,"行内有"]],[3850,3850],[3853,3853]]],[1552490826686,["KotlinD@DESKTOP-JV8VAO0",[[-1,3850,"行内有"]],[3853,3853],[3850,3850]]],[1552490834066,["KotlinD@DESKTOP-JV8VAO0",[[1,3850,"性能优化"]],[3850,3850],[3854,3854]]],[1552490835291,["KotlinD@DESKTOP-JV8VAO0",[[1,3858,"\n"]],[3855,3855],[3856,3856]]],[1552490854819,["KotlinD@DESKTOP-JV8VAO0",[[1,3856,"#### "]],[3856,3856],[3861,3861]]],[1552490868068,["KotlinD@DESKTOP-JV8VAO0",[[1,3861,"SparseArray"]],[3861,3861],[3872,3872]]],[1552490922036,["KotlinD@DESKTOP-JV8VAO0",[[1,3873,"--"]],[3873,3873],[3875,3875]]],[1552490922559,["KotlinD@DESKTOP-JV8VAO0",[[-1,3874,"-"]],[3875,3875],[3874,3874]]],[1552490922734,["KotlinD@DESKTOP-JV8VAO0",[[1,3874," "]],[3874,3874],[3875,3875]]],[1552490966802,["KotlinD@DESKTOP-JV8VAO0",[[1,3875,"用来代替java"]],[3875,3875],[3883,3883]]],[1552490966854,["KotlinD@DESKTOP-JV8VAO0",[[1,3879," "]],[3883,3883],[3884,3884]]],[1552490967496,["KotlinD@DESKTOP-JV8VAO0",[[1,3884,"中"]],[3884,3884],[3885,3885]]],[1552490967539,["KotlinD@DESKTOP-JV8VAO0",[[1,3884," "]],[3885,3885],[3886,3886]]],[1552490971124,["KotlinD@DESKTOP-JV8VAO0",[[1,3886,"的HashMap"]],[3886,3886],[3894,3894]]],[1552490971168,["KotlinD@DESKTOP-JV8VAO0",[[1,3887," "]],[3894,3894],[3895,3895]]],[1552490974199,["KotlinD@DESKTOP-JV8VAO0",[[1,3895,"《》"]],[3895,3895],[3897,3897]]],[1552490974916,["KotlinD@DESKTOP-JV8VAO0",[[-1,3895,"《》"]],[3897,3897],[3895,3895]]],[1552490975848,["KotlinD@DESKTOP-JV8VAO0",[[1,3895,">?"]],[3895,3895],[3897,3897]]],[1552490976428,["KotlinD@DESKTOP-JV8VAO0",[[-1,3895,">?"]],[3897,3897],[3895,3895]]],[1552490977315,["KotlinD@DESKTOP-JV8VAO0",[[1,3895,"<>"]],[3895,3895],[3897,3897]]],[1552490981970,["KotlinD@DESKTOP-JV8VAO0",[[1,3896,"Integer,E"]],[3896,3896],[3905,3905]]],[1552490985684,["KotlinD@DESKTOP-JV8VAO0",[[1,3906,","]],[3906,3906],[3907,3907]]],[1552490987495,["KotlinD@DESKTOP-JV8VAO0",[[-1,3906,","]],[3907,3907],[3906,3906]]],[1552490992228,["KotlinD@DESKTOP-JV8VAO0",[[1,3906,",s"]],[3906,3906],[3908,3908]]],[1552490993058,["KotlinD@DESKTOP-JV8VAO0",[[-1,3906,",s"]],[3908,3908],[3906,3906]]],[1552490993715,["KotlinD@DESKTOP-JV8VAO0",[[1,3907,"- \n"]],[3906,3906],[3909,3909]]],[1552491008267,["KotlinD@DESKTOP-JV8VAO0",[[1,3909,"节省内存，使用key"]],[3909,3909],[3919,3919]]],[1552491008308,["KotlinD@DESKTOP-JV8VAO0",[[1,3916," "]],[3919,3919],[3920,3920]]],[1552491012130,["KotlinD@DESKTOP-JV8VAO0",[[1,3920,"-value存储"]],[3920,3920],[3928,3928]]],[1552491012172,["KotlinD@DESKTOP-JV8VAO0",[[1,3926," "]],[3928,3928],[3929,3929]]],[1552491012333,["KotlinD@DESKTOP-JV8VAO0",[[1,3929,"，"]],[3929,3929],[3930,3930]]],[1552491117669,["KotlinD@DESKTOP-JV8VAO0",[[1,3856,"\n"]],[3855,3855],[3856,3856]]],[1552491118306,["KotlinD@DESKTOP-JV8VAO0",[[1,3857,"\n"]],[3856,3856],[3857,3857]]],[1552491123494,["KotlinD@DESKTOP-JV8VAO0",[[1,3857,"#### ArrayMap"]],[3857,3857],[3870,3870]]],[1552491124369,["KotlinD@DESKTOP-JV8VAO0",[[1,3871,"\n"]],[3870,3870],[3871,3871]]],[1552491139701,["KotlinD@DESKTOP-JV8VAO0",[[1,3871,"- 使用方式跟HashMa"]],[3871,3871],[3884,3884]]],[1552491139744,["KotlinD@DESKTOP-JV8VAO0",[[1,3878," "]],[3884,3884],[3885,3885]]],[1552491140253,["KotlinD@DESKTOP-JV8VAO0",[[1,3886,"- \n"]],[3885,3885],[3888,3888]]],[1552491141078,["KotlinD@DESKTOP-JV8VAO0",[[-1,3886,"- "]],[3888,3888],[3886,3886]]],[1552491141306,["KotlinD@DESKTOP-JV8VAO0",[[-1,3886,"\n"]],[3886,3886],[3885,3885]]],[1552491143856,["KotlinD@DESKTOP-JV8VAO0",[[1,3885,"p一眼"]],[3885,3885],[3888,3888]]],[1552491143898,["KotlinD@DESKTOP-JV8VAO0",[[1,3886," "]],[3888,3888],[3889,3889]]],[1552491144109,["KotlinD@DESKTOP-JV8VAO0",[[1,3889,"，"]],[3889,3889],[3890,3890]]],[1552491145043,["KotlinD@DESKTOP-JV8VAO0",[[-1,3887,"一眼，"]],[3890,3890],[3887,3887]]],[1552491146368,["KotlinD@DESKTOP-JV8VAO0",[[1,3887,"一样，"]],[3887,3887],[3890,3890]]],[1552491149375,["KotlinD@DESKTOP-JV8VAO0",[[-1,3889,"，"]],[3890,3890],[3889,3889]]],[1552491149735,["KotlinD@DESKTOP-JV8VAO0",[[1,3890,"- \n"]],[3889,3889],[3892,3892]]],[1552491153889,["KotlinD@DESKTOP-JV8VAO0",[[1,3892,"key-value存储"]],[3892,3892],[3903,3903]]],[1552491153931,["KotlinD@DESKTOP-JV8VAO0",[[1,3901," "]],[3903,3903],[3904,3904]]],[1552491154670,["KotlinD@DESKTOP-JV8VAO0",[[1,3904,"数据"]],[3904,3904],[3906,3906]]],[1552491154823,["KotlinD@DESKTOP-JV8VAO0",[[1,3907,"- \n"]],[3906,3906],[3909,3909]]],[1552491217882,["KotlinD@DESKTOP-JV8VAO0",[[1,3909,"数据量小时可以用，数据量增大性能会下降5"]],[3909,3909],[3929,3929]]],[1552491217924,["KotlinD@DESKTOP-JV8VAO0",[[1,3928," "]],[3929,3929],[3930,3930]]],[1552491221638,["KotlinD@DESKTOP-JV8VAO0",[[1,3930,"0%左右"]],[3930,3930],[3934,3934]]],[1552491222397,["KotlinD@DESKTOP-JV8VAO0",[[1,3935,"- \n"]],[3934,3934],[3937,3937]]],[1552491223428,["KotlinD@DESKTOP-JV8VAO0",[[-1,3935,"- "]],[3937,3937],[3935,3935]]],[1552491223728,["KotlinD@DESKTOP-JV8VAO0",[[1,3936,"\n"]],[3935,3935],[3936,3936]]],[1552491245379,["KotlinD@DESKTOP-JV8VAO0",[[-1,3936,"\n"]],[3935,3935],[3934,3934]]],[1552491265357,["KotlinD@DESKTOP-JV8VAO0",[[-1,4009,"，"]],[4010,4010],[4009,4009]]],[1552491266838,["KotlinD@DESKTOP-JV8VAO0",[[1,4010,"- \n"]],[4009,4009],[4012,4012]]],[1552491285476,["KotlinD@DESKTOP-JV8VAO0",[[-1,4011," "]],[4012,4012],[4011,4011]]],[1552491295574,["KotlinD@DESKTOP-JV8VAO0",[[1,3953,"\n"]],[3952,3952],[3953,3953]]],[1552491302258,["KotlinD@DESKTOP-JV8VAO0",[[1,3953,"- 不是线程安全的，"]],[3953,3953],[3963,3963]]],[1552491303689,["KotlinD@DESKTOP-JV8VAO0",[[-1,3962,"，"]],[3963,3963],[3962,3962]]],[1552491306079,["KotlinD@DESKTOP-JV8VAO0",[[1,3965,"\n- "]],[3962,3962],[3965,3965]]],[1552491308769,["KotlinD@DESKTOP-JV8VAO0",[[1,3965,"继承"]],[3965,3965],[3967,3967]]],[1552491309141,["KotlinD@DESKTOP-JV8VAO0",[[-1,3965,"继承"]],[3967,3967],[3965,3965]]],[1552491310325,["KotlinD@DESKTOP-JV8VAO0",[[1,3965,"实现"]],[3965,3965],[3967,3967]]],[1552491319676,["KotlinD@DESKTOP-JV8VAO0",[[-1,3965,"实现"]],[3967,3967],[3965,3965]]],[1552491385470,["KotlinD@DESKTOP-JV8VAO0",[[1,3965,"基于两个数组，int【】"]],[3965,3965],[3977,3977]]],[1552491386170,["KotlinD@DESKTOP-JV8VAO0",[[-1,3975,"【】"]],[3977,3977],[3975,3975]]],[1552491387459,["KotlinD@DESKTOP-JV8VAO0",[[1,3975,"[] l"]],[3975,3975],[3979,3979]]],[1552491387871,["KotlinD@DESKTOP-JV8VAO0",[[-1,3978,"l"]],[3979,3979],[3978,3978]]],[1552491388083,["KotlinD@DESKTOP-JV8VAO0",[[1,3978,"k"]],[3978,3978],[3979,3979]]],[1552491388510,["KotlinD@DESKTOP-JV8VAO0",[[-1,3978,"k"]],[3979,3979],[3978,3978]]],[1552491400966,["KotlinD@DESKTOP-JV8VAO0",[[1,3978,"mKeys; Object[] mValuel;"]],[3978,3978],[4002,4002]]],[1552491401900,["KotlinD@DESKTOP-JV8VAO0",[[-1,4000,"l;"]],[4002,4002],[4000,4000]]],[1552491403626,["KotlinD@DESKTOP-JV8VAO0",[[1,4000,";."]],[4000,4000],[4002,4002]]],[1552491404251,["KotlinD@DESKTOP-JV8VAO0",[[-1,4001,"."]],[4002,4002],[4001,4001]]],[1552491427545,["KotlinD@DESKTOP-JV8VAO0",[[1,4001,"moren"]],[4001,4001],[4006,4006]]],[1552491428566,["KotlinD@DESKTOP-JV8VAO0",[[-1,4001,"moren"]],[4006,4006],[4001,4001]]],[1552491433101,["KotlinD@DESKTOP-JV8VAO0",[[1,4001,"默认初始值为0"]],[4001,4001],[4008,4008]]],[1552491433144,["KotlinD@DESKTOP-JV8VAO0",[[1,4007," "]],[4008,4008],[4009,4009]]],[1552491433657,["KotlinD@DESKTOP-JV8VAO0",[[-1,4008,"0"]],[4009,4009],[4008,4008]]],[1552491434046,["KotlinD@DESKTOP-JV8VAO0",[[1,4008,"10"]],[4008,4008],[4010,4010]]],[1552491435760,["KotlinD@DESKTOP-JV8VAO0",[[-1,4005,"值为 10"]],[4010,4010],[4005,4005]]],[1552491439888,["KotlinD@DESKTOP-JV8VAO0",[[1,4005,"容量为1"]],[4005,4005],[4009,4009]]],[1552491439932,["KotlinD@DESKTOP-JV8VAO0",[[1,4008," "]],[4009,4009],[4010,4010]]],[1552491440657,["KotlinD@DESKTOP-JV8VAO0",[[1,4010,"0，"]],[4010,4010],[4012,4012]]],[1552491471872,["KotlinD@DESKTOP-JV8VAO0",[[-1,4070,"-"]],[4070,4071],[4070,4070]]],[1552491519612,["KotlinD@DESKTOP-JV8VAO0",[[1,3889,"，实现Map"]],[3889,3889],[3895,3895]]],[1552491519657,["KotlinD@DESKTOP-JV8VAO0",[[1,3892," "]],[3895,3895],[3896,3896]]],[1552491520833,["KotlinD@DESKTOP-JV8VAO0",[[1,3896,"接口"]],[3896,3896],[3898,3898]]],[1552491520877,["KotlinD@DESKTOP-JV8VAO0",[[1,3896," "]],[3898,3898],[3899,3899]]],[1552491525824,["KotlinD@DESKTOP-JV8VAO0",[[1,3871,"\n"]],[3870,3870],[3871,3871]]],[1552491527497,["KotlinD@DESKTOP-JV8VAO0",[[1,3871,"不是"]],[3871,3871],[3873,3873]]],[1552491527986,["KotlinD@DESKTOP-JV8VAO0",[[-1,3871,"不是"]],[3873,3873],[3871,3871]]],[1552491531939,["KotlinD@DESKTOP-JV8VAO0",[[1,3871,"- 不是线程安全的"]],[3871,3871],[3880,3880]]],[1552491709451,["KotlinD@DESKTOP-JV8VAO0",[[1,2768,"，默认数量为1"]],[2768,2768],[2775,2775]]],[1552491709494,["KotlinD@DESKTOP-JV8VAO0",[[1,2774," "]],[2775,2775],[2776,2776]]],[1552491709905,["KotlinD@DESKTOP-JV8VAO0",[[1,2776,"6"]],[2776,2776],[2777,2777]]],[1552491713628,["KotlinD@DESKTOP-JV8VAO0",[[1,2777,"的"]],[2777,2777],[2778,2778]]],[1552491713671,["KotlinD@DESKTOP-JV8VAO0",[[1,2777," "]],[2778,2778],[2779,2779]]],[1552491714562,["KotlinD@DESKTOP-JV8VAO0",[[1,2779,"数组"]],[2779,2779],[2781,2781]]],[1552491855228,["KotlinD@DESKTOP-JV8VAO0",[[1,2781,"，扩容时，容量* "]],[2781,2781],[2790,2790]]],[1552491856879,["KotlinD@DESKTOP-JV8VAO0",[[-1,2789," "]],[2790,2790],[2789,2789]]],[1552491867025,["KotlinD@DESKTOP-JV8VAO0",[[1,2789,"载入因子（）"]],[2789,2789],[2795,2795]]],[1552491869070,["KotlinD@DESKTOP-JV8VAO0",[[-1,2793,"（）"]],[2795,2795],[2793,2793]]],[1552491869958,["KotlinD@DESKTOP-JV8VAO0",[[1,2793,"()"]],[2793,2793],[2795,2795]]],[1552491874747,["KotlinD@DESKTOP-JV8VAO0",[[1,2794,"默认0"]],[2794,2794],[2797,2797]]],[1552491874789,["KotlinD@DESKTOP-JV8VAO0",[[1,2796," "]],[2797,2797],[2798,2798]]],[1552491875777,["KotlinD@DESKTOP-JV8VAO0",[[1,2798,".75"]],[2798,2798],[2801,2801]]],[1552491889969,["KotlinD@DESKTOP-JV8VAO0",[[1,2802,"，扩大"]],[2802,2802],[2805,2805]]],[1552491907134,["KotlinD@DESKTOP-JV8VAO0",[[1,2805,"后的新空间一定是原来的2"]],[2805,2805],[2817,2817]]],[1552491907177,["KotlinD@DESKTOP-JV8VAO0",[[1,2816," "]],[2817,2817],[2818,2818]]],[1552491908153,["KotlinD@DESKTOP-JV8VAO0",[[1,2818,"倍"]],[2818,2818],[2819,2819]]],[1552491908204,["KotlinD@DESKTOP-JV8VAO0",[[1,2818," "]],[2819,2819],[2820,2820]]],[1552491941879,["KotlinD@DESKTOP-JV8VAO0",[[1,2820,"，这也导致比较小号你"]],[2820,2820],[2830,2830]]],[1552491942353,["KotlinD@DESKTOP-JV8VAO0",[[-1,2827,"小号你"]],[2830,2830],[2827,2827]]],[1552491948813,["KotlinD@DESKTOP-JV8VAO0",[[1,2827,"消耗内存，所以Android"]],[2827,2827],[2841,2841]]],[1552491948867,["KotlinD@DESKTOP-JV8VAO0",[[1,2834," "]],[2841,2841],[2842,2842]]],[1552491949555,["KotlinD@DESKTOP-JV8VAO0",[[1,2842,"中"]],[2842,2842],[2843,2843]]],[1552491949597,["KotlinD@DESKTOP-JV8VAO0",[[1,2842," "]],[2843,2843],[2844,2844]]],[1552491950974,["KotlinD@DESKTOP-JV8VAO0",[[1,2844,"醉了"]],[2844,2844],[2846,2846]]],[1552491951385,["KotlinD@DESKTOP-JV8VAO0",[[-1,2844,"醉了"]],[2846,2846],[2844,2844]]],[1552491966918,["KotlinD@DESKTOP-JV8VAO0",[[1,2844,"做了优化，使用Sparser"]],[2844,2844],[2858,2858]]],[1552491966960,["KotlinD@DESKTOP-JV8VAO0",[[1,2851," "]],[2858,2858],[2859,2859]]],[1552491969401,["KotlinD@DESKTOP-JV8VAO0",[[-1,2858,"r"]],[2859,2859],[2858,2858]]],[1552491974113,["KotlinD@DESKTOP-JV8VAO0",[[1,2858,"Array"]],[2858,2858],[2863,2863]]],[1552491981429,["KotlinD@DESKTOP-JV8VAO0",[[1,2852,"=="],[1,2863,"=="]],[2852,2863],[2852,2867]]],[1552491998346,["KotlinD@DESKTOP-JV8VAO0",[[-1,2852,"=="],[1,2854,"["],[-1,2865,"=="],[1,2867,"](#sparsearray)"]],[2852,2867],[2879,2879]]],[1552492007658,["KotlinD@DESKTOP-JV8VAO0",[[-1,4202,"\n"]],[4201,4201],[4200,4200]]],[1552492041177,["KotlinD@DESKTOP-JV8VAO0",[[1,4201,"- \n"]],[4200,4200],[4203,4203]]],[1552492052860,["KotlinD@DESKTOP-JV8VAO0",[[1,4203,"存储和读取数据使用的时二分法"]],[4203,4203],[4217,4217]]],[1552492054910,["KotlinD@DESKTOP-JV8VAO0",[[-1,4216,"法"]],[4217,4217],[4216,4216]]],[1552492058085,["KotlinD@DESKTOP-JV8VAO0",[[1,4216,"查找法"]],[4216,4216],[4219,4219]]],[1552492058969,["KotlinD@DESKTOP-JV8VAO0",[[1,4220,"- \n"]],[4219,4219],[4222,4222]]],[1552492116005,["KotlinD@DESKTOP-JV8VAO0",[[1,4222,"数据量不打"]],[4222,4222],[4227,4227]]],[1552492116566,["KotlinD@DESKTOP-JV8VAO0",[[-1,4225,"不打"]],[4227,4227],[4225,4225]]],[1552492118767,["KotlinD@DESKTOP-JV8VAO0",[[1,4225,"不打，"]],[4225,4225],[4228,4228]]],[1552492119786,["KotlinD@DESKTOP-JV8VAO0",[[-1,4225,"不打，"]],[4228,4228],[4225,4225]]],[1552492127232,["KotlinD@DESKTOP-JV8VAO0",[[1,4225,"不大，在前几"]],[4225,4225],[4231,4231]]],[1552492127595,["KotlinD@DESKTOP-JV8VAO0",[[-1,4229,"前几"]],[4231,4231],[4229,4229]]],[1552492132877,["KotlinD@DESKTOP-JV8VAO0",[[1,4229,"千级以内"]],[4229,4229],[4233,4233]]],[1552492135785,["KotlinD@DESKTOP-JV8VAO0",[[1,4234,"- \n"]],[4233,4233],[4236,4236]]],[1552492139421,["KotlinD@DESKTOP-JV8VAO0",[[1,4236,"key必须为"]],[4236,4236],[4242,4242]]],[1552492139465,["KotlinD@DESKTOP-JV8VAO0",[[1,4239," "]],[4242,4242],[4243,4243]]],[1552492140324,["KotlinD@DESKTOP-JV8VAO0",[[1,4243,"int"]],[4243,4243],[4246,4246]]],[1552492140366,["KotlinD@DESKTOP-JV8VAO0",[[1,4243," "]],[4246,4246],[4247,4247]]],[1552492142844,["KotlinD@DESKTOP-JV8VAO0",[[1,4247,"类型"]],[4247,4247],[4249,4249]]],[1552492142886,["KotlinD@DESKTOP-JV8VAO0",[[1,4247," "]],[4249,4249],[4250,4250]]],[1552492142980,["KotlinD@DESKTOP-JV8VAO0",[[1,4250,"，"]],[4250,4250],[4251,4251]]],[1552492147114,["KotlinD@DESKTOP-JV8VAO0",[[-1,4250,"，"]],[4251,4251],[4250,4250]]],[1552492213552,["KotlinD@DESKTOP-JV8VAO0",[[1,3994,"\n- "]],[3991,3991],[3994,3994]]],[1552492250578,["KotlinD@DESKTOP-JV8VAO0",[[1,3994,"基于两个数组，int[] mHashes; Object[] mArray;减少内存占用"]],[3994,3994],[4038,4038]]],[1552492251947,["KotlinD@DESKTOP-JV8VAO0",[[-1,4036,"占用"]],[4038,4038],[4036,4036]]],[1552492258315,["KotlinD@DESKTOP-JV8VAO0",[[1,4036,"占用，"]],[4036,4036],[4039,4039]]],[1552492279345,["KotlinD@DESKTOP-JV8VAO0",[[-1,4038,"，"]],[4039,4039],[4038,4038]]],[1552492286225,["KotlinD@DESKTOP-JV8VAO0",[[1,4179,"减少内存占用，"]],[4179,4179],[4186,4186]]],[1552492288692,["KotlinD@DESKTOP-JV8VAO0",[[1,4179,"目的"]],[4179,4179],[4181,4181]]],[1552492292869,["KotlinD@DESKTOP-JV8VAO0",[[1,4032,"目的"]],[4032,4038],[4040,4040]]],[1552492365873,["KotlinD@DESKTOP-JV8VAO0",[[-1,7467,"Android的集合类有哪些？如何保证安全性，有什么好处。\n"]],[7466,7496],[7466,7466]]],[1552492366719,["KotlinD@DESKTOP-JV8VAO0",[[-1,7467,"\n"]],[7466,7466],[7465,7465]]],[1552492370324,["KotlinD@DESKTOP-JV8VAO0",[[1,7467,"\n"]],[7465,7465],[7466,7466]]],[1552492370705,["KotlinD@DESKTOP-JV8VAO0",[[1,7467,"Android的集合类有哪些？如何保证安全性，有什么好处。\n"]],[7466,7466],[7466,7496]]],[1552492371967,["KotlinD@DESKTOP-JV8VAO0",[[-1,7467,"Android的集合类有哪些？如何保证安全性，有什么好处。\n"]],[7466,7496],[7466,7466]]],[1552492372678,["KotlinD@DESKTOP-JV8VAO0",[[-1,7467,"\n"]],[7466,7466],[7465,7465]]],[1552492391391,["KotlinD@DESKTOP-JV8VAO0",[[1,7420,"####"]],[7420,7420],[7424,7424]]],[1552492392467,["KotlinD@DESKTOP-JV8VAO0",[[-1,7423,"#"]],[7424,7424],[7423,7423]]],[1552492393294,["KotlinD@DESKTOP-JV8VAO0",[[1,7423," 能不能试用Applaction启动一个Activity为什么不能？"]],[7423,7423],[7457,7457]]],[1552492396419,["KotlinD@DESKTOP-JV8VAO0",[[-1,7424,"能不能试用"]],[7424,7429],[7424,7424]]],[1552492398676,["KotlinD@DESKTOP-JV8VAO0",[[1,7424,"内否 "]],[7424,7424],[7426,7426]]],[1552492399873,["KotlinD@DESKTOP-JV8VAO0",[[1,7426,"使用"]],[7426,7426],[7428,7428]]],[1552492401632,["KotlinD@DESKTOP-JV8VAO0",[[1,7439," "]],[7439,7439],[7440,7440]]],[1552492404151,["KotlinD@DESKTOP-JV8VAO0",[[-1,7452,"为什么不能"]],[7452,7457],[7452,7452]]],[1552492404887,["KotlinD@DESKTOP-JV8VAO0",[[1,7452," "]],[7452,7452],[7453,7453]]],[1552492405897,["KotlinD@DESKTOP-JV8VAO0",[[1,7444," "]],[7444,7444],[7445,7445]]],[1552492563686,["KotlinD@DESKTOP-JV8VAO0",[[-1,7424,"内"],[1,7425,"嫩"]],[7424,7424],[7425,7425]]],[1552492564069,["KotlinD@DESKTOP-JV8VAO0",[[-1,7424,"嫩"]],[7425,7425],[7424,7424]]],[1552492565202,["KotlinD@DESKTOP-JV8VAO0",[[1,7424,"能"]],[7424,7424],[7425,7425]]],[1552492700190,["KotlinD@DESKTOP-JV8VAO0",[[1,7456,"- 可以在Application"]],[7456,7456],[7472,7472]]],[1552492700247,["KotlinD@DESKTOP-JV8VAO0",[[1,7461," "]],[7472,7472],[7473,7473]]],[1552492702195,["KotlinD@DESKTOP-JV8VAO0",[[1,7473,"启动"]],[7473,7473],[7475,7475]]],[1552492702254,["KotlinD@DESKTOP-JV8VAO0",[[1,7473," "]],[7475,7475],[7476,7476]]],[1552492706167,["KotlinD@DESKTOP-JV8VAO0",[[1,7476,"Activity"]],[7476,7476],[7484,7484]]],[1552492706212,["KotlinD@DESKTOP-JV8VAO0",[[1,7476," "]],[7484,7484],[7485,7485]]],[1552492791749,["KotlinD@DESKTOP-JV8VAO0",[[1,7485,"，但是需要注意的时，"]],[7485,7485],[7495,7495]]],[1552492792340,["KotlinD@DESKTOP-JV8VAO0",[[-1,7493,"时，"]],[7495,7495],[7493,7493]]],[1552492809038,["KotlinD@DESKTOP-JV8VAO0",[[1,7493,"是，如果原来的任务站"]],[7493,7493],[7503,7503]]],[1552492809428,["KotlinD@DESKTOP-JV8VAO0",[[-1,7502,"站"]],[7503,7503],[7502,7502]]],[1552492821119,["KotlinD@DESKTOP-JV8VAO0",[[1,7502,"栈已经销毁会启动出错"]],[7502,7502],[7512,7512]]],[1552492821855,["KotlinD@DESKTOP-JV8VAO0",[[-1,7509,"动出错"]],[7512,7512],[7509,7509]]],[1552492827822,["KotlinD@DESKTOP-JV8VAO0",[[-1,7508,"启"]],[7509,7509],[7508,7508]]],[1552492851766,["KotlinD@DESKTOP-JV8VAO0",[[1,7508,"抛出错误 ，需要判断添加标志位"]],[7508,7508],[7523,7523]]],[1552492852005,["KotlinD@DESKTOP-JV8VAO0",[[-1,7522,"位"]],[7523,7523],[7522,7522]]],[1552492868405,["KotlinD@DESKTOP-JV8VAO0",[[1,7522,"，开启新的任务栈add"]],[7522,7522],[7533,7533]]],[1552492868448,["KotlinD@DESKTOP-JV8VAO0",[[1,7530," "]],[7533,7533],[7534,7534]]],[1552492869260,["KotlinD@DESKTOP-JV8VAO0",[[-1,7531,"add"]],[7534,7534],[7531,7531]]],[1552492872140,["KotlinD@DESKTOP-JV8VAO0",[[1,7531,"addFlag()"]],[7531,7531],[7540,7540]]],[1552492874441,["KotlinD@DESKTOP-JV8VAO0",[[1,7539,"s"]],[7539,7539],[7540,7540]]],[1552492875185,["KotlinD@DESKTOP-JV8VAO0",[[-1,7539,"s"]],[7540,7540],[7539,7539]]],[1552492875757,["KotlinD@DESKTOP-JV8VAO0",[[1,7538,"s"]],[7538,7538],[7539,7539]]],[1552492886774,["KotlinD@DESKTOP-JV8VAO0",[[1,7540,"Intent.FLAG_A"]],[7540,7540],[7553,7553]]],[1552492893503,["KotlinD@DESKTOP-JV8VAO0",[[1,7553,"CTIVITY_NEW"]],[7553,7553],[7564,7564]]],[1552492893838,["KotlinD@DESKTOP-JV8VAO0",[[1,7565,")"]],[7564,7564],[7565,7565]]],[1552492894483,["KotlinD@DESKTOP-JV8VAO0",[[-1,7565,")"]],[7565,7565],[7564,7564]]],[1552492899112,["KotlinD@DESKTOP-JV8VAO0",[[1,7564,"_TASK"]],[7564,7564],[7569,7569]]],[1552492906211,["KotlinD@DESKTOP-JV8VAO0",[[1,7531,"=="],[1,7570,"=="]],[7531,7570],[7531,7574]]],[1552492912134,["KotlinD@DESKTOP-JV8VAO0",[[1,7575,"- \n"]],[7574,7574],[7577,7577]]],[1552492918389,["KotlinD@DESKTOP-JV8VAO0",[[1,7577,"yu"]],[7577,7577],[7579,7579]]],[1552492919217,["KotlinD@DESKTOP-JV8VAO0",[[-1,7577,"yu"]],[7579,7579],[7577,7577]]],[1552492923355,["KotlinD@DESKTOP-JV8VAO0",[[1,7577,"与A翠提"]],[7577,7577],[7581,7581]]],[1552492923398,["KotlinD@DESKTOP-JV8VAO0",[[1,7578," "]],[7581,7581],[7582,7582]]],[1552492924896,["KotlinD@DESKTOP-JV8VAO0",[[-1,7577,"与 A翠提"]],[7582,7582],[7577,7577]]],[1552492932283,["KotlinD@DESKTOP-JV8VAO0",[[1,7577,"都是继承实现 ContextWo"]],[7577,7577],[7593,7593]]],[1552493031762,["KotlinD@DESKTOP-JV8VAO0",[[-1,7592,"o"]],[7593,7593],[7592,7592]]],[1552493036988,["KotlinD@DESKTOP-JV8VAO0",[[1,7592,"raaper"]],[7592,7592],[7598,7598]]],[1552493039762,["KotlinD@DESKTOP-JV8VAO0",[[-1,7594,"aper"]],[7598,7598],[7594,7594]]],[1552493040725,["KotlinD@DESKTOP-JV8VAO0",[[1,7594,"pper"]],[7594,7594],[7598,7598]]],[1552493045038,["KotlinD@DESKTOP-JV8VAO0",[[1,7577,"因为"]],[7577,7577],[7579,7579]]],[1552493054138,["KotlinD@DESKTOP-JV8VAO0",[[1,7586,"=="],[1,7600,"=="]],[7586,7600],[7586,7604]]],[1552493092950,["KotlinD@DESKTOP-JV8VAO0",[[-1,7623,"，"],[1,7624,"？"]],[7623,7623],[7624,7624]]],[1552493095081,["KotlinD@DESKTOP-JV8VAO0",[[-1,7629,"。"]],[7630,7630],[7629,7629]]],[1552493095422,["KotlinD@DESKTOP-JV8VAO0",[[1,7629,"？"]],[7629,7629],[7630,7630]]],[1552493099754,["KotlinD@DESKTOP-JV8VAO0",[[1,7606,"#### "]],[7606,7606],[7611,7611]]],[1552493101811,["KotlinD@DESKTOP-JV8VAO0",[[-1,7609,"#"]],[7610,7610],[7609,7609]]],[1552493105588,["KotlinD@DESKTOP-JV8VAO0",[[1,7636,"\n"]],[7635,7635],[7636,7636]]],[1552493105739,["KotlinD@DESKTOP-JV8VAO0",[[1,7637,"\n"]],[7636,7636],[7637,7637]]],[1552493106651,["KotlinD@DESKTOP-JV8VAO0",[[1,7638,"\n"]],[7636,7636],[7637,7637]]],[1552493106785,["KotlinD@DESKTOP-JV8VAO0",[[1,7639,"\n"]],[7637,7637],[7638,7638]]],[1552493115515,["KotlinD@DESKTOP-JV8VAO0",[[-1,7610,"安卓"]],[7610,7612],[7610,7610]]],[1552493203109,["KotlinD@DESKTOP-JV8VAO0",[[-1,7610,"应用间可以进行"],[1,7617,"App"]],[7610,7610],[7613,7613]]],[1552493205346,["KotlinD@DESKTOP-JV8VAO0",[[1,7613,"间"]],[7613,7613],[7614,7614]]],[1552493205390,["KotlinD@DESKTOP-JV8VAO0",[[1,7613," "]],[7614,7614],[7615,7615]]],[1552493270762,["KotlinD@DESKTOP-JV8VAO0",[[1,7631,"#### **ContentProvider**"]],[7631,7631],[7655,7655]]],[1552493278396,["KotlinD@DESKTOP-JV8VAO0",[[1,7610," **"]],[7610,7610],[7613,7613]]],[1552493279458,["KotlinD@DESKTOP-JV8VAO0",[[1,7633," **"]],[7633,7633],[7636,7636]]],[1552493282601,["KotlinD@DESKTOP-JV8VAO0",[[-1,7633," "]],[7634,7634],[7633,7633]]],[1552493289980,["KotlinD@DESKTOP-JV8VAO0",[[1,7424,"**"],[1,7455,"**"]],[7424,7455],[7424,7459]]],[1552493296435,["KotlinD@DESKTOP-JV8VAO0",[[1,6973,"**"],[1,6996,"**"]],[6973,6996],[6973,7000]]],[1552493301404,["KotlinD@DESKTOP-JV8VAO0",[[1,6513,"**"],[1,6540,"**"]],[6513,6540],[6513,6544]]],[1552493302997,["KotlinD@DESKTOP-JV8VAO0",[[-1,6513,"**"],[-1,6542,"**"]],[6513,6544],[6513,6540]]],[1552493306458,["KotlinD@DESKTOP-JV8VAO0",[[1,6514,"**"],[1,6540,"**"]],[6514,6540],[6514,6544]]],[1552493313490,["KotlinD@DESKTOP-JV8VAO0",[[1,4764,"**"],[1,4789,"**"]],[4764,4789],[4764,4793]]],[1552493316474,["KotlinD@DESKTOP-JV8VAO0",[[1,4313,"**"],[1,4332,"**"]],[4313,4332],[4313,4336]]],[1552493321482,["KotlinD@DESKTOP-JV8VAO0",[[1,4343,"**"],[1,4352,"**"]],[4343,4352],[4343,4356]]],[1552493326123,["KotlinD@DESKTOP-JV8VAO0",[[1,4641,"**"],[1,4674,"**"]],[4641,4674],[4641,4678]]],[1552493336453,["KotlinD@DESKTOP-JV8VAO0",[[-1,7446,"#"]],[7446,7447],[7446,7446]]],[1552493339271,["KotlinD@DESKTOP-JV8VAO0",[[-1,7635,"# "]],[7635,7637],[7635,7635]]],[1552493341323,["KotlinD@DESKTOP-JV8VAO0",[[-1,7664,"#"]],[7664,7665],[7664,7664]]],[1552493350417,["KotlinD@DESKTOP-JV8VAO0",[[1,2523,"**"],[1,2526,"**"]],[2523,2526],[2523,2530]]],[1552493355858,["KotlinD@DESKTOP-JV8VAO0",[[1,2934,"**"],[1,2944,"**"]],[2934,2944],[2934,2948]]],[1552493357854,["KotlinD@DESKTOP-JV8VAO0",[[-1,2934,"**"],[-1,2946,"**"]],[2934,2948],[2934,2944]]],[1552493360073,["KotlinD@DESKTOP-JV8VAO0",[[1,2934,"**"],[1,2943,"**"]],[2934,2943],[2934,2947]]],[1552493363049,["KotlinD@DESKTOP-JV8VAO0",[[1,3135,"**"],[1,3148,"**"]],[3135,3148],[3135,3152]]],[1552493366762,["KotlinD@DESKTOP-JV8VAO0",[[1,3418,"**"],[1,3425,"**"]],[3418,3425],[3418,3429]]],[1552493373729,["KotlinD@DESKTOP-JV8VAO0",[[1,3642,"**"],[1,3659,"**"]],[3642,3659],[3642,3663]]],[1552493376465,["KotlinD@DESKTOP-JV8VAO0",[[1,3799,"**"],[1,3801,"**"]],[3799,3801],[3799,3805]]],[1552493381041,["KotlinD@DESKTOP-JV8VAO0",[[1,3969,"**"],[1,3990,"**"]],[3969,3990],[3969,3994]]],[1552493386441,["KotlinD@DESKTOP-JV8VAO0",[[1,4001,"**"],[1,4009,"**"]],[4001,4009],[4001,4013]]],[1552493390738,["KotlinD@DESKTOP-JV8VAO0",[[1,4153,"**"],[1,4164,"**"]],[4153,4164],[4153,4168]]],[1552493397930,["KotlinD@DESKTOP-JV8VAO0",[[1,2120,"**"],[1,2127,"**"]],[2120,2127],[2120,2131]]],[1552493401258,["KotlinD@DESKTOP-JV8VAO0",[[1,2055,"**"],[1,2058,"**"]],[2055,2058],[2055,2062]]],[1552493404899,["KotlinD@DESKTOP-JV8VAO0",[[1,2300,"**"],[1,2307,"**"]],[2300,2307],[2300,2311]]],[1552493409690,["KotlinD@DESKTOP-JV8VAO0",[[1,2621,"**"],[1,2628,"**"]],[2621,2628],[2621,2632]]],[1552493415947,["KotlinD@DESKTOP-JV8VAO0",[[1,1484,"**"],[1,1505,"**"]],[1484,1505],[1484,1509]]],[1552493419242,["KotlinD@DESKTOP-JV8VAO0",[[1,1156,"**"],[1,1181,"**"]],[1156,1181],[1156,1185]]],[1552493424514,["KotlinD@DESKTOP-JV8VAO0",[[1,943,"**"],[1,948,"**"]],[943,948],[943,952]]],[1552493427650,["KotlinD@DESKTOP-JV8VAO0",[[1,698,"**"],[1,705,"**"]],[698,705],[698,709]]],[1552493428404,["KotlinD@DESKTOP-JV8VAO0",[[-1,698,"**"],[-1,707,"**"]],[698,709],[698,705]]],[1552493430242,["KotlinD@DESKTOP-JV8VAO0",[[1,698,"**"],[1,704,"**"]],[698,704],[698,708]]],[1552493433018,["KotlinD@DESKTOP-JV8VAO0",[[1,479,"**"],[1,488,"**"]],[479,488],[479,492]]],[1552493436370,["KotlinD@DESKTOP-JV8VAO0",[[1,237,"**"],[1,247,"**"]],[237,247],[237,251]]],[1552493439619,["KotlinD@DESKTOP-JV8VAO0",[[1,138,"**"],[1,142,"**"]],[138,142],[138,146]]],[1552493443658,["KotlinD@DESKTOP-JV8VAO0",[[1,33,"**"],[1,48,"**"]],[33,48],[33,52]]],[1552493448002,["KotlinD@DESKTOP-JV8VAO0",[[1,2,"**"],[1,29,"**"]],[2,29],[2,33]]],[1552493489155,["KotlinD@DESKTOP-JV8VAO0",[[-1,4018,"##"]],[4018,4020],[4018,4018]]],[1552493490944,["KotlinD@DESKTOP-JV8VAO0",[[-1,4048,"##"]],[4048,4050],[4048,4048]]],[1552493498413,["KotlinD@DESKTOP-JV8VAO0",[[-1,4198,"##"]],[4198,4200],[4198,4198]]],[1552493499559,["KotlinD@DESKTOP-JV8VAO0",[[-1,4393,"#"]],[4393,4394],[4393,4393]]],[1552493500514,["KotlinD@DESKTOP-JV8VAO0",[[-1,4422,"#"]],[4422,4423],[4422,4422]]],[1552493504452,["KotlinD@DESKTOP-JV8VAO0",[[-1,4719,"#"]],[4719,4720],[4719,4719]]],[1552493505889,["KotlinD@DESKTOP-JV8VAO0",[[-1,4828,"#"]],[4828,4829],[4828,4828]]],[1552493507058,["KotlinD@DESKTOP-JV8VAO0",[[-1,4852,"#"]],[4852,4853],[4852,4852]]],[1552493511196,["KotlinD@DESKTOP-JV8VAO0",[[-1,6605,"#"]],[6605,6606],[6605,6605]]],[1552493515587,["KotlinD@DESKTOP-JV8VAO0",[[-1,7521,"#"]],[7521,7522],[7521,7521]]],[1552493517273,["KotlinD@DESKTOP-JV8VAO0",[[-1,7709,"#"]],[7709,7710],[7709,7709]]],[1552493518822,["KotlinD@DESKTOP-JV8VAO0",[[-1,7737,"#"]],[7737,7738],[7737,7737]]],[1552493549717,["KotlinD@DESKTOP-JV8VAO0",[[1,7735,"\n"]],[7734,7734],[7735,7735]]],[1552493550907,["KotlinD@DESKTOP-JV8VAO0",[[1,7735,"》"]],[7735,7735],[7736,7736]]],[1552493551409,["KotlinD@DESKTOP-JV8VAO0",[[-1,7735,"》"]],[7736,7736],[7735,7735]]],[1552493552401,["KotlinD@DESKTOP-JV8VAO0",[[1,7735,"> "]],[7735,7735],[7737,7737]]],[1552493555179,["KotlinD@DESKTOP-JV8VAO0",[[1,7737,"you"]],[7737,7737],[7740,7740]]],[1552493555977,["KotlinD@DESKTOP-JV8VAO0",[[-1,7737,"you"]],[7740,7740],[7737,7737]]],[1552493556998,["KotlinD@DESKTOP-JV8VAO0",[[1,7737,"-"]],[7737,7737],[7738,7738]]],[1552493560880,["KotlinD@DESKTOP-JV8VAO0",[[-1,7735,"> -"]],[7738,7738],[7735,7735]]],[1552493567411,["KotlinD@DESKTOP-JV8VAO0",[[1,7735,"- 数据访问，"]],[7735,7735],[7742,7742]]],[1552493567920,["KotlinD@DESKTOP-JV8VAO0",[[-1,7741,"，"]],[7742,7742],[7741,7741]]],[1552493569358,["KotlinD@DESKTOP-JV8VAO0",[[1,7741,"\":"]],[7741,7741],[7743,7743]]],[1552493569420,["KotlinD@DESKTOP-JV8VAO0",[[-1,7741,"\":"],[1,7743,"『"]],[7743,7743],[7742,7742]]],[1552493569839,["KotlinD@DESKTOP-JV8VAO0",[[-1,7741,"『"]],[7742,7742],[7741,7741]]],[1552493579472,["KotlinD@DESKTOP-JV8VAO0",[[1,7741,": ContentProvicer\\"]],[7741,7741],[7759,7759]]],[1552493580185,["KotlinD@DESKTOP-JV8VAO0",[[-1,7758,"\\"]],[7759,7759],[7758,7758]]],[1552493588284,["KotlinD@DESKTOP-JV8VAO0",[[1,7758,"、文件、云端"]],[7758,7758],[7764,7764]]],[1552493590180,["KotlinD@DESKTOP-JV8VAO0",[[-1,7762,"云端"]],[7764,7764],[7762,7762]]],[1552493597033,["KotlinD@DESKTOP-JV8VAO0",[[1,7762,"网络、本地数据库，"]],[7762,7762],[7771,7771]]],[1552493598576,["KotlinD@DESKTOP-JV8VAO0",[[-1,7770,"，"]],[7771,7771],[7770,7770]]],[1552493599878,["KotlinD@DESKTOP-JV8VAO0",[[1,7770,"、sp"]],[7770,7770],[7773,7773]]],[1552493600361,["KotlinD@DESKTOP-JV8VAO0",[[1,7774,"- \n"]],[7773,7773],[7776,7776]]],[1552493608796,["KotlinD@DESKTOP-JV8VAO0",[[1,7776,"消息传毒"]],[7776,7776],[7780,7780]]],[1552493609766,["KotlinD@DESKTOP-JV8VAO0",[[-1,7778,"传毒"]],[7780,7780],[7778,7778]]],[1552493610113,["KotlinD@DESKTOP-JV8VAO0",[[1,7778,"c"]],[7778,7778],[7779,7779]]],[1552493610156,["KotlinD@DESKTOP-JV8VAO0",[[1,7778," "]],[7779,7779],[7780,7780]]],[1552493610649,["KotlinD@DESKTOP-JV8VAO0",[[1,7780,"huand"]],[7780,7780],[7785,7785]]],[1552493612204,["KotlinD@DESKTOP-JV8VAO0",[[-1,7779,"chuand"]],[7785,7785],[7779,7779]]],[1552493612805,["KotlinD@DESKTOP-JV8VAO0",[[-1,7778," "]],[7779,7779],[7778,7778]]],[1552493614799,["KotlinD@DESKTOP-JV8VAO0",[[1,7778,"传递："]],[7778,7778],[7781,7781]]],[1552493638252,["KotlinD@DESKTOP-JV8VAO0",[[1,7781,"AIDL、BrodCastRecevier"]],[7781,7781],[7802,7802]]],[1552493680570,["KotlinD@DESKTOP-JV8VAO0",[[-1,7789,"dC"],[1,7791,"adc"],[-1,7798,"v"],[1,7800,"v"]],[7786,7786],[7803,7803]]],[1552493692908,["KotlinD@DESKTOP-JV8VAO0",[[1,7803,"、Messager"]],[7803,7803],[7812,7812]]],[1552493696908,["KotlinD@DESKTOP-JV8VAO0",[[-1,7804,"Messager"]],[7812,7812],[7804,7804]]],[1552493701558,["KotlinD@DESKTOP-JV8VAO0",[[1,7804,"Messenger"]],[7804,7804],[7813,7813]]],[1552493712206,["KotlinD@DESKTOP-JV8VAO0",[[1,7837,"- "]],[7837,7837],[7839,7839]]],[1552493740395,["KotlinD@DESKTOP-JV8VAO0",[[1,7761,"共享"]],[7761,7761],[7763,7763]]],[1552493745287,["KotlinD@DESKTOP-JV8VAO0",[[1,7766,"共享"]],[7766,7766],[7768,7768]]],[1552493791242,["KotlinD@DESKTOP-JV8VAO0",[[1,7843,"将数据操作进行风转，"]],[7843,7843],[7853,7853]]],[1552493793274,["KotlinD@DESKTOP-JV8VAO0",[[-1,7848,"进行风转，"]],[7853,7853],[7848,7848]]],[1552493800079,["KotlinD@DESKTOP-JV8VAO0",[[1,7848,"进行封装，提供URI"]],[7848,7848],[7858,7858]]],[1552493800124,["KotlinD@DESKTOP-JV8VAO0",[[1,7855," "]],[7858,7858],[7859,7859]]],[1552493805598,["KotlinD@DESKTOP-JV8VAO0",[[1,7859," 记性"]],[7859,7859],[7862,7862]]],[1552493806889,["KotlinD@DESKTOP-JV8VAO0",[[1,7862,"操作"]],[7862,7862],[7864,7864]]],[1552493808443,["KotlinD@DESKTOP-JV8VAO0",[[-1,7860,"记性操作"]],[7864,7864],[7860,7860]]],[1552493810882,["KotlinD@DESKTOP-JV8VAO0",[[1,7860,"进行操作"]],[7860,7860],[7864,7864]]],[1552493811405,["KotlinD@DESKTOP-JV8VAO0",[[1,7865,"- \n"]],[7864,7864],[7867,7867]]],[1552493816400,["KotlinD@DESKTOP-JV8VAO0",[[1,7855,"标准"]],[7855,7855],[7857,7857]]],[1552493839658,["KotlinD@DESKTOP-JV8VAO0",[[1,7869,"存储形式可以为：SqlLite"]],[7869,7869],[7884,7884]]],[1552493852674,["KotlinD@DESKTOP-JV8VAO0",[[-1,7878,"q"]],[7879,7879],[7878,7878]]],[1552493853421,["KotlinD@DESKTOP-JV8VAO0",[[1,7878,"Q"]],[7878,7878],[7879,7879]]],[1552493855889,["KotlinD@DESKTOP-JV8VAO0",[[-1,7879,"l"]],[7880,7880],[7879,7879]]],[1552493867825,["KotlinD@DESKTOP-JV8VAO0",[[1,7883,"、xml、"]],[7883,7883],[7888,7888]]],[1552493881070,["KotlinD@DESKTOP-JV8VAO0",[[1,7888,"或网络等"]],[7888,7888],[7892,7892]]],[1552493886268,["KotlinD@DESKTOP-JV8VAO0",[[1,7888,"文件，"]],[7888,7888],[7891,7891]]],[1552493886715,["KotlinD@DESKTOP-JV8VAO0",[[-1,7890,"，"]],[7891,7891],[7890,7890]]],[1552493925425,["KotlinD@DESKTOP-JV8VAO0",[[1,7895,"- ContentProvider共享"]],[7895,7895],[7914,7914]]],[1552493925471,["KotlinD@DESKTOP-JV8VAO0",[[1,7912," "]],[7914,7914],[7915,7915]]],[1552493926275,["KotlinD@DESKTOP-JV8VAO0",[[1,7915,"数据"]],[7915,7915],[7917,7917]]],[1552493928387,["KotlinD@DESKTOP-JV8VAO0",[[1,7918,"- \n"]],[7917,7917],[7920,7920]]],[1552493939073,["KotlinD@DESKTOP-JV8VAO0",[[1,7920,"ContentResolver操作"]],[7920,7920],[7937,7937]]],[1552493939121,["KotlinD@DESKTOP-JV8VAO0",[[1,7935," "]],[7937,7937],[7938,7938]]],[1552493939910,["KotlinD@DESKTOP-JV8VAO0",[[1,7938,"数据"]],[7938,7938],[7940,7940]]],[1552493943252,["KotlinD@DESKTOP-JV8VAO0",[[1,7941,"- \n"]],[7940,7940],[7943,7943]]],[1552493957219,["KotlinD@DESKTOP-JV8VAO0",[[-1,7941,"- "]],[7943,7943],[7941,7941]]],[1552493957527,["KotlinD@DESKTOP-JV8VAO0",[[1,7944,"\n"]],[7941,7941],[7942,7942]]],[1552493960995,["KotlinD@DESKTOP-JV8VAO0",[[1,7942,"## ****"]],[7942,7942],[7947,7947]]],[1552493969624,["KotlinD@DESKTOP-JV8VAO0",[[1,7947,"BroadcastReceiver"]],[7947,7947],[7964,7964]]],[1552493972388,["KotlinD@DESKTOP-JV8VAO0",[[1,7967,"- "]],[7967,7967],[7969,7969]]],[1552493988369,["KotlinD@DESKTOP-JV8VAO0",[[1,7969,"tong"]],[7969,7969],[7973,7973]]],[1552493989352,["KotlinD@DESKTOP-JV8VAO0",[[-1,7969,"tong"]],[7973,7973],[7969,7969]]],[1552493993975,["KotlinD@DESKTOP-JV8VAO0",[[1,7969,"通过Binder"]],[7969,7969],[7977,7977]]],[1552493994021,["KotlinD@DESKTOP-JV8VAO0",[[1,7971," "]],[7977,7977],[7978,7978]]],[1552493996131,["KotlinD@DESKTOP-JV8VAO0",[[1,7978,"机制"]],[7978,7978],[7980,7980]]],[1552493996176,["KotlinD@DESKTOP-JV8VAO0",[[1,7978," "]],[7980,7980],[7981,7981]]],[1552493997404,["KotlinD@DESKTOP-JV8VAO0",[[1,7981,"想"]],[7981,7981],[7982,7982]]],[1552493997732,["KotlinD@DESKTOP-JV8VAO0",[[-1,7981,"想"]],[7982,7982],[7981,7981]]],[1552494001671,["KotlinD@DESKTOP-JV8VAO0",[[1,7981,"向AMS"]],[7981,7981],[7985,7985]]],[1552494001716,["KotlinD@DESKTOP-JV8VAO0",[[1,7982," "]],[7985,7985],[7986,7986]]],[1552494003603,["KotlinD@DESKTOP-JV8VAO0",[[1,7986,"（）"]],[7986,7986],[7988,7988]]],[1552494005017,["KotlinD@DESKTOP-JV8VAO0",[[-1,7986,"（）"]],[7988,7988],[7986,7986]]],[1552494005949,["KotlinD@DESKTOP-JV8VAO0",[[1,7986,")__"]],[7986,7986],[7988,7988]]],[1552494007799,["KotlinD@DESKTOP-JV8VAO0",[[-1,7986,")__"]],[7988,7988],[7986,7986]]],[1552494008565,["KotlinD@DESKTOP-JV8VAO0",[[1,7986,"()"]],[7986,7986],[7988,7988]]],[1552494015748,["KotlinD@DESKTOP-JV8VAO0",[[1,7987,"AcvitityManagerService"]],[7987,7987],[8009,8009]]],[1552494020984,["KotlinD@DESKTOP-JV8VAO0",[[1,8010,"进行注册"]],[8010,8010],[8014,8014]]],[1552494026352,["KotlinD@DESKTOP-JV8VAO0",[[1,8015,"- \n"]],[8014,8014],[8017,8017]]],[1552494036703,["KotlinD@DESKTOP-JV8VAO0",[[1,7969,"广播接受者"]],[7969,7969],[7974,7974]]],[1552494040202,["KotlinD@DESKTOP-JV8VAO0",[[-1,7971,"接受者"]],[7974,7974],[7971,7971]]],[1552494055196,["KotlinD@DESKTOP-JV8VAO0",[[1,7971,"接收者BroadcastReceiver"]],[7971,7971],[7991,7991]]],[1552494055241,["KotlinD@DESKTOP-JV8VAO0",[[1,7974," "],[1,7991," "]],[7991,7991],[7992,7992]]],[1552494062209,["KotlinD@DESKTOP-JV8VAO0",[[1,8042,"- \n"]],[8038,8038],[8041,8041]]],[1552494065906,["KotlinD@DESKTOP-JV8VAO0",[[1,8041,"官博"]],[8041,8041],[8043,8043]]],[1552494066647,["KotlinD@DESKTOP-JV8VAO0",[[-1,8041,"官博"]],[8043,8043],[8041,8041]]],[1552494071807,["KotlinD@DESKTOP-JV8VAO0",[[1,8041,"广播发送者，"]],[8041,8041],[8047,8047]]],[1552494072534,["KotlinD@DESKTOP-JV8VAO0",[[-1,8046,"，"]],[8047,8047],[8046,8046]]],[1552494076207,["KotlinD@DESKTOP-JV8VAO0",[[1,8046,"通过binder"]],[8046,8046],[8054,8054]]],[1552494076253,["KotlinD@DESKTOP-JV8VAO0",[[1,8048," "]],[8054,8054],[8055,8055]]],[1552494077263,["KotlinD@DESKTOP-JV8VAO0",[[1,8055,"机制"]],[8055,8055],[8057,8057]]],[1552494077309,["KotlinD@DESKTOP-JV8VAO0",[[1,8055," "]],[8057,8057],[8058,8058]]],[1552494080244,["KotlinD@DESKTOP-JV8VAO0",[[-1,8049,"binder 机制"]],[8058,8058],[8049,8049]]],[1552494086858,["KotlinD@DESKTOP-JV8VAO0",[[1,8049,"Binder机制"]],[8049,8049],[8057,8057]]],[1552494086903,["KotlinD@DESKTOP-JV8VAO0",[[1,8055," "]],[8057,8057],[8058,8058]]],[1552494090662,["KotlinD@DESKTOP-JV8VAO0",[[1,8058,"向AMS"]],[8058,8058],[8062,8062]]],[1552494090707,["KotlinD@DESKTOP-JV8VAO0",[[1,8059," "]],[8062,8062],[8063,8063]]],[1552494091859,["KotlinD@DESKTOP-JV8VAO0",[[1,8063,"发送"]],[8063,8063],[8065,8065]]],[1552494091905,["KotlinD@DESKTOP-JV8VAO0",[[1,8063," "]],[8065,8065],[8066,8066]]],[1552494093085,["KotlinD@DESKTOP-JV8VAO0",[[1,8066,"广播"]],[8066,8066],[8068,8068]]],[1552494093275,["KotlinD@DESKTOP-JV8VAO0",[[1,8072,"- \n"]],[8068,8068],[8071,8071]]],[1552494100719,["KotlinD@DESKTOP-JV8VAO0",[[1,8071,"AMS查找"]],[8071,8071],[8076,8076]]],[1552494100765,["KotlinD@DESKTOP-JV8VAO0",[[1,8074," "]],[8076,8076],[8077,8077]]],[1552494109178,["KotlinD@DESKTOP-JV8VAO0",[[1,8077,"符合相应条件的（）"]],[8077,8077],[8086,8086]]],[1552494118627,["KotlinD@DESKTOP-JV8VAO0",[[1,8085,"IntentFilter、"]],[8085,8085],[8098,8098]]],[1552494119202,["KotlinD@DESKTOP-JV8VAO0",[[-1,8097,"、"]],[8098,8098],[8097,8097]]],[1552494119866,["KotlinD@DESKTOP-JV8VAO0",[[1,8097,"】"]],[8097,8097],[8098,8098]]],[1552494120506,["KotlinD@DESKTOP-JV8VAO0",[[-1,8097,"】"]],[8098,8098],[8097,8097]]],[1552494131224,["KotlinD@DESKTOP-JV8VAO0",[[1,8097,"|Permission"]],[8097,8097],[8108,8108]]],[1552494141197,["KotlinD@DESKTOP-JV8VAO0",[[1,8109,"的BroadcastReceiver"]],[8109,8109],[8127,8127]]],[1552494141244,["KotlinD@DESKTOP-JV8VAO0",[[1,8110," "]],[8127,8127],[8128,8128]]],[1552494145872,["KotlinD@DESKTOP-JV8VAO0",[[1,8128,"，将广播发送到"]],[8128,8128],[8135,8135]]],[1552494154402,["KotlinD@DESKTOP-JV8VAO0",[[1,8135,"BroadcastReceiver"]],[8135,8135],[8152,8152]]],[1552494154450,["KotlinD@DESKTOP-JV8VAO0",[[1,8135," "]],[8152,8152],[8153,8153]]],[1552494160919,["KotlinD@DESKTOP-JV8VAO0",[[1,8153,"相应"]],[8153,8153],[8155,8155]]],[1552494160965,["KotlinD@DESKTOP-JV8VAO0",[[1,8153," "]],[8155,8155],[8156,8156]]],[1552494163806,["KotlinD@DESKTOP-JV8VAO0",[[1,8156,"的消息队列中"]],[8156,8156],[8162,8162]]],[1552494183828,["KotlinD@DESKTOP-JV8VAO0",[[1,8165,"消息队列拿到此广播，回调BroadcastReceiver"]],[8165,8165],[8194,8194]]],[1552494183874,["KotlinD@DESKTOP-JV8VAO0",[[1,8177," "]],[8194,8194],[8195,8195]]],[1552494184761,["KotlinD@DESKTOP-JV8VAO0",[[1,8195,"中"]],[8195,8195],[8196,8196]]],[1552494184811,["KotlinD@DESKTOP-JV8VAO0",[[1,8195," "]],[8196,8196],[8197,8197]]],[1552494186454,["KotlinD@DESKTOP-JV8VAO0",[[1,8197,"的on"]],[8197,8197],[8200,8200]]],[1552494186499,["KotlinD@DESKTOP-JV8VAO0",[[1,8198," "]],[8200,8200],[8201,8201]]],[1552494192016,["KotlinD@DESKTOP-JV8VAO0",[[1,8201,"Receiver（）"]],[8201,8201],[8211,8211]]],[1552494192591,["KotlinD@DESKTOP-JV8VAO0",[[-1,8209,"（）"]],[8211,8211],[8209,8209]]],[1552494196074,["KotlinD@DESKTOP-JV8VAO0",[[1,8209,"()方法"]],[8209,8209],[8213,8213]]],[1552494197848,["KotlinD@DESKTOP-JV8VAO0",[[1,8211," "]],[8211,8211],[8212,8212]]],[1552494210837,["KotlinD@DESKTOP-JV8VAO0",[[-1,8208,"r"]],[8209,8209],[8208,8208]]],[1552494255472,["KotlinD@DESKTOP-JV8VAO0",[[1,8209,"Context，Intent"]],[8209,8209],[8223,8223]]],[1552494276378,["KotlinD@DESKTOP-JV8VAO0",[[1,8227,"，Intent中"]],[8227,8227],[8235,8235]]],[1552494276425,["KotlinD@DESKTOP-JV8VAO0",[[1,8234," "]],[8235,8235],[8236,8236]]],[1552494281571,["KotlinD@DESKTOP-JV8VAO0",[[1,8236,"会携带消息内筒"]],[8236,8236],[8243,8243]]],[1552494282237,["KotlinD@DESKTOP-JV8VAO0",[[-1,8241,"内筒"]],[8243,8243],[8241,8241]]],[1552494312752,["KotlinD@DESKTOP-JV8VAO0",[[1,8243,"\n"]],[8242,8242],[8243,8243]]],[1552494316056,["KotlinD@DESKTOP-JV8VAO0",[[1,8243,"## ****"]],[8243,8243],[8248,8248]]],[1552494318015,["KotlinD@DESKTOP-JV8VAO0",[[1,8248,"AIDL"]],[8248,8248],[8252,8252]]],[1552494319634,["KotlinD@DESKTOP-JV8VAO0",[[1,8255,"\n"]],[8254,8254],[8255,8255]]],[1552494373446,["KotlinD@DESKTOP-JV8VAO0",[[1,8255,"- 服务端：定义AIDL"]],[8255,8255],[8267,8267]]],[1552494373493,["KotlinD@DESKTOP-JV8VAO0",[[1,8263," "]],[8267,8267],[8268,8268]]],[1552494374685,["KotlinD@DESKTOP-JV8VAO0",[[1,8268,"文件"]],[8268,8268],[8270,8270]]],[1552494374735,["KotlinD@DESKTOP-JV8VAO0",[[1,8268," "]],[8270,8270],[8271,8271]]],[1552494374894,["KotlinD@DESKTOP-JV8VAO0",[[1,8271,"，"]],[8271,8271],[8272,8272]]],[1552494409599,["KotlinD@DESKTOP-JV8VAO0",[[1,8272,"生成java"]],[8272,8272],[8278,8278]]],[1552494409646,["KotlinD@DESKTOP-JV8VAO0",[[1,8274," "]],[8278,8278],[8279,8279]]],[1552494410525,["KotlinD@DESKTOP-JV8VAO0",[[1,8279,"文件"]],[8279,8279],[8281,8281]]],[1552494410580,["KotlinD@DESKTOP-JV8VAO0",[[1,8279," "]],[8281,8281],[8282,8282]]],[1552494413083,["KotlinD@DESKTOP-JV8VAO0",[[1,8261,"\n"]],[8261,8261],[8262,8262]]],[1552494415058,["KotlinD@DESKTOP-JV8VAO0",[[1,8262,"  -"]],[8262,8262],[8265,8265]]],[1552494416645,["KotlinD@DESKTOP-JV8VAO0",[[-1,8262,"  -"]],[8265,8265],[8262,8262]]],[1552494417212,["KotlinD@DESKTOP-JV8VAO0",[[1,8262,"-"]],[8262,8262],[8263,8263]]],[1552494419051,["KotlinD@DESKTOP-JV8VAO0",[[1,8262," "]],[8262,8262],[8263,8263]]],[1552494419980,["KotlinD@DESKTOP-JV8VAO0",[[1,8264," "]],[8264,8264],[8265,8265]]],[1552494421707,["KotlinD@DESKTOP-JV8VAO0",[[1,8287," - \n"]],[8286,8286],[8290,8290]]],[1552494427013,["KotlinD@DESKTOP-JV8VAO0",[[-1,8262," "]],[8262,8263],[8262,8262]]],[1552494428150,["KotlinD@DESKTOP-JV8VAO0",[[1,8262,"    "]],[8262,8262],[8266,8266]]],[1552494430212,["KotlinD@DESKTOP-JV8VAO0",[[-1,8262,"    "]],[8266,8266],[8262,8262]]],[1552494430972,["KotlinD@DESKTOP-JV8VAO0",[[-1,8261,"\n"]],[8262,8262],[8261,8261]]],[1552494431471,["KotlinD@DESKTOP-JV8VAO0",[[1,8261,"\n"]],[8261,8261],[8262,8262]]],[1552494432075,["KotlinD@DESKTOP-JV8VAO0",[[1,8262,"  "]],[8262,8262],[8264,8264]]],[1552494435031,["KotlinD@DESKTOP-JV8VAO0",[[1,8289,"  "]],[8288,8288],[8290,8290]]],[1552494437016,["KotlinD@DESKTOP-JV8VAO0",[[-1,8290," "]],[8291,8291],[8290,8290]]],[1552494449513,["KotlinD@DESKTOP-JV8VAO0",[[1,8292,"定义服务类，AIDL就是"]],[8292,8292],[8304,8304]]],[1552494449559,["KotlinD@DESKTOP-JV8VAO0",[[1,8302," "]],[8304,8304],[8305,8305]]],[1552494455259,["KotlinD@DESKTOP-JV8VAO0",[[1,8305,"用来在多个APP"]],[8305,8305],[8313,8313]]],[1552494455305,["KotlinD@DESKTOP-JV8VAO0",[[1,8310," "]],[8313,8313],[8314,8314]]],[1552494456351,["KotlinD@DESKTOP-JV8VAO0",[[1,8314,"之间"]],[8314,8314],[8316,8316]]],[1552494456397,["KotlinD@DESKTOP-JV8VAO0",[[1,8314," "]],[8316,8316],[8317,8317]]],[1552494463820,["KotlinD@DESKTOP-JV8VAO0",[[1,8317,"访问同一个Service"]],[8317,8317],[8329,8329]]],[1552494463866,["KotlinD@DESKTOP-JV8VAO0",[[1,8322," "]],[8329,8329],[8330,8330]]],[1552494465338,["KotlinD@DESKTOP-JV8VAO0",[[1,8330,"的"]],[8330,8330],[8331,8331]]],[1552494465384,["KotlinD@DESKTOP-JV8VAO0",[[1,8330," "]],[8331,8331],[8332,8332]]],[1552494466098,["KotlinD@DESKTOP-JV8VAO0",[[1,8332,"。"]],[8332,8332],[8333,8333]]],[1552494467101,["KotlinD@DESKTOP-JV8VAO0",[[-1,8332,"。"]],[8333,8333],[8332,8332]]],[1552494467369,["KotlinD@DESKTOP-JV8VAO0",[[1,8332,"，"]],[8332,8332],[8333,8333]]],[1552494479939,["KotlinD@DESKTOP-JV8VAO0",[[1,8333,"在这个服务类中定义对于你个的stub"]],[8333,8333],[8351,8351]]],[1552494479986,["KotlinD@DESKTOP-JV8VAO0",[[1,8347," "]],[8351,8351],[8352,8352]]],[1552494481879,["KotlinD@DESKTOP-JV8VAO0",[[1,8352,"对象"]],[8352,8352],[8354,8354]]],[1552494481925,["KotlinD@DESKTOP-JV8VAO0",[[1,8352," "]],[8354,8354],[8355,8355]]],[1552494489200,["KotlinD@DESKTOP-JV8VAO0",[[1,8355,"，在该stub"]],[8355,8355],[8362,8362]]],[1552494489246,["KotlinD@DESKTOP-JV8VAO0",[[1,8358," "]],[8362,8362],[8363,8363]]],[1552494492633,["KotlinD@DESKTOP-JV8VAO0",[[1,8363,"对象汇总"]],[8363,8363],[8367,8367]]],[1552494492679,["KotlinD@DESKTOP-JV8VAO0",[[1,8363," "]],[8367,8367],[8368,8368]]],[1552494493668,["KotlinD@DESKTOP-JV8VAO0",[[1,8368,"实现"]],[8368,8368],[8370,8370]]],[1552494495278,["KotlinD@DESKTOP-JV8VAO0",[[-1,8366,"汇总实现"]],[8370,8370],[8366,8366]]],[1552494501440,["KotlinD@DESKTOP-JV8VAO0",[[1,8366,"中实现，上述的AIDL"]],[8366,8366],[8377,8377]]],[1552494501487,["KotlinD@DESKTOP-JV8VAO0",[[1,8373," "]],[8377,8377],[8378,8378]]],[1552494503723,["KotlinD@DESKTOP-JV8VAO0",[[1,8378,"文件"]],[8378,8378],[8380,8380]]],[1552494503769,["KotlinD@DESKTOP-JV8VAO0",[[1,8378," "]],[8380,8380],[8381,8381]]],[1552494506657,["KotlinD@DESKTOP-JV8VAO0",[[1,8381,"定义中"]],[8381,8381],[8384,8384]]],[1552494507500,["KotlinD@DESKTOP-JV8VAO0",[[-1,8383,"中"]],[8384,8384],[8383,8383]]],[1552494512393,["KotlinD@DESKTOP-JV8VAO0",[[1,8383,"的抽象方法大，"]],[8383,8383],[8390,8390]]],[1552494513638,["KotlinD@DESKTOP-JV8VAO0",[[-1,8386,"方法大，"]],[8390,8390],[8386,8386]]],[1552494519428,["KotlinD@DESKTOP-JV8VAO0",[[1,8386,"方法，在服务的on"]],[8386,8386],[8395,8395]]],[1552494519474,["KotlinD@DESKTOP-JV8VAO0",[[1,8393," "]],[8395,8395],[8396,8396]]],[1552494523268,["KotlinD@DESKTOP-JV8VAO0",[[1,8396,"Bind（）"]],[8396,8396],[8402,8402]]],[1552494526109,["KotlinD@DESKTOP-JV8VAO0",[[1,8401,"Intent"]],[8401,8401],[8407,8407]]],[1552494528372,["KotlinD@DESKTOP-JV8VAO0",[[-1,8400,"（"]],[8401,8401],[8400,8400]]],[1552494529467,["KotlinD@DESKTOP-JV8VAO0",[[1,8400,"("]],[8400,8400],[8401,8401]]],[1552494532797,["KotlinD@DESKTOP-JV8VAO0",[[-1,8407,"）"]],[8408,8408],[8407,8407]]],[1552494533253,["KotlinD@DESKTOP-JV8VAO0",[[1,8407,"}"]],[8407,8407],[8408,8408]]],[1552494533675,["KotlinD@DESKTOP-JV8VAO0",[[-1,8407,"}"]],[8408,8408],[8407,8407]]],[1552494541329,["KotlinD@DESKTOP-JV8VAO0",[[1,8407,")中返回stub"]],[8407,8407],[8415,8415]]],[1552494541375,["KotlinD@DESKTOP-JV8VAO0",[[1,8411," "]],[8415,8415],[8416,8416]]],[1552494542902,["KotlinD@DESKTOP-JV8VAO0",[[1,8416,"对象"]],[8416,8416],[8418,8418]]],[1552494542949,["KotlinD@DESKTOP-JV8VAO0",[[1,8416," "]],[8418,8418],[8419,8419]]],[1552494556975,["KotlinD@DESKTOP-JV8VAO0",[[1,8419,"。AndroidManifest。"]],[8419,8419],[8436,8436]]],[1552494557528,["KotlinD@DESKTOP-JV8VAO0",[[-1,8435,"。"]],[8436,8436],[8435,8435]]],[1552494561836,["KotlinD@DESKTOP-JV8VAO0",[[1,8435,".xml配置"]],[8435,8435],[8441,8441]]],[1552494561883,["KotlinD@DESKTOP-JV8VAO0",[[1,8439," "]],[8441,8441],[8442,8442]]],[1552494568151,["KotlinD@DESKTOP-JV8VAO0",[[1,8442,"相关属性、。"]],[8442,8442],[8448,8448]]],[1552494568877,["KotlinD@DESKTOP-JV8VAO0",[[-1,8446,"、。"]],[8448,8448],[8446,8446]]],[1552494569105,["KotlinD@DESKTOP-JV8VAO0",[[1,8446,"。"]],[8446,8446],[8447,8447]]],[1552494569293,["KotlinD@DESKTOP-JV8VAO0",[[1,8448,"  - \n"]],[8447,8447],[8452,8452]]],[1552494569785,["KotlinD@DESKTOP-JV8VAO0",[[-1,8448,"  - "]],[8452,8452],[8449,8449]]],[1552494570994,["KotlinD@DESKTOP-JV8VAO0",[[1,8449,"\n"]],[8449,8449],[8450,8450]]],[1552494574625,["KotlinD@DESKTOP-JV8VAO0",[[1,8448,"-"]],[8448,8448],[8449,8449]]],[1552494588027,["KotlinD@DESKTOP-JV8VAO0",[[-1,8448,"-"]],[8449,8449],[8448,8448]]],[1552494589736,["KotlinD@DESKTOP-JV8VAO0",[[1,8448,"···"]],[8448,8448],[8451,8451]]],[1552494590391,["KotlinD@DESKTOP-JV8VAO0",[[-1,8448,"···"]],[8451,8451],[8448,8448]]],[1552494591408,["KotlinD@DESKTOP-JV8VAO0",[[1,8448,"```"]],[8448,8448],[8451,8451]]],[1552494591456,["KotlinD@DESKTOP-JV8VAO0",[[1,8451,"language\n```\n"]],[8451,8451],[8451,8459]]],[1552494593213,["KotlinD@DESKTOP-JV8VAO0",[[-1,8451,"language"],[1,8459,"j"]],[8451,8459],[8452,8452]]],[1552494593531,["KotlinD@DESKTOP-JV8VAO0",[[1,8452,"ava"]],[8452,8452],[8455,8455]]],[1552494593944,["KotlinD@DESKTOP-JV8VAO0",[[1,8456,"\n"]],[8455,8455],[8456,8456]]],[1552494604438,["KotlinD@DESKTOP-JV8VAO0",[[1,8292,"\n  - "]],[8287,8287],[8292,8292]]],[1552494605390,["KotlinD@DESKTOP-JV8VAO0",[[-1,8291," "]],[8292,8292],[8291,8291]]],[1552494608432,["KotlinD@DESKTOP-JV8VAO0",[[1,8291,"  ```"]],[8291,8291],[8296,8296]]],[1552494609367,["KotlinD@DESKTOP-JV8VAO0",[[1,8301,"\n  - "]],[8296,8296],[8301,8301]]],[1552494610082,["KotlinD@DESKTOP-JV8VAO0",[[1,8301,"```"]],[8301,8301],[8304,8304]]],[1552494612746,["KotlinD@DESKTOP-JV8VAO0",[[-1,8297,"  - ```"]],[8304,8304],[8297,8297]]],[1552494612943,["KotlinD@DESKTOP-JV8VAO0",[[-1,8297,"\n"]],[8297,8297],[8296,8296]]],[1552494614949,["KotlinD@DESKTOP-JV8VAO0",[[-1,8288,"  -  ```"]],[8296,8296],[8288,8288]]],[1552494615319,["KotlinD@DESKTOP-JV8VAO0",[[-1,8288,"\n"]],[8288,8288],[8287,8287]]],[1552494615835,["KotlinD@DESKTOP-JV8VAO0",[[1,8292,"\n  - "]],[8287,8287],[8292,8292]]],[1552494616985,["KotlinD@DESKTOP-JV8VAO0",[[-1,8288,"  - "]],[8292,8292],[8288,8288]]],[1552494618441,["KotlinD@DESKTOP-JV8VAO0",[[1,8288,"```"]],[8288,8288],[8291,8291]]],[1552494619188,["KotlinD@DESKTOP-JV8VAO0",[[1,8292,"\n"]],[8291,8291],[8292,8292]]],[1552494620950,["KotlinD@DESKTOP-JV8VAO0",[[-1,8292,"\n"]],[8292,8292],[8291,8291]]],[1552494621880,["KotlinD@DESKTOP-JV8VAO0",[[1,8291,"java"]],[8291,8291],[8295,8295]]],[1552494622129,["KotlinD@DESKTOP-JV8VAO0",[[1,8296,"\n"]],[8295,8295],[8296,8296]]],[1552494623511,["KotlinD@DESKTOP-JV8VAO0",[[1,8296,"```"]],[8296,8296],[8299,8299]]],[1552494626394,["KotlinD@DESKTOP-JV8VAO0",[[1,8296,"\n"]],[8295,8295],[8296,8296]]],[1552494630361,["KotlinD@DESKTOP-JV8VAO0",[[1,8296,"1.  interface MyAIDL {  \n2.  int plus(int a, int b);  \n3.  }"]],[8296,8296],[8356,8356]]],[1552494635166,["KotlinD@DESKTOP-JV8VAO0",[[-1,8351,"3. "]],[8351,8354],[8351,8351]]],[1552494636104,["KotlinD@DESKTOP-JV8VAO0",[[-1,8321,"2. "]],[8321,8324],[8321,8321]]],[1552494640530,["KotlinD@DESKTOP-JV8VAO0",[[-1,8296,"1.  "]],[8296,8299],[8296,8296]]],[1552494642051,["KotlinD@DESKTOP-JV8VAO0",[[-1,8344," "]],[8344,8345],[8344,8344]]],[1552494649661,["KotlinD@DESKTOP-JV8VAO0",[[1,8518,"1.  public class MyService extends Service {  \n\n3.  ......  \n\n5.  @Override  \n6.  public IBinder onBind(Intent intent) {  \n7.  return mBinder;//在onBind中返回该stub对象  \n8.  }  \n\n10.  DemoAIDL.Stub mBinder = new Stub() {//在服务类中定义对应的stub对象，实现aidl中定义的抽象方法  \n\n12.  @Override  \n13.  public int plus(int a, int b) throws RemoteException {  \n14.  return a + b;  \n15.  }  \n16.  };  \n\n18.  }"]],[8518,8518],[8895,8895]]],[1552494651151,["KotlinD@DESKTOP-JV8VAO0",[[-1,8518,"1.  "]],[8518,8522],[8518,8518]]],[1552494652360,["KotlinD@DESKTOP-JV8VAO0",[[-1,8562,"3.  "]],[8562,8566],[8562,8562]]],[1552494654318,["KotlinD@DESKTOP-JV8VAO0",[[-1,8572,"5.  "]],[8572,8576],[8572,8572]]],[1552494656765,["KotlinD@DESKTOP-JV8VAO0",[[-1,8584,"6.  "]],[8584,8588],[8584,8584]]],[1552494657930,["KotlinD@DESKTOP-JV8VAO0",[[-1,8625,"7.  "]],[8625,8629],[8625,8625]]],[1552494659341,["KotlinD@DESKTOP-JV8VAO0",[[-1,8662,"8.  "]],[8662,8666],[8662,8662]]],[1552494660468,["KotlinD@DESKTOP-JV8VAO0",[[1,8625,"  "]],[8625,8625],[8627,8627]]],[1552494662464,["KotlinD@DESKTOP-JV8VAO0",[[-1,8669,"10.  "]],[8669,8674],[8669,8669]]],[1552494663347,["KotlinD@DESKTOP-JV8VAO0",[[-1,8742,"12.  "]],[8742,8747],[8742,8742]]],[1552494664701,["KotlinD@DESKTOP-JV8VAO0",[[-1,8754,"13.  "]],[8754,8759],[8754,8754]]],[1552494665894,["KotlinD@DESKTOP-JV8VAO0",[[-1,8811,"14. "]],[8811,8815],[8811,8811]]],[1552494667976,["KotlinD@DESKTOP-JV8VAO0",[[-1,8828,"15.  "]],[8828,8833],[8828,8828]]],[1552494669266,["KotlinD@DESKTOP-JV8VAO0",[[-1,8832,"16.  "]],[8832,8837],[8832,8832]]],[1552494670451,["KotlinD@DESKTOP-JV8VAO0",[[-1,8838,"18.  "]],[8838,8843],[8838,8838]]],[1552494673300,["KotlinD@DESKTOP-JV8VAO0",[[-1,8318,"int plus(int a, int b);  \n"]],[8318,8344],[8318,8318]]],[1552494673940,["KotlinD@DESKTOP-JV8VAO0",[[1,8318,"int plus(int a, int b);  \n"]],[8318,8318],[8318,8344]]],[1552494675390,["KotlinD@DESKTOP-JV8VAO0",[[-1,8317," "]],[8317,8318],[8317,8317]]],[1552494675745,["KotlinD@DESKTOP-JV8VAO0",[[1,8317,"  "]],[8317,8317],[8319,8319]]],[1552494679814,["KotlinD@DESKTOP-JV8VAO0",[[-1,8626,"  "]],[8626,8628],[8626,8626]]],[1552494680152,["KotlinD@DESKTOP-JV8VAO0",[[1,8626,"  "]],[8626,8626],[8628,8628]]],[1552494682972,["KotlinD@DESKTOP-JV8VAO0",[[-1,8812," "]],[8812,8813],[8812,8812]]],[1552494685730,["KotlinD@DESKTOP-JV8VAO0",[[1,8812,"    "]],[8812,8812],[8816,8816]]],[1552494687048,["KotlinD@DESKTOP-JV8VAO0",[[1,8832,"  "]],[8832,8832],[8834,8834]]],[1552494687761,["KotlinD@DESKTOP-JV8VAO0",[[1,8755,"  "]],[8755,8755],[8757,8757]]],[1552494688450,["KotlinD@DESKTOP-JV8VAO0",[[1,8743,"  "]],[8743,8743],[8745,8745]]],[1552494689422,["KotlinD@DESKTOP-JV8VAO0",[[1,8670,"  "]],[8670,8670],[8672,8672]]],[1552494690233,["KotlinD@DESKTOP-JV8VAO0",[[1,8665,"  "]],[8665,8665],[8667,8667]]],[1552494691146,["KotlinD@DESKTOP-JV8VAO0",[[1,8585,"  "]],[8585,8585],[8587,8587]]],[1552494691747,["KotlinD@DESKTOP-JV8VAO0",[[1,8573,"  "]],[8573,8573],[8575,8575]]],[1552494692573,["KotlinD@DESKTOP-JV8VAO0",[[1,8632,"  "]],[8632,8632],[8634,8634]]],[1552494693770,["KotlinD@DESKTOP-JV8VAO0",[[1,8563,"  "]],[8563,8563],[8565,8565]]],[1552494698092,["KotlinD@DESKTOP-JV8VAO0",[[1,8854,"  "]],[8854,8854],[8856,8856]]],[1552494698936,["KotlinD@DESKTOP-JV8VAO0",[[1,8850,"  "]],[8850,8850],[8852,8852]]],[1552494699493,["KotlinD@DESKTOP-JV8VAO0",[[1,8832,"  "]],[8830,8830],[8832,8832]]],[1552494700197,["KotlinD@DESKTOP-JV8VAO0",[[1,8771,"  "]],[8771,8771],[8773,8773]]],[1552494700873,["KotlinD@DESKTOP-JV8VAO0",[[1,8757,"  "]],[8756,8756],[8758,8758]]],[1552494701771,["KotlinD@DESKTOP-JV8VAO0",[[1,8682,"  "]],[8681,8681],[8683,8683]]],[1552494702530,["KotlinD@DESKTOP-JV8VAO0",[[1,8675,"  "]],[8674,8674],[8676,8676]]],[1552494703257,["KotlinD@DESKTOP-JV8VAO0",[[1,8636,"  "]],[8633,8633],[8635,8635]]],[1552494704989,["KotlinD@DESKTOP-JV8VAO0",[[1,8591,"    "]],[8590,8590],[8592,8592]]],[1552494706702,["KotlinD@DESKTOP-JV8VAO0",[[-1,8593,"  "]],[8592,8592],[8590,8590]]],[1552494708609,["KotlinD@DESKTOP-JV8VAO0",[[1,8577,"  "]],[8576,8576],[8578,8578]]],[1552494713534,["KotlinD@DESKTOP-JV8VAO0",[[-1,8562,"\n"]],[8562,8562],[8561,8561]]],[1552494715542,["KotlinD@DESKTOP-JV8VAO0",[[-1,8573,"\n"]],[8573,8573],[8572,8572]]],[1552494724981,["KotlinD@DESKTOP-JV8VAO0",[[-1,8762,"\n"]],[8762,8762],[8761,8761]]],[1552494728584,["KotlinD@DESKTOP-JV8VAO0",[[1,8766,"  "],[1,8778,"  "],[1,8845,"  "],[1,8861,"  "]],[8766,8868],[8768,8876]]],[1552494730746,["KotlinD@DESKTOP-JV8VAO0",[[1,8879,"  "]],[8879,8879],[8881,8881]]],[1552494733364,["KotlinD@DESKTOP-JV8VAO0",[[-1,8886,"\n"]],[8886,8886],[8885,8885]]],[1552494736579,["KotlinD@DESKTOP-JV8VAO0",[[-1,8726,"//在服务类中定义对应的stub对象，实现aidl中定义的抽象方法  "]],[8726,8761],[8726,8726]]],[1552494738919,["KotlinD@DESKTOP-JV8VAO0",[[1,8686,"\n"]],[8685,8685],[8686,8686]]],[1552494739640,["KotlinD@DESKTOP-JV8VAO0",[[1,8686,"//在服务类中定义对应的stub对象，实现aidl中定义的抽象方法  "]],[8686,8686],[8721,8721]]],[1552494743186,["KotlinD@DESKTOP-JV8VAO0",[[1,8686,"    "]],[8686,8686],[8690,8690]]],[1552494746886,["KotlinD@DESKTOP-JV8VAO0",[[-1,8655,"//在onBind中返回该stub对象  "]],[8655,8676],[8655,8655]]],[1552494748552,["KotlinD@DESKTOP-JV8VAO0",[[1,8632,"\n    //在onBind中返回该stub对象  "]],[8632,8632],[8658,8658]]],[1552494750453,["KotlinD@DESKTOP-JV8VAO0",[[1,8637,"  "]],[8637,8637],[8639,8639]]],[1552494753333,["KotlinD@DESKTOP-JV8VAO0",[[1,8564,"  "]],[8564,8564],[8566,8566]]],[1552494755952,["KotlinD@DESKTOP-JV8VAO0",[[-1,8564,"  "],[-1,8575," "],[-1,8578," "],[-1,8591,"  "],[-1,8635," "],[-1,8640," "],[-1,8664,"  "],[-1,8688,"  "],[-1,8695," "],[-1,8698," "],[-1,8735," "],[-1,8738," "],[-1,8776," "],[-1,8781," "],[-1,8794,"  "],[-1,8863,"  "],[-1,8885,"  "],[-1,8891,"  "]],[8566,8899],[8564,8873]]],[1552494769958,["KotlinD@DESKTOP-JV8VAO0",[[-1,8305," "],[1,8306," "],[-1,8312," {  "],[1,8316," {  "],[-1,8322," "],[1,8323," "],[-1,8331," a, int b);  "],[1,8344," a, int b);  "],[-1,8525," "],[1,8526," "],[-1,8531," "],[1,8532," "],[-1,8541," "],[1,8542," "],[-1,8549," "],[1,8550," "],[-1,8557," {  "],[1,8561," {  "],[-1,8570,"  "],[1,8572,"  "],[-1,8584,"  "],[1,8586,"  "],[-1,8595," "],[1,8596," "],[-1,8603," "],[1,8604," "],[-1,8617," "],[1,8618," "],[-1,8625," { "],[1,8628," { "],[-1,8652,"   "],[1,8655,"   "],[-1,8666," "],[1,8667," "],[-1,8679,"  "],[1,8681,"  "],[-1,8718,"  "],[1,8720,"  "],[-1,8736," "],[1,8737," "],[-1,8744," = new "],[1,8751," = new "],[-1,8757," "],[1,8758," "],[-1,8773,"  "],[1,8775,"  "],[-1,8786," int "],[1,8791," int "],[-1,8799," a, int b) "],[1,8810," a, int b) "],[-1,8816," "],[1,8817," "],[-1,8832," {  "],[1,8836," {  "],[-1,8849," a + b;  "],[1,8858," a + b;  "],[-1,8864,"  "],[1,8866,"  "],[-1,8871,"  "],[1,8873,"  "],[1,8880,"```"]],[8880,8880],[8883,8883]]],[1552494770006,["KotlinD@DESKTOP-JV8VAO0",[[1,8883,"language\n```\n"]],[8883,8883],[8883,8891]]],[1552494771225,["KotlinD@DESKTOP-JV8VAO0",[[-1,8883,"language"],[1,8891,"x"]],[8883,8891],[8884,8884]]],[1552494771494,["KotlinD@DESKTOP-JV8VAO0",[[1,8884,"ml"]],[8884,8884],[8886,8886]]],[1552494771726,["KotlinD@DESKTOP-JV8VAO0",[[1,8887,"\n"]],[8886,8886],[8887,8887]]],[1552494778682,["KotlinD@DESKTOP-JV8VAO0",[[1,8887,"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.example.servicetest\"\n    android:versionCode=\"1\"\n    android:versionName=\"1.0\" >\n    ......\n\n    <service\n        android:name=\"com.example.servicetest.MyService\"\n        android:process=\":remote\" >\n        <intent-filter>\n            <action android:name=\"com.example.servicetest.MyAIDLService\"/>//注意action的android:name属性，该属性在客户端bindService中将会用到\n        </intent-filter>\n    </service>"]],[8887,8887],[9398,9398]]],[1552494781806,["KotlinD@DESKTOP-JV8VAO0",[[-1,9309,"//注意action的android:name属性，该属性在客户端bindService中将会用到"]],[9309,9358],[9309,9309]]],[1552494782777,["KotlinD@DESKTOP-JV8VAO0",[[1,9243,"\n        "]],[9234,9234],[9243,9243]]],[1552494783164,["KotlinD@DESKTOP-JV8VAO0",[[1,9243,"//注意action的android:name属性，该属性在客户端bindService中将会用到"]],[9243,9243],[9292,9292]]],[1552494785439,["KotlinD@DESKTOP-JV8VAO0",[[1,9243,"    "]],[9243,9243],[9247,9247]]],[1552494805582,["KotlinD@DESKTOP-JV8VAO0",[[1,9418,"\n"]],[9416,9416],[9417,9417]]],[1552494816916,["KotlinD@DESKTOP-JV8VAO0",[[-1,8255,"-"],[1,8256,"#"],[-1,8995,"   "],[1,8998,"   "],[-1,9033,"   "],[1,9036,"   "],[-1,9061,"   "],[1,9064,"   "],[-1,9093,"   "],[1,9096,"   "],[-1,9105,"   "],[1,9108,"   "],[-1,9118,"       "],[1,9125,"       "],[-1,9175,"       "],[1,9182,"       "],[-1,9211,"       "],[1,9218,"       "],[-1,9235,"       "],[1,9242,"       "],[-1,9297,"           "],[1,9308,"           "],[-1,9372,"       "],[1,9379,"       "],[-1,9397,"   "],[1,9400,"   "]],[8255,8256],[8256,8256]]],[1552494817346,["KotlinD@DESKTOP-JV8VAO0",[[1,8256,"##"]],[8256,8256],[8258,8258]]],[1552494823327,["KotlinD@DESKTOP-JV8VAO0",[[1,8259,"**"],[1,8262,"**"]],[8259,8262],[8259,8266]]],[1552494824707,["KotlinD@DESKTOP-JV8VAO0",[[-1,8266,"："]],[8267,8267],[8266,8266]]],[1552494830013,["KotlinD@DESKTOP-JV8VAO0",[[-1,8267,"  "]],[8267,8269],[8267,8267]]],[1552494831339,["KotlinD@DESKTOP-JV8VAO0",[[-1,8354,"  "]],[8354,8356],[8354,8354]]],[1552494843217,["KotlinD@DESKTOP-JV8VAO0",[[1,9418,"### 客户端"]],[9418,9418],[9425,9425]]],[1552494843453,["KotlinD@DESKTOP-JV8VAO0",[[1,9427,"\n"]],[9425,9425],[9426,9426]]],[1552494847780,["KotlinD@DESKTOP-JV8VAO0",[[1,9426,"- "]],[9426,9426],[9428,9428]]],[1552494853463,["KotlinD@DESKTOP-JV8VAO0",[[1,9428,"吧"]],[9428,9428],[9429,9429]]],[1552494853790,["KotlinD@DESKTOP-JV8VAO0",[[-1,9428,"吧"]],[9429,9429],[9428,9428]]],[1552494859465,["KotlinD@DESKTOP-JV8VAO0",[[1,9428,"把服务器"]],[9428,9428],[9432,9432]]],[1552494859700,["KotlinD@DESKTOP-JV8VAO0",[[-1,9431,"器"]],[9432,9432],[9431,9431]]],[1552494862157,["KotlinD@DESKTOP-JV8VAO0",[[1,9431,"端的a"]],[9431,9431],[9434,9434]]],[1552494862205,["KotlinD@DESKTOP-JV8VAO0",[[1,9433," "]],[9434,9434],[9435,9435]]],[1552494862995,["KotlinD@DESKTOP-JV8VAO0",[[1,9435,"idul"]],[9435,9435],[9439,9439]]],[1552494863983,["KotlinD@DESKTOP-JV8VAO0",[[-1,9434,"aidul"]],[9439,9439],[9434,9434]]],[1552494865474,["KotlinD@DESKTOP-JV8VAO0",[[1,9434,"AIDL"]],[9434,9434],[9438,9438]]],[1552494865857,["KotlinD@DESKTOP-JV8VAO0",[[1,9439,"- \n"]],[9438,9438],[9441,9441]]],[1552494866858,["KotlinD@DESKTOP-JV8VAO0",[[-1,9439,"- "]],[9441,9441],[9439,9439]]],[1552494867104,["KotlinD@DESKTOP-JV8VAO0",[[-1,9440,"\n"]],[9439,9439],[9438,9438]]],[1552494868538,["KotlinD@DESKTOP-JV8VAO0",[[1,9438,"wenj"]],[9438,9438],[9442,9442]]],[1552494872516,["KotlinD@DESKTOP-JV8VAO0",[[-1,9434,"AIDLwenj"]],[9442,9442],[9434,9434]]],[1552494875299,["KotlinD@DESKTOP-JV8VAO0",[[1,9434,"aidl文件"]],[9434,9434],[9440,9440]]],[1552494875346,["KotlinD@DESKTOP-JV8VAO0",[[1,9438," "]],[9440,9440],[9441,9441]]],[1552494885670,["KotlinD@DESKTOP-JV8VAO0",[[1,9441,"拷贝到相应的目录中，IDE会"]],[9441,9441],[9455,9455]]],[1552494885716,["KotlinD@DESKTOP-JV8VAO0",[[1,9454," "]],[9455,9455],[9456,9456]]],[1552494888155,["KotlinD@DESKTOP-JV8VAO0",[[1,9456,"生成java"]],[9456,9456],[9462,9462]]],[1552494888202,["KotlinD@DESKTOP-JV8VAO0",[[1,9458," "]],[9462,9462],[9463,9463]]],[1552494889371,["KotlinD@DESKTOP-JV8VAO0",[[1,9463,"文件"]],[9463,9463],[9465,9465]]],[1552494889418,["KotlinD@DESKTOP-JV8VAO0",[[1,9463," "]],[9465,9465],[9466,9466]]],[1552494907301,["KotlinD@DESKTOP-JV8VAO0",[[1,9466,"，这个是和服务端相同的，这样"]],[9466,9466],[9480,9480]]],[1552494920661,["KotlinD@DESKTOP-JV8VAO0",[[1,9480,"服务端和客户端通信协议上一直；"]],[9480,9480],[9495,9495]]],[1552494922022,["KotlinD@DESKTOP-JV8VAO0",[[-1,9492,"一直；"]],[9495,9495],[9492,9492]]],[1552494926476,["KotlinD@DESKTOP-JV8VAO0",[[1,9492,"保证了yui执行"]],[9492,9492],[9500,9500]]],[1552494926524,["KotlinD@DESKTOP-JV8VAO0",[[1,9495," "]],[9500,9500],[9501,9501]]],[1552494927615,["KotlinD@DESKTOP-JV8VAO0",[[-1,9495," yui执行"]],[9501,9501],[9495,9495]]],[1552494929990,["KotlinD@DESKTOP-JV8VAO0",[[1,9495,"一致；"]],[9495,9495],[9498,9498]]],[1552494931353,["KotlinD@DESKTOP-JV8VAO0",[[-1,9497,"；"]],[9498,9498],[9497,9497]]],[1552494931575,["KotlinD@DESKTOP-JV8VAO0",[[1,9498,"- \n"]],[9497,9497],[9500,9500]]],[1552494947040,["KotlinD@DESKTOP-JV8VAO0",[[1,9500,"在客户端的Activity"]],[9500,9500],[9513,9513]]],[1552494947088,["KotlinD@DESKTOP-JV8VAO0",[[1,9505," "]],[9513,9513],[9514,9514]]],[1552494948362,["KotlinD@DESKTOP-JV8VAO0",[[1,9514,"与"]],[9514,9514],[9515,9515]]],[1552494948409,["KotlinD@DESKTOP-JV8VAO0",[[1,9514," "]],[9515,9515],[9516,9516]]],[1552494952955,["KotlinD@DESKTOP-JV8VAO0",[[1,9516,"Service"]],[9516,9516],[9523,9523]]],[1552494953003,["KotlinD@DESKTOP-JV8VAO0",[[1,9516," "]],[9523,9523],[9524,9524]]],[1552494955547,["KotlinD@DESKTOP-JV8VAO0",[[1,9524,"通信"]],[9524,9524],[9526,9526]]],[1552494955595,["KotlinD@DESKTOP-JV8VAO0",[[1,9524," "]],[9526,9526],[9527,9527]]],[1552494969667,["KotlinD@DESKTOP-JV8VAO0",[[1,9527,"，在客户端Activity"]],[9527,9527],[9540,9540]]],[1552494969714,["KotlinD@DESKTOP-JV8VAO0",[[1,9532," "]],[9540,9540],[9541,9541]]],[1552494971715,["KotlinD@DESKTOP-JV8VAO0",[[1,9541,"中"]],[9541,9541],[9542,9542]]],[1552494971763,["KotlinD@DESKTOP-JV8VAO0",[[1,9541," "]],[9542,9542],[9543,9543]]],[1552494974733,["KotlinD@DESKTOP-JV8VAO0",[[1,9543,"定义Service"]],[9543,9543],[9552,9552]]],[1552494974781,["KotlinD@DESKTOP-JV8VAO0",[[1,9545," "]],[9552,9552],[9553,9553]]],[1552494981820,["KotlinD@DESKTOP-JV8VAO0",[[1,9553,"Connection类"]],[9553,9553],[9564,9564]]],[1552494981867,["KotlinD@DESKTOP-JV8VAO0",[[1,9563," "]],[9564,9564],[9565,9565]]],[1552494985090,["KotlinD@DESKTOP-JV8VAO0",[[1,9565,"，在类"]],[9565,9565],[9568,9568]]],[1552494987627,["KotlinD@DESKTOP-JV8VAO0",[[-1,9566,"在类"]],[9568,9568],[9566,9566]]],[1552494989686,["KotlinD@DESKTOP-JV8VAO0",[[1,9566,"复写"]],[9566,9566],[9568,9568]]],[1552494996188,["KotlinD@DESKTOP-JV8VAO0",[[1,9568,"onService"]],[9568,9568],[9577,9577]]],[1552494996235,["KotlinD@DESKTOP-JV8VAO0",[[1,9568," "]],[9577,9577],[9578,9578]]],[1552495003084,["KotlinD@DESKTOP-JV8VAO0",[[1,9578,"Connected()"]],[9578,9578],[9589,9589]]],[1552495014206,["KotlinD@DESKTOP-JV8VAO0",[[1,9588,"ComponentName name."]],[9588,9588],[9607,9607]]],[1552495014809,["KotlinD@DESKTOP-JV8VAO0",[[-1,9606,"."]],[9607,9607],[9606,9606]]],[1552495019726,["KotlinD@DESKTOP-JV8VAO0",[[1,9606,",IBinder er"]],[9606,9606],[9617,9617]]],[1552495020825,["KotlinD@DESKTOP-JV8VAO0",[[-1,9615,"er"]],[9617,9617],[9615,9615]]],[1552495022716,["KotlinD@DESKTOP-JV8VAO0",[[1,9615,"service"]],[9615,9615],[9622,9622]]],[1552495064414,["KotlinD@DESKTOP-JV8VAO0",[[1,9623,"fang"]],[9623,9623],[9627,9627]]],[1552495065537,["KotlinD@DESKTOP-JV8VAO0",[[-1,9623,"fang"]],[9627,9627],[9623,9623]]],[1552495074155,["KotlinD@DESKTOP-JV8VAO0",[[1,9623,"方法，通过XX"]],[9623,9623],[9630,9630]]],[1552495074202,["KotlinD@DESKTOP-JV8VAO0",[[1,9628," "]],[9630,9630],[9631,9631]]],[1552495074759,["KotlinD@DESKTOP-JV8VAO0",[[1,9631,"。"]],[9631,9631],[9632,9632]]],[1552495075409,["KotlinD@DESKTOP-JV8VAO0",[[-1,9631,"。"]],[9632,9632],[9631,9631]]],[1552495076418,["KotlinD@DESKTOP-JV8VAO0",[[1,9631,".s"]],[9631,9631],[9633,9633]]],[1552495077030,["KotlinD@DESKTOP-JV8VAO0",[[-1,9632,"s"]],[9633,9633],[9632,9632]]],[1552495078332,["KotlinD@DESKTOP-JV8VAO0",[[1,9632,"Sub"]],[9632,9632],[9635,9635]]],[1552495079525,["KotlinD@DESKTOP-JV8VAO0",[[-1,9633,"ub"]],[9635,9635],[9633,9633]]],[1552495087322,["KotlinD@DESKTOP-JV8VAO0",[[1,9633,"tub.asInterface()"]],[9633,9633],[9650,9650]]],[1552495090306,["KotlinD@DESKTOP-JV8VAO0",[[1,9649,"service"]],[9649,9649],[9656,9656]]],[1552495092525,["KotlinD@DESKTOP-JV8VAO0",[[1,9657,";huoqu"]],[9657,9657],[9663,9663]]],[1552495093517,["KotlinD@DESKTOP-JV8VAO0",[[-1,9658,"huoqu"]],[9663,9663],[9658,9658]]],[1552495100095,["KotlinD@DESKTOP-JV8VAO0",[[1,9658,"获取定义的AIDL"]],[9658,9658],[9667,9667]]],[1552495100144,["KotlinD@DESKTOP-JV8VAO0",[[1,9663," "]],[9667,9667],[9668,9668]]],[1552495101783,["KotlinD@DESKTOP-JV8VAO0",[[1,9668,"文件"]],[9668,9668],[9670,9670]]],[1552495101832,["KotlinD@DESKTOP-JV8VAO0",[[1,9668," "]],[9670,9670],[9671,9671]]],[1552495105723,["KotlinD@DESKTOP-JV8VAO0",[[1,9671,"生成的java"]],[9671,9671],[9678,9678]]],[1552495105770,["KotlinD@DESKTOP-JV8VAO0",[[1,9674," "]],[9678,9678],[9679,9679]]],[1552495106415,["KotlinD@DESKTOP-JV8VAO0",[[1,9679,"类"]],[9679,9679],[9680,9680]]],[1552495106463,["KotlinD@DESKTOP-JV8VAO0",[[1,9679," "]],[9680,9680],[9681,9681]]],[1552495111923,["KotlinD@DESKTOP-JV8VAO0",[[1,9681," ，使用"]],[9681,9681],[9685,9685]]],[1552495118562,["KotlinD@DESKTOP-JV8VAO0",[[1,9685,"bindeService"]],[9685,9685],[9697,9697]]],[1552495118609,["KotlinD@DESKTOP-JV8VAO0",[[1,9685," "]],[9697,9697],[9698,9698]]],[1552495120844,["KotlinD@DESKTOP-JV8VAO0",[[1,9698,"（）"]],[9698,9698],[9700,9700]]],[1552495121787,["KotlinD@DESKTOP-JV8VAO0",[[-1,9697,"e（）"]],[9700,9700],[9697,9697]]],[1552495123697,["KotlinD@DESKTOP-JV8VAO0",[[1,9697,"e()"]],[9697,9697],[9700,9700]]],[1552495130378,["KotlinD@DESKTOP-JV8VAO0",[[1,9699,"intent,conn,conte"]],[9699,9699],[9716,9716]]],[1552495131767,["KotlinD@DESKTOP-JV8VAO0",[[-1,9711,"conte"]],[9716,9716],[9711,9711]]],[1552495136308,["KotlinD@DESKTOP-JV8VAO0",[[1,9711,"Context.Bin"]],[9711,9711],[9722,9722]]],[1552495137313,["KotlinD@DESKTOP-JV8VAO0",[[-1,9720,"in"]],[9722,9722],[9720,9720]]],[1552495140259,["KotlinD@DESKTOP-JV8VAO0",[[1,9720,"IND_AS"]],[9720,9720],[9726,9726]]],[1552495141453,["KotlinD@DESKTOP-JV8VAO0",[[-1,9725,"S"]],[9726,9726],[9725,9725]]],[1552495144331,["KotlinD@DESKTOP-JV8VAO0",[[1,9725,"UTO_CA"]],[9725,9725],[9731,9731]]],[1552495145033,["KotlinD@DESKTOP-JV8VAO0",[[-1,9730,"A"]],[9731,9731],[9730,9730]]],[1552495148340,["KotlinD@DESKTOP-JV8VAO0",[[1,9730,"REATE"]],[9730,9730],[9735,9735]]],[1552495150895,["KotlinD@DESKTOP-JV8VAO0",[[1,9736,"l;"]],[9736,9736],[9738,9738]]],[1552495151438,["KotlinD@DESKTOP-JV8VAO0",[[-1,9736,"l;"]],[9738,9738],[9736,9736]]],[1552495156910,["KotlinD@DESKTOP-JV8VAO0",[[1,9736,";来帮顶"]],[9736,9736],[9740,9740]]],[1552495157831,["KotlinD@DESKTOP-JV8VAO0",[[-1,9737,"来帮顶"]],[9740,9740],[9737,9737]]],[1552495172012,["KotlinD@DESKTOP-JV8VAO0",[[1,9737,"绑定远程服务，注意此时的intent"]],[9737,9737],[9755,9755]]],[1552495172060,["KotlinD@DESKTOP-JV8VAO0",[[1,9749," "]],[9755,9755],[9756,9756]]],[1552495173361,["KotlinD@DESKTOP-JV8VAO0",[[1,9756,"需要"]],[9756,9756],[9758,9758]]],[1552495173409,["KotlinD@DESKTOP-JV8VAO0",[[1,9756," "]],[9758,9758],[9759,9759]]],[1552495174827,["KotlinD@DESKTOP-JV8VAO0",[[1,9759,"制定为"]],[9759,9759],[9762,9762]]],[1552495176703,["KotlinD@DESKTOP-JV8VAO0",[[-1,9759,"制定为"]],[9762,9762],[9759,9759]]],[1552495193977,["KotlinD@DESKTOP-JV8VAO0",[[1,9759,"指定为在服务端创建的额"]],[9759,9759],[9770,9770]]],[1552495195157,["KotlinD@DESKTOP-JV8VAO0",[[-1,9769,"额"]],[9770,9770],[9769,9769]]],[1552495198382,["KotlinD@DESKTOP-JV8VAO0",[[1,9769,"service"]],[9769,9769],[9776,9776]]],[1552495198430,["KotlinD@DESKTOP-JV8VAO0",[[1,9769," "]],[9776,9776],[9777,9777]]],[1552495198750,["KotlinD@DESKTOP-JV8VAO0",[[1,9777,"的"]],[9777,9777],[9778,9778]]],[1552495198798,["KotlinD@DESKTOP-JV8VAO0",[[1,9777," "]],[9778,9778],[9779,9779]]],[1552495199719,["KotlinD@DESKTOP-JV8VAO0",[[1,9779,"name"]],[9779,9779],[9783,9783]]],[1552495199766,["KotlinD@DESKTOP-JV8VAO0",[[1,9779," "]],[9783,9783],[9784,9784]]],[1552495200859,["KotlinD@DESKTOP-JV8VAO0",[[1,9784,"属性"]],[9784,9784],[9786,9786]]],[1552495200907,["KotlinD@DESKTOP-JV8VAO0",[[1,9784," "]],[9786,9786],[9787,9787]]],[1552495201050,["KotlinD@DESKTOP-JV8VAO0",[[1,9787,"。"]],[9787,9787],[9788,9788]]],[1552495210624,["KotlinD@DESKTOP-JV8VAO0",[[1,9787,"[]"]],[9787,9787],[9789,9789]]],[1552495211697,["KotlinD@DESKTOP-JV8VAO0",[[-1,9787,"[]"]],[9789,9789],[9787,9787]]],[1552495212179,["KotlinD@DESKTOP-JV8VAO0",[[1,9787,"()"]],[9787,9787],[9789,9789]]],[1552495212928,["KotlinD@DESKTOP-JV8VAO0",[[-1,9787,"()"]],[9789,9789],[9787,9787]]],[1552495213940,["KotlinD@DESKTOP-JV8VAO0",[[1,9787,"{}"]],[9787,9787],[9789,9789]]],[1552495214843,["KotlinD@DESKTOP-JV8VAO0",[[-1,9787,"{}"]],[9789,9789],[9787,9787]]],[1552495215186,["KotlinD@DESKTOP-JV8VAO0",[[1,9787,"【】"]],[9787,9787],[9789,9789]]],[1552495216491,["KotlinD@DESKTOP-JV8VAO0",[[-1,9787,"【】"]],[9789,9789],[9787,9787]]],[1552495219291,["KotlinD@DESKTOP-JV8VAO0",[[1,9787,"{}"]],[9787,9787],[9789,9789]]],[1552495219870,["KotlinD@DESKTOP-JV8VAO0",[[1,9788,"com.example.servicetest.MyAIDLService"]],[9788,9788],[9825,9825]]],[1552495220538,["KotlinD@DESKTOP-JV8VAO0",[[-1,9788,"com.example.servicetest.MyAIDLService"]],[9825,9825],[9788,9788]]],[1552495220902,["KotlinD@DESKTOP-JV8VAO0",[[-1,9787,"{}"]],[9789,9789],[9787,9787]]],[1552495221647,["KotlinD@DESKTOP-JV8VAO0",[[1,9787,"【】"]],[9787,9787],[9789,9789]]],[1552495222361,["KotlinD@DESKTOP-JV8VAO0",[[1,9788,"com.example.servicetest.MyAIDLService"]],[9788,9788],[9825,9825]]],[1552495226695,["KotlinD@DESKTOP-JV8VAO0",[[1,9788,"=="],[1,9825,"=="]],[9788,9825],[9788,9829]]],[1552495242991,["KotlinD@DESKTOP-JV8VAO0",[[1,9833,"\n"]],[9832,9832],[9833,9833]]],[1552495243137,["KotlinD@DESKTOP-JV8VAO0",[[1,9834,"\n"]],[9833,9833],[9834,9834]]],[1552495245531,["KotlinD@DESKTOP-JV8VAO0",[[1,9832,"···"]],[9832,9832],[9835,9835]]],[1552495246623,["KotlinD@DESKTOP-JV8VAO0",[[-1,9832,"···"]],[9835,9835],[9832,9832]]],[1552495247606,["KotlinD@DESKTOP-JV8VAO0",[[1,9832,"```"]],[9832,9832],[9835,9835]]],[1552495247662,["KotlinD@DESKTOP-JV8VAO0",[[1,9835,"language\n```\n"]],[9835,9835],[9835,9843]]],[1552495249813,["KotlinD@DESKTOP-JV8VAO0",[[-1,9835,"language"],[1,9843,"j"]],[9835,9843],[9836,9836]]],[1552495250190,["KotlinD@DESKTOP-JV8VAO0",[[1,9836,"ava"]],[9836,9836],[9839,9839]]],[1552495250530,["KotlinD@DESKTOP-JV8VAO0",[[1,9840,"\n"]],[9839,9839],[9840,9840]]],[1552495264287,["KotlinD@DESKTOP-JV8VAO0",[[1,9840,"intent "]],[9840,9840],[9847,9847]]],[1552495265125,["KotlinD@DESKTOP-JV8VAO0",[[-1,9840,"intent "]],[9847,9847],[9840,9840]]],[1552495268429,["KotlinD@DESKTOP-JV8VAO0",[[1,9840,"intent "]],[9840,9840],[9847,9847]]],[1552495269046,["KotlinD@DESKTOP-JV8VAO0",[[-1,9840,"intent "]],[9847,9847],[9840,9840]]],[1552495287541,["KotlinD@DESKTOP-JV8VAO0",[[1,9840,"public class MainActivity extends Activity implements OnClickListener {\n\n\n\t...\n\tprivate MyAIDL myAIDL;\n\n\tprivate ServiceConnection connection = new ServiceConnection() {\n\n\t\t@Override\n\t\tpublic void onServiceDisconnected(ComponentName name) {\n\t\t}\n\n\t\t@Override\n\t\tpublic void onServiceConnected(ComponentName name, IBinder service) {\n\t\t\tmyAIDL = MyAIDL.Stub.asInterface(service);//在onServiceConnected中将IBinder转换为aidl对应的java类\n\t\t\ttry {\n\t\t\t\tint result = myAIDL.plus(3, 5);\n\t\t\t\tLog.d(\"TAG\", \"result is \" + result);\n\t\t\t} catch (RemoteException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t};\nprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.activity_main);\n\t\tButton bindService = (Button) findViewById(R.id.bind_service);\n\t\tbindService.setOnClickListener(new OnClickListener() {\n\t\t@Override\n\t\tpublic void onClick(View v) {\n\t\t   Intent intent = new Intent(\"com.example.servicetest.MyAIDLService\");//intent指定为我们在服务端创建的service的intent-filter中action的android:name属性。\n\t\t   bindService(intent, connection, BIND_AUTO_CREATE);\n\t\t}\n\t     });\n\t}\n\n}"]],[9840,9840],[10930,10930]]],[1552495289763,["KotlinD@DESKTOP-JV8VAO0",[[-1,9913,"\n"]],[9912,9913],[9912,9912]]],[1552495290253,["KotlinD@DESKTOP-JV8VAO0",[[-1,9912,"\n"]],[9912,9912],[9911,9911]]],[1552495294412,["KotlinD@DESKTOP-JV8VAO0",[[-1,10213,"//在onServiceConnected中将IBinder转换为aidl对应的java类"]],[10213,10258],[10213,10213]]],[1552495296115,["KotlinD@DESKTOP-JV8VAO0",[[1,10170,"\n\t\t"]],[10167,10167],[10170,10170]]],[1552495298098,["KotlinD@DESKTOP-JV8VAO0",[[1,10170,"    //在onServiceConnected中将IBinder转换为aidl对应的java类"]],[10170,10170],[10219,10219]]],[1552495302291,["KotlinD@DESKTOP-JV8VAO0",[[1,10423,"  "],[1,10476,"  "],[1,10514,"  "],[1,10556,"  "],[1,10621,"  "],[1,10678,"  "],[1,10690,"  "],[1,10722,"  "],[1,10860,"  "],[1,10916,"  "],[1,10920,"  "],[1,10930,"  "]],[10423,10932],[10423,10956]]],[1552495302924,["KotlinD@DESKTOP-JV8VAO0",[[1,10425,"  "],[1,10480,"  "],[1,10518,"  "],[1,10564,"  "],[1,10631,"  "],[1,10688,"  "],[1,10704,"  "],[1,10736,"  "],[1,10878,"  "],[1,10936,"  "],[1,10940,"  "],[1,10952,"  "]],[10423,10956],[10423,10980]]],[1552495306341,["KotlinD@DESKTOP-JV8VAO0",[[-1,10827,"//intent指定为我们在服务端创建的service的intent-filter中action的android:name属性。"]],[10827,10891],[10827,10827]]],[1552495307940,["KotlinD@DESKTOP-JV8VAO0",[[1,10756,"\n    \t\t"]],[10749,10749],[10756,10756]]],[1552495308342,["KotlinD@DESKTOP-JV8VAO0",[[1,10756,"//intent指定为我们在服务端创建的service的intent-filter中action的android:name属性。"]],[10756,10756],[10820,10820]]],[1552495311861,["KotlinD@DESKTOP-JV8VAO0",[[1,10756,"    "]],[10756,10756],[10760,10760]]],[1552495313180,["KotlinD@DESKTOP-JV8VAO0",[[-1,10759," "]],[10760,10760],[10759,10759]]],[1552495317173,["KotlinD@DESKTOP-JV8VAO0",[[-1,10482,"  "],[-1,10522,"  "],[-1,10568," "],[-1,10571," "],[-1,10639,"  "],[-1,10698,"  "],[-1,10716,"  "],[-1,10750,"  "],[-1,10824," "],[-1,10827," "],[-1,10904,"  "],[-1,10962,"  "]],[10486,10969],[10484,10949]]],[1552495324028,["KotlinD@DESKTOP-JV8VAO0",[[-1,10480,"  "],[-1,10520,"  "],[-1,10564,"  "],[-1,10631,"  "],[-1,10690,"  "],[-1,10704,"  "],[-1,10738,"  "],[-1,10810,"  "],[-1,10886,"  "],[-1,10944,"  "]],[10481,10949],[10480,10929]]],[1552495324238,["KotlinD@DESKTOP-JV8VAO0",[[-1,10481,"\t"],[-1,10518,"\t"],[-1,10560,"\t"],[-1,10626,"\t"],[-1,10682,"\t"],[-1,10695,"\t"],[-1,10726,"\t"],[-1,10796,"\t"],[-1,10871,"\t"],[-1,10926,"\t"]],[10480,10929],[10480,10919]]],[1552495324416,["KotlinD@DESKTOP-JV8VAO0",[[-1,10480,"\t"],[-1,10517,"\t"],[-1,10558,"\t"],[-1,10622,"\t"],[-1,10678,"\t"],[-1,10689,"\t"],[-1,10720,"\t"],[-1,10789,"\t"],[-1,10862,"\t"],[-1,10917,"\t"]],[10480,10919],[10480,10909]]],[1552495324594,["KotlinD@DESKTOP-JV8VAO0",[[-1,10715,"  "],[-1,10783,"  "],[-1,10854,"  "]],[10480,10909],[10480,10903]]],[1552495324744,["KotlinD@DESKTOP-JV8VAO0",[[-1,10714," "],[-1,10780," "],[-1,10850," "]],[10480,10903],[10480,10903]]],[1552495325543,["KotlinD@DESKTOP-JV8VAO0",[[-1,10903,"  "]],[10480,10903],[10480,10901]]],[1552495326981,["KotlinD@DESKTOP-JV8VAO0",[[1,10480,"  "],[1,10516,"  "],[1,10556,"  "],[1,10619,"  "],[1,10674,"  "],[1,10684,"  "],[1,10714,"  "],[1,10779,"  "],[1,10848,"  "],[1,10899,"  "]],[10480,10901],[10480,10921]]],[1552495327358,["KotlinD@DESKTOP-JV8VAO0",[[1,10482,"  "],[1,10518,"  "],[1,10560," "],[1,10562," "],[1,10627,"  "],[1,10682,"  "],[1,10696,"  "],[1,10726,"  "],[1,10793," "],[1,10795," "],[1,10866,"  "],[1,10917,"  "]],[10480,10921],[10480,10941]]],[1552495327546,["KotlinD@DESKTOP-JV8VAO0",[[1,10484,"  "],[1,10520,"  "],[1,10564," "],[1,10568," "],[1,10635,"  "],[1,10690,"  "],[1,10708,"  "],[1,10738,"  "],[1,10807," "],[1,10811," "],[1,10884,"  "],[1,10935,"  "]],[10480,10941],[10480,10961]]],[1552495328279,["KotlinD@DESKTOP-JV8VAO0",[[1,10486,"  "],[1,10522,"  "],[1,10568," "],[1,10574," "],[1,10643,"  "],[1,10698,"  "],[1,10720,"  "],[1,10750,"  "],[1,10821," "],[1,10827," "],[1,10902,"  "],[1,10953,"  "]],[10480,10961],[10480,10981]]],[1552495328729,["KotlinD@DESKTOP-JV8VAO0",[[1,10488,"  "],[1,10524,"  "],[1,10572," "],[1,10580," "],[1,10651,"  "],[1,10706,"  "],[1,10732,"  "],[1,10762,"  "],[1,10835," "],[1,10843," "],[1,10920,"  "],[1,10971,"  "]],[10480,10981],[10480,11001]]],[1552495336042,["KotlinD@DESKTOP-JV8VAO0",[[-1,10425,"  "],[-1,10480,"  "],[-1,10534,"  "],[-1,10576," "],[-1,10585," "],[-1,10649,"  "],[-1,10722,"  "],[-1,10734," "],[-1,10743," "],[-1,10774,"  "],[-1,10849," "],[-1,10858," "],[-1,10928,"  "],[-1,10997,"  "],[-1,11001,"  "],[-1,11013,"  "]],[10423,11020],[10423,10994]]],[1552495336237,["KotlinD@DESKTOP-JV8VAO0",[[-1,10423,"  "],[-1,10478,"  "],[-1,10528,"  "],[-1,10570," "],[-1,10577," "],[-1,10641,"  "],[-1,10710,"  "],[-1,10722," "],[-1,10729," "],[-1,10760,"  "],[-1,10839,"  "],[-1,10910," "],[-1,10917," "],[-1,10975,"  "],[-1,10979,"\t"],[-1,10989,"  "]],[10423,10994],[10423,10969]]],[1552495336429,["KotlinD@DESKTOP-JV8VAO0",[[-1,10480,"  "],[-1,10518,"  "],[-1,10564,"  "],[-1,10637,"  "],[-1,10698,"  "],[-1,10710,"  "],[-1,10750,"  "],[-1,10817,"  "],[-1,10892,"  "],[-1,10953,"  "],[-1,10957,"  "],[-1,10966,"\t"]],[10423,10969],[10423,10946]]],[1552495336614,["KotlinD@DESKTOP-JV8VAO0",[[-1,10478,"  "],[-1,10516,"  "],[-1,10560,"  "],[-1,10629,"  "],[-1,10688,"  "],[-1,10700," "],[-1,10703," "],[-1,10734,"  "],[-1,10805,"  "],[-1,10876," "],[-1,10879," "],[-1,10933,"  "],[-1,10937,"  "]],[10423,10946],[10423,10924]]],[1552495336795,["KotlinD@DESKTOP-JV8VAO0",[[-1,10476,"  "],[-1,10514,"  "],[-1,10556,"  "],[-1,10621,"  "],[-1,10678,"  "],[-1,10690,"  "],[-1,10722,"  "],[-1,10789,"  "],[-1,10860,"  "],[-1,10913,"  "],[-1,10917," "]],[10423,10924],[10423,10904]]],[1552495337677,["KotlinD@DESKTOP-JV8VAO0",[[1,10423,"  "],[1,10476,"  "],[1,10512,"  "],[1,10552,"  "],[1,10615,"  "],[1,10670,"  "],[1,10680,"  "],[1,10710,"  "],[1,10775,"  "],[1,10844,"  "],[1,10895,"  "],[1,10897,"  "],[1,10901,"  "],[1,10903,"  "]],[10423,10904],[10423,10932]]],[1552495337872,["KotlinD@DESKTOP-JV8VAO0",[[1,10425,"  "],[1,10478,"  "],[1,10518,"  "],[1,10558," "],[1,10560," "],[1,10625,"  "],[1,10680," "],[1,10682," "],[1,10692,"  "],[1,10726,"  "],[1,10791,"  "],[1,10864,"  "],[1,10915," "],[1,10917," "],[1,10919,"  "],[1,10925," "],[1,10927," "],[1,10929,"  "]],[10423,10932],[10423,10960]]],[1552495341611,["KotlinD@DESKTOP-JV8VAO0",[[1,10484,"  "],[1,10520,"  "],[1,10564,"  "],[1,10635,"  "],[1,10694,"  "],[1,10704," "],[1,10708," "],[1,10738,"  "],[1,10811,"  "],[1,10880," "],[1,10884," "],[1,10939,"  "],[1,10941,"  "]],[10483,10948],[10485,10970]]],[1552495344451,["KotlinD@DESKTOP-JV8VAO0",[[1,10528,"  "],[1,10568,"  "],[1,10637," "],[1,10643," "],[1,10704,"  "],[1,10714," "],[1,10720," "],[1,10750,"  "],[1,10821,"  "],[1,10902,"  "],[1,10953,"  "]],[10528,10960],[10530,10978]]],[1552495348518,["KotlinD@DESKTOP-JV8VAO0",[[1,10530,"  "],[1,10570,"  "],[1,10649,"  "],[1,10704,"  "],[1,10730,"  "],[1,10760,"  "],[1,10841,"  "],[1,10910,"  "]],[10530,10968],[10532,10984]]],[1552495353289,["KotlinD@DESKTOP-JV8VAO0",[[1,10720,"  "],[1,10730,"  "],[1,10770," "],[1,10780," "],[1,10845,"  "],[1,10924,"  "]],[10718,10984],[10720,10994]]],[1552495357328,["KotlinD@DESKTOP-JV8VAO0",[[1,11003,"  "]],[11003,11003],[11005,11005]]],[1552495359815,["KotlinD@DESKTOP-JV8VAO0",[[1,11005,"  "]],[11005,11005],[11007,11007]]],[1552495362044,["KotlinD@DESKTOP-JV8VAO0",[[1,10786,"  "],[1,10851,"  "],[1,10932,"  "]],[10784,10994],[10786,11000]]],[1552495368705,["KotlinD@DESKTOP-JV8VAO0",[[-1,10530,"  "],[-1,10572,"  "],[-1,10645," "],[-1,10654," "],[-1,10720,"  "],[-1,10732," "],[-1,10743," "],[-1,10774,"  "],[-1,10853,"  "],[-1,10948,"  "],[-1,11001,"  "]],[10532,11014],[10530,10996]]],[1552495375419,["KotlinD@DESKTOP-JV8VAO0",[[-1,11013,"    "]],[11017,11017],[11013,11013]]],[1552495375858,["KotlinD@DESKTOP-JV8VAO0",[[-1,11013,"\n"]],[11013,11013],[11012,11012]]],[1552495385440,["KotlinD@DESKTOP-JV8VAO0",[[1,10423,"\t\n"]],[10422,10422],[10424,10424]]],[1552495392379,["KotlinD@DESKTOP-JV8VAO0",[[1,10651,"\n        "]],[10642,10642],[10651,10651]]],[1552495398817,["KotlinD@DESKTOP-JV8VAO0",[[1,10580,"\n        "]],[10571,10571],[10580,10580]]],[1552495400520,["KotlinD@DESKTOP-JV8VAO0",[[1,10488,"  "]],[10488,10488],[10490,10490]]],[1552495404905,["KotlinD@DESKTOP-JV8VAO0",[[-1,10488,"  "],[-1,10526,"  "],[-1,10574,"  "],[-1,10589,"  "],[-1,10660,"  "],[-1,10663,"  "],[-1,10734,"  "],[-1,10746,"  "],[-1,10786,"  "],[-1,10873,"  "],[-1,10954,"  "],[-1,11007,"  "]],[10490,11018],[10488,10994]]],[1552495407755,["KotlinD@DESKTOP-JV8VAO0",[[1,10488,"  "],[1,10524,"  "],[1,10570,"  "],[1,10583,"  "],[1,10652,"  "],[1,10653,"  "],[1,10722,"  "],[1,10732,"  "],[1,10770,"  "],[1,10855,"  "],[1,10934,"  "],[1,10985,"  "]],[10488,10994],[10490,11018]]],[1552495423257,["KotlinD@DESKTOP-JV8VAO0",[[1,11042,"## Messager"]],[11042,11042],[11053,11053]]],[1552495423910,["KotlinD@DESKTOP-JV8VAO0",[[1,11055,"\n"]],[11053,11053],[11054,11054]]],[1552495427673,["KotlinD@DESKTOP-JV8VAO0",[[1,11054,"- "]],[11054,11054],[11056,11056]]],[1552495438221,["KotlinD@DESKTOP-JV8VAO0",[[1,11056,"ME"]],[11056,11056],[11058,11058]]],[1552495439067,["KotlinD@DESKTOP-JV8VAO0",[[-1,11057,"E"]],[11058,11058],[11057,11057]]],[1552495439911,["KotlinD@DESKTOP-JV8VAO0",[[1,11057,"ess"]],[11057,11057],[11060,11060]]],[1552495441683,["KotlinD@DESKTOP-JV8VAO0",[[-1,11055," Mess"]],[11060,11060],[11055,11055]]],[1552495441918,["KotlinD@DESKTOP-JV8VAO0",[[1,11055,"s"]],[11055,11055],[11056,11056]]],[1552495442448,["KotlinD@DESKTOP-JV8VAO0",[[-1,11055,"s"]],[11056,11056],[11055,11055]]],[1552495443369,["KotlinD@DESKTOP-JV8VAO0",[[1,11055," shix"]],[11055,11055],[11060,11060]]],[1552495444243,["KotlinD@DESKTOP-JV8VAO0",[[-1,11056,"shix"]],[11060,11060],[11056,11056]]],[1552495447492,["KotlinD@DESKTOP-JV8VAO0",[[1,11056,"实现IPC"]],[11056,11056],[11061,11061]]],[1552495447540,["KotlinD@DESKTOP-JV8VAO0",[[1,11058," "]],[11061,11061],[11062,11062]]],[1552495449083,["KotlinD@DESKTOP-JV8VAO0",[[1,11062,"通信"]],[11062,11062],[11064,11064]]],[1552495449133,["KotlinD@DESKTOP-JV8VAO0",[[1,11062," "]],[11064,11064],[11065,11065]]],[1552495455835,["KotlinD@DESKTOP-JV8VAO0",[[1,11065,"，底层使用的也是AIDL"]],[11065,11065],[11077,11077]]],[1552495455885,["KotlinD@DESKTOP-JV8VAO0",[[1,11073," "]],[11077,11077],[11078,11078]]],[1552495458141,["KotlinD@DESKTOP-JV8VAO0",[[1,11078,"方式"]],[11078,11078],[11080,11080]]],[1552495458192,["KotlinD@DESKTOP-JV8VAO0",[[1,11078," "]],[11080,11080],[11081,11081]]],[1552495458354,["KotlinD@DESKTOP-JV8VAO0",[[1,11081,"，"]],[11081,11081],[11082,11082]]],[1552495459249,["KotlinD@DESKTOP-JV8VAO0",[[-1,11081,"，"]],[11082,11082],[11081,11081]]],[1552495459809,["KotlinD@DESKTOP-JV8VAO0",[[1,11082,"- \n"]],[11081,11081],[11084,11084]]],[1552495476358,["KotlinD@DESKTOP-JV8VAO0",[[1,11084,"不同点，Messager利用"]],[11084,11084],[11098,11098]]],[1552495476409,["KotlinD@DESKTOP-JV8VAO0",[[1,11096," "]],[11098,11098],[11099,11099]]],[1552495479035,["KotlinD@DESKTOP-JV8VAO0",[[1,11099,"了Handler"]],[11099,11099],[11107,11107]]],[1552495479084,["KotlinD@DESKTOP-JV8VAO0",[[1,11100," "]],[11107,11107],[11108,11108]]],[1552495482132,["KotlinD@DESKTOP-JV8VAO0",[[1,11108,"形式"]],[11108,11108],[11110,11110]]],[1552495482183,["KotlinD@DESKTOP-JV8VAO0",[[1,11108," "]],[11110,11110],[11111,11111]]],[1552495484073,["KotlinD@DESKTOP-JV8VAO0",[[1,11111,"处理。"]],[11111,11111],[11114,11114]]],[1552495485022,["KotlinD@DESKTOP-JV8VAO0",[[-1,11113,"。"]],[11114,11114],[11113,11113]]],[1552495485282,["KotlinD@DESKTOP-JV8VAO0",[[1,11113,"；"]],[11113,11113],[11114,11114]]],[1552495486103,["KotlinD@DESKTOP-JV8VAO0",[[-1,11113,"；"]],[11114,11114],[11113,11113]]],[1552495486396,["KotlinD@DESKTOP-JV8VAO0",[[1,11114,"- \n"]],[11113,11113],[11116,11116]]],[1552495487419,["KotlinD@DESKTOP-JV8VAO0",[[-1,11114,"- "]],[11116,11116],[11114,11114]]],[1552495487612,["KotlinD@DESKTOP-JV8VAO0",[[-1,11115,"\n"]],[11114,11114],[11113,11113]]],[1552495487926,["KotlinD@DESKTOP-JV8VAO0",[[-1,11112,"理"]],[11113,11113],[11112,11112]]],[1552495499376,["KotlinD@DESKTOP-JV8VAO0",[[1,11112,"理，因此是线程安全的。"]],[11112,11112],[11123,11123]]],[1552495499957,["KotlinD@DESKTOP-JV8VAO0",[[-1,11122,"。"]],[11123,11123],[11122,11122]]],[1552495505845,["KotlinD@DESKTOP-JV8VAO0",[[1,11123,"- \n- \n"]],[11122,11122],[11125,11125]]],[1552495508837,["KotlinD@DESKTOP-JV8VAO0",[[1,11125,"不支持对劲"]],[11125,11125],[11130,11130]]],[1552495510626,["KotlinD@DESKTOP-JV8VAO0",[[-1,11128,"对劲"]],[11130,11130],[11128,11128]]],[1552495515495,["KotlinD@DESKTOP-JV8VAO0",[[1,11128,"多线程处理，"]],[11128,11128],[11134,11134]]],[1552495520572,["KotlinD@DESKTOP-JV8VAO0",[[-1,11133,"，"]],[11134,11134],[11133,11133]]],[1552495529332,["KotlinD@DESKTOP-JV8VAO0",[[1,8255,"\n"]],[8254,8254],[8255,8255]]],[1552495534651,["KotlinD@DESKTOP-JV8VAO0",[[1,8255,"- 不是线程安全的"]],[8255,8255],[8264,8264]]],[1552495541240,["KotlinD@DESKTOP-JV8VAO0",[[1,8264,"。"]],[8264,8264],[8265,8265]]],[1552495541819,["KotlinD@DESKTOP-JV8VAO0",[[-1,8264,"。"]],[8265,8265],[8264,8264]]],[1552495546352,["KotlinD@DESKTOP-JV8VAO0",[[1,8264,"，支持多线程处理"]],[8264,8264],[8272,8272]]],[1552495590069,["KotlinD@DESKTOP-JV8VAO0",[[-1,11152,"- "]],[11152,11154],[11152,11152]]],[1552495595103,["KotlinD@DESKTOP-JV8VAO0",[[1,11152,"使用步骤"]],[11152,11152],[11156,11156]]],[1552495600082,["KotlinD@DESKTOP-JV8VAO0",[[1,11152,"### "]],[11152,11152],[11156,11156]]],[1552495602108,["KotlinD@DESKTOP-JV8VAO0",[[1,11152,"\n"]],[11152,11152],[11153,11153]]],[1552495604409,["KotlinD@DESKTOP-JV8VAO0",[[1,11163,"\n"]],[11161,11161],[11162,11162]]],[1552495621643,["KotlinD@DESKTOP-JV8VAO0",[[1,11162,"可兑换"]],[11162,11162],[11165,11165]]],[1552495622255,["KotlinD@DESKTOP-JV8VAO0",[[-1,11162,"可兑换"]],[11165,11165],[11162,11162]]],[1552495625759,["KotlinD@DESKTOP-JV8VAO0",[[1,11162,"客户端板顶"]],[11162,11162],[11167,11167]]],[1552495626491,["KotlinD@DESKTOP-JV8VAO0",[[-1,11165,"板顶"]],[11167,11167],[11165,11165]]],[1552495631923,["KotlinD@DESKTOP-JV8VAO0",[[1,11165,"绑定服务点"]],[11165,11165],[11170,11170]]],[1552495634980,["KotlinD@DESKTOP-JV8VAO0",[[1,11162,"- "]],[11162,11162],[11164,11164]]],[1552495646406,["KotlinD@DESKTOP-JV8VAO0",[[1,11172,"，在ServiceConnection"]],[11172,11172],[11191,11191]]],[1552495646456,["KotlinD@DESKTOP-JV8VAO0",[[1,11174," "]],[11191,11191],[11192,11192]]],[1552495648819,["KotlinD@DESKTOP-JV8VAO0",[[1,11192,"类"]],[11192,11192],[11193,11193]]],[1552495648870,["KotlinD@DESKTOP-JV8VAO0",[[1,11192," "]],[11193,11193],[11194,11194]]],[1552495650325,["KotlinD@DESKTOP-JV8VAO0",[[1,11194,"的on"]],[11194,11194],[11197,11197]]],[1552495650375,["KotlinD@DESKTOP-JV8VAO0",[[1,11195," "]],[11197,11197],[11198,11198]]],[1552495657023,["KotlinD@DESKTOP-JV8VAO0",[[1,11198,"ServiceConnection"]],[11198,11198],[11215,11215]]],[1552495657097,["KotlinD@DESKTOP-JV8VAO0",[[1,11216,"- \n"]],[11215,11215],[11218,11218]]],[1552495658327,["KotlinD@DESKTOP-JV8VAO0",[[-1,11216,"- "]],[11218,11218],[11216,11216]]],[1552495658561,["KotlinD@DESKTOP-JV8VAO0",[[-1,11217,"\n"]],[11216,11216],[11215,11215]]],[1552495660418,["KotlinD@DESKTOP-JV8VAO0",[[1,11215,"方法"]],[11215,11215],[11217,11217]]],[1552495660468,["KotlinD@DESKTOP-JV8VAO0",[[1,11215," "]],[11217,11217],[11218,11218]]],[1552495662507,["KotlinD@DESKTOP-JV8VAO0",[[1,11218,"中将"]],[11218,11218],[11220,11220]]],[1552495672008,["KotlinD@DESKTOP-JV8VAO0",[[1,11220,"远程服务穿过来的binder"]],[11220,11220],[11234,11234]]],[1552495672058,["KotlinD@DESKTOP-JV8VAO0",[[1,11228," "]],[11234,11234],[11235,11235]]],[1552495673376,["KotlinD@DESKTOP-JV8VAO0",[[1,11235,"对象"]],[11235,11235],[11237,11237]]],[1552495673426,["KotlinD@DESKTOP-JV8VAO0",[[1,11235," "]],[11237,11237],[11238,11238]]],[1552495678206,["KotlinD@DESKTOP-JV8VAO0",[[1,11238,"转换为Messager"]],[11238,11238],[11249,11249]]],[1552495678256,["KotlinD@DESKTOP-JV8VAO0",[[1,11241," "]],[11249,11249],[11250,11250]]],[1552495679154,["KotlinD@DESKTOP-JV8VAO0",[[1,11250,"对象"]],[11250,11250],[11252,11252]]],[1552495679203,["KotlinD@DESKTOP-JV8VAO0",[[1,11250," "]],[11252,11252],[11253,11253]]],[1552495683964,["KotlinD@DESKTOP-JV8VAO0",[[1,11253,"，调用Messager"]],[11253,11253],[11264,11264]]],[1552495684015,["KotlinD@DESKTOP-JV8VAO0",[[1,11256," "]],[11264,11264],[11265,11265]]],[1552495684588,["KotlinD@DESKTOP-JV8VAO0",[[1,11265,"的"]],[11265,11265],[11266,11266]]],[1552495684638,["KotlinD@DESKTOP-JV8VAO0",[[1,11265," "]],[11266,11266],[11267,11267]]],[1552495685919,["KotlinD@DESKTOP-JV8VAO0",[[1,11267,"send"]],[11267,11267],[11271,11271]]],[1552495685969,["KotlinD@DESKTOP-JV8VAO0",[[1,11267," "]],[11271,11271],[11272,11272]]],[1552495687191,["KotlinD@DESKTOP-JV8VAO0",[[1,11272,"函数"]],[11272,11272],[11274,11274]]],[1552495687252,["KotlinD@DESKTOP-JV8VAO0",[[1,11272," "]],[11274,11274],[11275,11275]]],[1552495693046,["KotlinD@DESKTOP-JV8VAO0",[[1,11275,"，将Message"]],[11275,11275],[11284,11284]]],[1552495693096,["KotlinD@DESKTOP-JV8VAO0",[[1,11277," "]],[11284,11284],[11285,11285]]],[1552495695396,["KotlinD@DESKTOP-JV8VAO0",[[1,11285,"发送至"]],[11285,11285],[11288,11288]]],[1552495695446,["KotlinD@DESKTOP-JV8VAO0",[[1,11285," "]],[11288,11288],[11289,11289]]],[1552495702178,["KotlinD@DESKTOP-JV8VAO0",[[1,11289,"服务点的Handler"]],[11289,11289],[11300,11300]]],[1552495702227,["KotlinD@DESKTOP-JV8VAO0",[[1,11293," "]],[11300,11300],[11301,11301]]],[1552495719467,["KotlinD@DESKTOP-JV8VAO0",[[1,11301,"，同时，需要服务端回调客户端）"]],[11301,11301],[11316,11316]]],[1552495720084,["KotlinD@DESKTOP-JV8VAO0",[[-1,11315,"）"]],[11316,11316],[11315,11315]]],[1552495720449,["KotlinD@DESKTOP-JV8VAO0",[[1,11315,"（）"]],[11315,11315],[11317,11317]]],[1552495724691,["KotlinD@DESKTOP-JV8VAO0",[[1,11316,"向Handler"]],[11316,11316],[11324,11324]]],[1552495724741,["KotlinD@DESKTOP-JV8VAO0",[[1,11317," "]],[11324,11324],[11325,11325]]],[1552495727748,["KotlinD@DESKTOP-JV8VAO0",[[1,11325,"发下系"]],[11325,11325],[11328,11328]]],[1552495727799,["KotlinD@DESKTOP-JV8VAO0",[[1,11325," "]],[11328,11328],[11329,11329]]],[1552495728579,["KotlinD@DESKTOP-JV8VAO0",[[-1,11326,"发下系"]],[11329,11329],[11326,11326]]],[1552495731090,["KotlinD@DESKTOP-JV8VAO0",[[1,11326,"发消息"]],[11326,11326],[11329,11329]]],[1552495735440,["KotlinD@DESKTOP-JV8VAO0",[[1,11330,"，色"]],[11330,11330],[11332,11332]]],[1552495735748,["KotlinD@DESKTOP-JV8VAO0",[[-1,11331,"色"]],[11332,11332],[11331,11331]]],[1552495742272,["KotlinD@DESKTOP-JV8VAO0",[[1,11331,"则可以在send"]],[11331,11331],[11339,11339]]],[1552495742323,["KotlinD@DESKTOP-JV8VAO0",[[1,11335," "]],[11339,11339],[11340,11340]]],[1552495742874,["KotlinD@DESKTOP-JV8VAO0",[[1,11340,"的"]],[11340,11340],[11341,11341]]],[1552495742924,["KotlinD@DESKTOP-JV8VAO0",[[1,11340," "]],[11341,11341],[11342,11342]]],[1552495745613,["KotlinD@DESKTOP-JV8VAO0",[[1,11342,"Message"]],[11342,11342],[11349,11349]]],[1552495745662,["KotlinD@DESKTOP-JV8VAO0",[[1,11342," "]],[11349,11349],[11350,11350]]],[1552495747310,["KotlinD@DESKTOP-JV8VAO0",[[1,11350,"中"]],[11350,11350],[11351,11351]]],[1552495747362,["KotlinD@DESKTOP-JV8VAO0",[[1,11350," "]],[11351,11351],[11352,11352]]],[1552495752005,["KotlinD@DESKTOP-JV8VAO0",[[1,11352,"设置reply"]],[11352,11352],[11359,11359]]],[1552495752055,["KotlinD@DESKTOP-JV8VAO0",[[1,11354," "]],[11359,11359],[11360,11360]]],[1552495761454,["KotlinD@DESKTOP-JV8VAO0",[[1,11360,"To，服务端就可以网"]],[11360,11360],[11370,11370]]],[1552495762073,["KotlinD@DESKTOP-JV8VAO0",[[-1,11369,"网"]],[11370,11370],[11369,11369]]],[1552495767497,["KotlinD@DESKTOP-JV8VAO0",[[1,11369,"向客户端发消息。"]],[11369,11369],[11377,11377]]],[1552495768684,["KotlinD@DESKTOP-JV8VAO0",[[1,11378,"- \n"]],[11377,11377],[11380,11380]]],[1552495770432,["KotlinD@DESKTOP-JV8VAO0",[[1,11380,"可"]],[11380,11380],[11381,11381]]],[1552495770964,["KotlinD@DESKTOP-JV8VAO0",[[-1,11378,"- 可"]],[11381,11381],[11378,11378]]],[1552495771185,["KotlinD@DESKTOP-JV8VAO0",[[1,11380,"\n"]],[11378,11378],[11379,11379]]],[1552495774428,["KotlinD@DESKTOP-JV8VAO0",[[1,11379,"客户端代码"]],[11379,11379],[11384,11384]]],[1552495777071,["KotlinD@DESKTOP-JV8VAO0",[[1,11379,"####"]],[11379,11379],[11383,11383]]],[1552495777757,["KotlinD@DESKTOP-JV8VAO0",[[-1,11382,"#"]],[11383,11383],[11382,11382]]],[1552495777881,["KotlinD@DESKTOP-JV8VAO0",[[1,11382," "]],[11382,11382],[11383,11383]]],[1552495778981,["KotlinD@DESKTOP-JV8VAO0",[[1,11390,"\n"]],[11388,11388],[11389,11389]]],[1552495780395,["KotlinD@DESKTOP-JV8VAO0",[[1,11389,"···"]],[11389,11389],[11392,11392]]],[1552495781324,["KotlinD@DESKTOP-JV8VAO0",[[-1,11389,"···"]],[11392,11392],[11389,11389]]],[1552495782156,["KotlinD@DESKTOP-JV8VAO0",[[1,11389,"1```"]],[11389,11389],[11393,11393]]],[1552495783003,["KotlinD@DESKTOP-JV8VAO0",[[-1,11389,"1```"]],[11393,11393],[11389,11389]]],[1552495783196,["KotlinD@DESKTOP-JV8VAO0",[[-1,11390,"\n"]],[11389,11389],[11388,11388]]],[1552495783555,["KotlinD@DESKTOP-JV8VAO0",[[1,11388,"``"]],[11388,11388],[11390,11390]]],[1552495784187,["KotlinD@DESKTOP-JV8VAO0",[[-1,11388,"``"]],[11390,11390],[11388,11388]]],[1552495784520,["KotlinD@DESKTOP-JV8VAO0",[[1,11390,"\n"]],[11388,11388],[11389,11389]]],[1552495785271,["KotlinD@DESKTOP-JV8VAO0",[[1,11391,"\n"]],[11389,11389],[11390,11390]]],[1552495785547,["KotlinD@DESKTOP-JV8VAO0",[[1,11390,"`"]],[11390,11390],[11391,11391]]],[1552495786077,["KotlinD@DESKTOP-JV8VAO0",[[-1,11390,"`"]],[11391,11391],[11390,11390]]],[1552495786252,["KotlinD@DESKTOP-JV8VAO0",[[-1,11391,"\n"]],[11390,11390],[11389,11389]]],[1552495786771,["KotlinD@DESKTOP-JV8VAO0",[[1,11391,"\n"]],[11389,11389],[11390,11390]]],[1552495787256,["KotlinD@DESKTOP-JV8VAO0",[[-1,11391,"\n"]],[11390,11390],[11389,11389]]],[1552495788049,["KotlinD@DESKTOP-JV8VAO0",[[1,11389,"```"]],[11389,11389],[11392,11392]]],[1552495788100,["KotlinD@DESKTOP-JV8VAO0",[[1,11392,"language\n```\n"]],[11392,11392],[11392,11400]]],[1552495789122,["KotlinD@DESKTOP-JV8VAO0",[[-1,11392,"language"],[1,11400,"j"]],[11392,11400],[11393,11393]]],[1552495789448,["KotlinD@DESKTOP-JV8VAO0",[[1,11393,"ava"]],[11393,11393],[11396,11396]]],[1552495789644,["KotlinD@DESKTOP-JV8VAO0",[[1,11397,"\n"]],[11396,11396],[11397,11397]]],[1552495790053,["KotlinD@DESKTOP-JV8VAO0",[[1,11398,"\n"]],[11397,11397],[11398,11398]]],[1552495796315,["KotlinD@DESKTOP-JV8VAO0",[[1,11397,"public class MainActivity extends Activity {\n  \n    protected static final String TAG = \"MainActivity\";\n    Messenger messenger;\n    Messenger reply;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        reply = new Messenger(handler);\n        Intent intent = new Intent(\"<span style=\"line-height: 25.2px; font-family: Verdana, Arial, Helvetica, sans-serif;\">test.messenger.MessengerTestService</span><span style=\"line-height: 25.2px; font-family: Verdana, Arial, Helvetica, sans-serif;\">\");</span>\n        // 绑定服务\n        bindService(intent, new ServiceConnection() {\n            @Override\n            public void onServiceDisconnected(ComponentName name) {\n            }\n            @Override\n            public void onServiceConnected(ComponentName name, IBinder service) {\n                Toast.makeText(MainActivity.this, \"bind success\", 0).show();\n                messenger = new Messenger(service);//将远程服务端中返回的IBinder对象转换为Messenger对象\n            }\n        }, Context.BIND_AUTO_CREATE);      \n    }\n    public void sendMessage(View v) {\n        Message msg = Message.obtain(null, 1);\n        // 设置回调用的Messenger\n        msg.replyTo = reply;//<span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;font-size:12px; line-height: 25.2px;\">如果需要服务端回调客户端，<span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;font-size:12px; line-height: 25.2px;\">则可以在send的Message中设置replyTo，将客户端的Messenger传递给服务端</span></span>\n        try {\n            messenger.send(msg);\n        } catch (RemoteException e) {\n            e.printStackTrace();\n        }\n    }\n    private Handler handler = new Handler() {//回调Messenger处理的Handler\n        @Override\n        public void handleMessage(Message msg) {\n            Log.d(TAG, \"回调成功\");\n        }\n    };\n}"]],[11397,11397],[13260,13260]]],[1552495802479,["KotlinD@DESKTOP-JV8VAO0",[[1,13268,"\n"]],[13266,13266],[13267,13267]]],[1552495805745,["KotlinD@DESKTOP-JV8VAO0",[[-1,11403," "],[1,11404," "],[-1,11409," "],[1,11410," "],[-1,11422," "],[1,11423," "],[-1,11430," "],[1,11431," "],[-1,11439," {\n  \n    "],[1,11449," {\n  \n    "],[-1,11458," "],[1,11459," "],[-1,11465," "],[1,11466," "],[-1,11471," "],[1,11472," "],[-1,11478," TAG = "],[1,11485," TAG = "],[-1,11501,"    "],[1,11505,"    "],[-1,11514," "],[1,11515," "],[-1,11526,"    "],[1,11530,"    "],[-1,11539," "],[1,11540," "],[-1,11547,"    "],[1,11551,"    "],[-1,11561,"    "],[1,11565,"    "],[-1,11574," "],[1,11575," "],[-1,11579," "],[1,11580," "],[-1,11595," "],[1,11596," "],[-1,11615," {\n        "],[1,11626," {\n        "],[-1,11662,"        "],[1,11670,"        "],[-1,11710,"        "],[1,11718,"        "],[-1,11723," = new "],[1,11730," = new "],[-1,11750,"        "],[1,11758,"        "],[-1,11764," "],[1,11765," "],[-1,11771," = new "],[1,11778," = new "],[-1,12013,"        // "],[1,12024,"        // "],[-1,12029,"        "],[1,12037,"        "],[-1,12056," new "],[1,12061," new "],[-1,12080," {\n            "],[1,12095," {\n            "],[-1,12105,"            "],[1,12117,"            "],[-1,12123," "],[1,12124," "],[-1,12128," "],[1,12129," "],[-1,12164," "],[1,12165," "],[-1,12170," {\n            }\n            "],[1,12199," {\n            }\n            "],[-1,12209,"            "],[1,12221,"            "],[-1,12227," "],[1,12228," "],[-1,12232," "],[1,12233," "],[-1,12265," "],[1,12266," "],[-1,12271," "],[1,12272," "],[-1,12279," "],[1,12280," "],[-1,12288," {\n                "],[1,12307," {\n                "],[-1,12340," "],[1,12341," "],[-1,12346," "],[1,12347," "],[-1,12356," "],[1,12357," "],[-1,12368,"                "],[1,12384,"                "],[-1,12393," = new "],[1,12400," = new "],[-1,12455,"            }\n        }, "],[1,12480,"            }\n        }, "],[-1,12506,"      \n    }\n    "],[1,12523,"      \n    }\n    "],[-1,12529," "],[1,12530," "],[-1,12534," "],[1,12535," "],[-1,12551," v) {\n        "],[1,12565," v) {\n        "],[-1,12572," msg = "],[1,12579," msg = "],[-1,12599," "],[1,12600," "],[-1,12604,"        // "],[1,12615,"        // "],[-1,12631,"        "],[1,12639,"        "],[-1,12650," = "],[1,12653," = "],[-1,12940,"        try {\n            "],[1,12966,"        try {\n            "],[-1,12987,"        } "],[1,12997,"        } "],[-1,13002," "],[1,13003," "],[-1,13019," e) {\n            "],[1,13037," e) {\n            "],[-1,13058,"        }\n    }\n    "],[1,13078,"        }\n    }\n    "],[-1,13085," "],[1,13086," "],[-1,13093," "],[1,13094," "],[-1,13101," = new "],[1,13108," = new "],[-1,13117," "],[1,13118," "],[-1,13143,"        "],[1,13151,"        "],[-1,13161,"        "],[1,13169,"        "],[-1,13175," "],[1,13176," "],[-1,13180," "],[1,13181," "],[-1,13202," "],[1,13203," "],[-1,13207," {\n            "],[1,13222," {\n            "],[-1,13232," "],[1,13233," "],[-1,13242,"        }\n    "],[1,13256,"        }\n    "],[1,13267,"### fu"]],[13267,13267],[13273,13273]]],[1552495806424,["KotlinD@DESKTOP-JV8VAO0",[[-1,13271,"fu"]],[13273,13273],[13271,13271]]],[1552495816984,["KotlinD@DESKTOP-JV8VAO0",[[1,11378,"- fu"]],[11378,11378],[11382,11382]]],[1552495817781,["KotlinD@DESKTOP-JV8VAO0",[[-1,11380,"fu"]],[11382,11382],[11380,11380]]],[1552495824387,["KotlinD@DESKTOP-JV8VAO0",[[1,11380,"服务端通过Message"]],[11380,11380],[11392,11392]]],[1552495824439,["KotlinD@DESKTOP-JV8VAO0",[[1,11385," "]],[11392,11392],[11393,11393]]],[1552495825231,["KotlinD@DESKTOP-JV8VAO0",[[1,11393,"热"]],[11393,11393],[11394,11394]]],[1552495825283,["KotlinD@DESKTOP-JV8VAO0",[[1,11393," "]],[11394,11394],[11395,11395]]],[1552495825617,["KotlinD@DESKTOP-JV8VAO0",[[-1,11394,"热"]],[11395,11395],[11394,11394]]],[1552495831811,["KotlinD@DESKTOP-JV8VAO0",[[1,11394,"的replyTo"]],[11394,11394],[11402,11402]]],[1552495831863,["KotlinD@DESKTOP-JV8VAO0",[[1,11395," "]],[11402,11402],[11403,11403]]],[1552495833574,["KotlinD@DESKTOP-JV8VAO0",[[1,11403,"取出"]],[11403,11403],[11405,11405]]],[1552495833626,["KotlinD@DESKTOP-JV8VAO0",[[1,11403," "]],[11405,11405],[11406,11406]]],[1552495845735,["KotlinD@DESKTOP-JV8VAO0",[[1,11406,"客户端传递过来的Messager"]],[11406,11406],[11422,11422]]],[1552495845788,["KotlinD@DESKTOP-JV8VAO0",[[1,11414," "]],[11422,11422],[11423,11423]]],[1552495847270,["KotlinD@DESKTOP-JV8VAO0",[[1,11423,"。"]],[11423,11423],[11424,11424]]],[1552495847880,["KotlinD@DESKTOP-JV8VAO0",[[-1,11423,"。"]],[11424,11424],[11423,11423]]],[1552495853914,["KotlinD@DESKTOP-JV8VAO0",[[1,11423,"，这样就可以通过该"]],[11423,11423],[11432,11432]]],[1552495857076,["KotlinD@DESKTOP-JV8VAO0",[[1,11432,"Messager"]],[11432,11432],[11440,11440]]],[1552495857128,["KotlinD@DESKTOP-JV8VAO0",[[1,11432," "]],[11440,11440],[11441,11441]]],[1552495857875,["KotlinD@DESKTOP-JV8VAO0",[[1,11441,"与"]],[11441,11441],[11442,11442]]],[1552495857928,["KotlinD@DESKTOP-JV8VAO0",[[1,11441," "]],[11442,11442],[11443,11443]]],[1552495862294,["KotlinD@DESKTOP-JV8VAO0",[[1,11443,"客户端通信。"]],[11443,11443],[11449,11449]]],[1552495863560,["KotlinD@DESKTOP-JV8VAO0",[[1,11450,"- \n"]],[11449,11449],[11452,11452]]],[1552495867059,["KotlinD@DESKTOP-JV8VAO0",[[-1,11451," "]],[11452,11452],[11451,11451]]],[1552495882697,["KotlinD@DESKTOP-JV8VAO0",[[1,11451," 服务端通过Messager"]],[11451,11451],[11465,11465]]],[1552495882750,["KotlinD@DESKTOP-JV8VAO0",[[1,11457," "]],[11465,11465],[11466,11466]]],[1552495883789,["KotlinD@DESKTOP-JV8VAO0",[[1,11466,"的"]],[11466,11466],[11467,11467]]],[1552495883843,["KotlinD@DESKTOP-JV8VAO0",[[1,11466," "]],[11467,11467],[11468,11468]]],[1552495886482,["KotlinD@DESKTOP-JV8VAO0",[[1,11468,"getBinder"]],[11468,11468],[11477,11477]]],[1552495886535,["KotlinD@DESKTOP-JV8VAO0",[[1,11468," "]],[11477,11477],[11478,11478]]],[1552495889105,["KotlinD@DESKTOP-JV8VAO0",[[1,11478,"方法"]],[11478,11478],[11480,11480]]],[1552495889158,["KotlinD@DESKTOP-JV8VAO0",[[1,11478," "]],[11480,11480],[11481,11481]]],[1552495891118,["KotlinD@DESKTOP-JV8VAO0",[[1,11481,"将I"]],[11481,11481],[11483,11483]]],[1552495891172,["KotlinD@DESKTOP-JV8VAO0",[[1,11482," "]],[11483,11483],[11484,11484]]],[1552495896440,["KotlinD@DESKTOP-JV8VAO0",[[1,11484,"Binder对象"]],[11484,11484],[11492,11492]]],[1552495896492,["KotlinD@DESKTOP-JV8VAO0",[[1,11490," "]],[11492,11492],[11493,11493]]],[1552495909595,["KotlinD@DESKTOP-JV8VAO0",[[1,11493,"返给客户端，用于共享服务端的Messager"]],[11493,11493],[11515,11515]]],[1552495909647,["KotlinD@DESKTOP-JV8VAO0",[[1,11507," "]],[11515,11515],[11516,11516]]],[1552495911454,["KotlinD@DESKTOP-JV8VAO0",[[1,11516,"。"]],[11516,11516],[11517,11517]]],[1552495912575,["KotlinD@DESKTOP-JV8VAO0",[[1,11518,"- \n"]],[11517,11517],[11520,11520]]],[1552495913993,["KotlinD@DESKTOP-JV8VAO0",[[-1,11518,"- "]],[11520,11520],[11518,11518]]],[1552495923523,["KotlinD@DESKTOP-JV8VAO0",[[1,13411,"服务端代码"]],[13411,13411],[13416,13416]]],[1552495923726,["KotlinD@DESKTOP-JV8VAO0",[[1,13418,"\n"]],[13416,13416],[13417,13417]]],[1552495925716,["KotlinD@DESKTOP-JV8VAO0",[[1,13417,"```"]],[13417,13417],[13420,13420]]],[1552495925768,["KotlinD@DESKTOP-JV8VAO0",[[1,13420,"language\n```\n"]],[13420,13420],[13420,13428]]],[1552495926322,["KotlinD@DESKTOP-JV8VAO0",[[-1,13420,"language"],[1,13428,"\n"]],[13420,13428],[13421,13421]]],[1552495926915,["KotlinD@DESKTOP-JV8VAO0",[[-1,13421,"\n"]],[13421,13421],[13420,13420]]],[1552495927136,["KotlinD@DESKTOP-JV8VAO0",[[-1,13419,"`"]],[13420,13420],[13419,13419]]],[1552495929062,["KotlinD@DESKTOP-JV8VAO0",[[1,13419,"`k"]],[13419,13419],[13421,13421]]],[1552495929998,["KotlinD@DESKTOP-JV8VAO0",[[-1,13418,"``k"]],[13421,13421],[13418,13418]]],[1552495932544,["KotlinD@DESKTOP-JV8VAO0",[[1,13418,"``java"]],[13418,13418],[13424,13424]]],[1552495932937,["KotlinD@DESKTOP-JV8VAO0",[[1,13425,"\n"]],[13424,13424],[13425,13425]]],[1552495938787,["KotlinD@DESKTOP-JV8VAO0",[[1,13425,"public class MessengerTestService extends Service {\n    protected static final String TAG = \"MessengerTestService\";\n    private Handler mHandler = new Handler() {\n        @Override\n        public void handleMessage(Message msg) {\n            switch (msg.what) {\n            case 1:\n                Log.d(TAG, \"收到消息\");\n                 //获取客户端message中的Messenger，用于回调\n                final Messenger callback = msg.replyTo;\n                try {\n                    // 回调\n                    callback.send(Message.obtain(null, 0));\n                } catch (RemoteException e) {\n                    // TODO Auto-generated catch block\n                    e.printStackTrace();\n                }\n                break;\n            }\n        }\n    };\n    @Override\n    public IBinder onBind(Intent intent) {\n        return new Messenger(mHandler).getBinder();//在onBind（Intent intent）方法中返回Messenger对应的binder对象。\n    }\n}"]],[13425,13425],[14335,14335]]],[1552495951667,["KotlinD@DESKTOP-JV8VAO0",[[1,14340,"可以看到该方式与用AIDL方式整体大的框架基本相同，都是在远程服务端的Service中的onBind(Intent intent)中返回Ibinder对象，在客户端的ServiceConnection类的onServiceConnectioned（ComponentName name, IBinder service）中奖Ibinder转换为对应的对象，在AIDL中通过xxx.Stub.asInterface(service);转换为对应的aidl的java类，在Messenger中通过messenger = new Messenger(service);转换为Messenger对象，然后利用这个对象就可相互通信。"]],[14340,14340],[14651,14651]]],[1552495959086,["KotlinD@DESKTOP-JV8VAO0",[[1,13411,"**"],[1,13416,"**"]],[13411,13416],[13411,13420]]],[1552495962583,["KotlinD@DESKTOP-JV8VAO0",[[1,11523,"**"],[1,11528,"**"]],[11523,11528],[11523,11532]]],[1552495965494,["KotlinD@DESKTOP-JV8VAO0",[[1,11157,"**"],[1,11161,"**"]],[11157,11161],[11157,11165]]],[1552495971439,["KotlinD@DESKTOP-JV8VAO0",[[1,11063,"**"],[1,11071,"**"]],[11063,11071],[11063,11075]]],[1552495975725,["KotlinD@DESKTOP-JV8VAO0",[[1,9440,"**"],[1,9443,"**"]],[9440,9443],[9440,9447]]],[1552495985100,["KotlinD@DESKTOP-JV8VAO0",[[1,14673,"\n"]],[14672,14672],[14673,14673]]],[1552495992670,["KotlinD@DESKTOP-JV8VAO0",[[1,14360,"_"],[1,14671,"_"]],[14360,14671],[14360,14673]]],[1552495994279,["KotlinD@DESKTOP-JV8VAO0",[[-1,14360,"_"],[-1,14672,"_"]],[14360,14673],[14360,14671]]],[1552495999987,["KotlinD@DESKTOP-JV8VAO0",[[-1,13451," "],[1,13452," "],[-1,13457," "],[1,13458," "],[-1,13478," "],[1,13479," "],[-1,13486," "],[1,13487," "],[-1,13494," {\n    "],[1,13501," {\n    "],[-1,13510," "],[1,13511," "],[-1,13517," "],[1,13518," "],[-1,13523," "],[1,13524," "],[-1,13530," TAG = "],[1,13537," TAG = "],[-1,13561,"    "],[1,13565,"    "],[-1,13572," "],[1,13573," "],[-1,13580," "],[1,13581," "],[-1,13589," = new "],[1,13596," = new "],[-1,13605," {\n        "],[1,13616," {\n        "],[-1,13626,"        "],[1,13634,"        "],[-1,13640," "],[1,13641," "],[-1,13645," "],[1,13646," "],[-1,13667," "],[1,13668," "],[-1,13672," {\n            "],[1,13687," {\n            "],[-1,13693," "],[1,13694," "],[-1,13704," {\n            "],[1,13719," {\n            "],[-1,13723," 1:\n                "],[1,13743," 1:\n                "],[-1,13753," "],[1,13754," "],[-1,13763,"                 "],[1,13780,"                 "],[-1,13811,"                "],[1,13827,"                "],[-1,13832," "],[1,13833," "],[-1,13842," "],[1,13843," "],[-1,13851," = "],[1,13854," = "],[-1,13867,"                try {\n                    // 回调\n                    "],[1,13935,"                try {\n                    // 回调\n                    "],[-1,13969," "],[1,13970," "],[-1,13975,"                } "],[1,13993,"                } "],[-1,13998," "],[1,13999," "],[-1,14015," e) {\n                    // "],[1,14044," e) {\n                    // "],[-1,14048," "],[1,14049," "],[-1,14063," "],[1,14064," "],[-1,14069," "],[1,14070," "],[-1,14076,"                    "],[1,14096,"                    "],[-1,14117,"                }\n                "],[1,14151,"                }\n                "],[-1,14158,"            }\n        }\n    };\n    "],[1,14193,"            }\n        }\n    };\n    "],[-1,14203,"    "],[1,14207,"    "],[-1,14213," "],[1,14214," "],[-1,14221," "],[1,14222," "],[-1,14235," "],[1,14236," "],[-1,14243," {\n        "],[1,14254," {\n        "],[-1,14260," new "],[1,14265," new "],[-1,14348,"    "],[1,14352,"    "],[1,14360,"- "]],[14360,14360],[14362,14362]]],[1552496252278,["KotlinD@DESKTOP-JV8VAO0",[[1,14675,"# [Java中的Lock与synchronized](https://www.cnblogs.com/huangbw/p/8516024.html)"]],[14675,14675],[14750,14750]]],[1552496254339,["KotlinD@DESKTOP-JV8VAO0",[[-1,14675,"# [Java中的Lock与synchronized](https://www.cnblogs.com/huangbw/p/8516024.html)"]],[14750,14750],[14675,14675]]],[1552496261321,["KotlinD@DESKTOP-JV8VAO0",[[1,14675,"# Javazho"]],[14675,14675],[14684,14684]]],[1552496261983,["KotlinD@DESKTOP-JV8VAO0",[[-1,14681,"zho"]],[14684,14684],[14681,14681]]],[1552496262853,["KotlinD@DESKTOP-JV8VAO0",[[1,14681,"中"]],[14681,14681],[14682,14682]]],[1552496262911,["KotlinD@DESKTOP-JV8VAO0",[[1,14681," "]],[14682,14682],[14683,14683]]],[1552496265349,["KotlinD@DESKTOP-JV8VAO0",[[1,14683,"的Lock"]],[14683,14683],[14688,14688]]],[1552496265407,["KotlinD@DESKTOP-JV8VAO0",[[1,14684," "]],[14688,14688],[14689,14689]]],[1552496267091,["KotlinD@DESKTOP-JV8VAO0",[[1,14689,"与"]],[14689,14689],[14690,14690]]],[1552496267148,["KotlinD@DESKTOP-JV8VAO0",[[1,14689," "]],[14690,14690],[14691,14691]]],[1552496274361,["KotlinD@DESKTOP-JV8VAO0",[[1,14691,"synchronized"]],[14691,14691],[14703,14703]]],[1552496274417,["KotlinD@DESKTOP-JV8VAO0",[[1,14691," "]],[14703,14703],[14704,14704]]],[1552496275746,["KotlinD@DESKTOP-JV8VAO0",[[1,14705,"\n"]],[14704,14704],[14705,14705]]],[1552496276043,["KotlinD@DESKTOP-JV8VAO0",[[1,14706,"\n"]],[14705,14705],[14706,14706]]],[1552496276222,["KotlinD@DESKTOP-JV8VAO0",[[1,14707,"\n"]],[14706,14706],[14707,14707]]]],null,"KotlinD@DESKTOP-JV8VAO0"],["5fb6bf42-a9bb-4bcf-9fbe-e0ae16d19ac4",1552581383499,"# **Java中的集合类有哪些。区别是什么，如何保证安全性。**\n## **Collection、Map:**\n- Collection ：List、Set，区别是 List 有序&可重复，而 Set 无序&不可重复。\n- Map 为key-value的对应关系，key不可以重复\n\n## **List**\n- List 接口是有序可重复的 Collection 接口实现，可以通过索引来访问 List 中的元素；\n- 实现类 LinkedList、ArrayList、Vector；\n\n### **LinkedList** \n- ==不是线程安全的==，可以使用 ==List list = Collections.synchronizedList(new LinkedList());== 保证线程安全\n- 有序、素可重复、允许 null\n- 提供了 get、remove、insert、方法在 LinedList 首部或尾部操作数据，所以可以作为：堆栈（stack）、队列（queue）、双向队列（deque）\n- 内部实现使用的是链表数据结构，元素之间使用指针引用关联\n\n### **ArrayList** \n- ==不是线程安全的==，可以使用 ==List list = Collections.synchronizedList(new LinkedList());== 保证线程安全\n- 有序、元素可重复、允许 null\n- 内部实现使用的是数组，初始容量为 10，扩容增长为原来的 1.5 倍，grow 方法中数据转移使用==Arrays.copyof(elementData,newCapacity)==\n\n### **Vector** \n- ==是线程安全的==，内部的操作方法都是用 synchronized 进行修饰来\n- 如果 Vector 创建的 Iterator 被使用的时候，另一个线程改变 Vector 状态，会抛出 ==ConcurrentModificationException== ，因此必须捕获这个异常。\n- 内部实现使用的是数组，初始默认容量为 10，扩容增长为原来的 2 倍，数据转移使用==Arrays.copyof(elementData,newCapacity)==\n\n### **使用场景：**\n- 当需要快速插入、删除元素，应该使用 LinkedList，如果需要快速随机访问元素，应该使用 ArrayList。\n- 如果是单个线程使用，需要效率更更高。使用 ArrayList\n- 如果是多线程同时操作，应该使用线程安全的类。LinkedList\n- 使用的时候尽量的使用接口类声明，例如：List。目的是考虑到以后业务变成，由ArrayList 替换成了LinkedList，减少代码的修改。\n\n### **总结 ArrayList & LinkedList**\n- ArrayList 是基于动态数组的数据结构，LinkedList是基于链表的数据结构；\n- 随机访问数据，get和set，ArrayList更优于 LinkedList ，因为 LinkedList 是链表结构，需要移动指针，效率更低；\n- 对于新增和删除操作：\n    - 如果只是对单条数据插入或删除，ArrayList 速度更快些。\n    - 如果是批量随机的插入或删除数据，LinkedList 速度更快些。\n    - 原因是 ArrayList 每插入一条数据就要移动插入点及后面的所有数据，效率更低，而 LinkedList 只需要替换插入点的前后指针引用即可完成操作；\n\n### **总结 Vector 和 ArrayList**\n- Vector 是线程同步的，所以是线程安全的，而 ArrayList 是线程异步的，不是线程安全的。通过源码看到，Vector 在操作的方法前使用 synchronized 进行同步操作\n- 默认情况下，在进行添加元素操作的时候，如果元素数目大于当前的集合数组的长度时，Vector 增长率为目前数组的 100% ，而 ArrayList 为 50%，同时 Vector 在创建时支持指定增长容量\n- 如果查找一个指定位置的数据， Vector 和 ArrayList 的使用时间是相同的O(1)。但移动一个指定未知的数据使用的时间是 O(n-1),n为总长度，这个时候就会考虑使用 LinkedList ，因为它使用的时间为O(1),而查询指定位置数据使用的时间为O(i)\n- ArrayList 和 Vector 都是采用数组的方式进行存储的，且数组元素数量大于实际存储的数据，以便增加或插入，可以直接通过索引访问元素。\n- Vector 由于使用了 synchronized 方法所以性能上会比 ArrayList 差一些，LinkedList 使用的是双链表实现的存储，按照序号索引数据可以进行向前或向后遍历，但是插入数据时只需要记录当前元素的前后项即可，所以插入速度更快些。\n\n## **Set**\n- Set 接口是无序不可重复 Collection 接口实现，\n- 实现类有，HashSet、TreeSet\n\n### **HashSet** \n- ==不是线程安全的==，可以使用 ==Set set = Collections.synchronizedSet(new HashSet());== 保证线程安全\n- 无序、不可重复、可以存储 null\n- 通过哈希算法实现防止重复\n- 存放元素使用 key-value 形式\n- 基于 HashMap 实现的\n\n### **TreeSet** \n- ==不是线程安全的==，可以使用 ==Set set = Collections.synchronizedSet(new TreeSet());== 保证线程安全\n- 有序、不可重复、不可存储 null\n- 与 HashSet 相比较，多了排序算法，默认使用元素的自然数序，也可以根据创建 set 时设置的 Comparator 进行排序。\n- 是基于 TreeMap 的 NavigableSet 实现的。底层数据结构是二叉树。\n\n## **Map**\n- key-value 形式存在，key不能重复。\n- 实现类有，HashMap、TreeMap、LinkedHashMap、Hashtable\n\n### **HashMap** \n- ==不是线程安全的==，可以使用 ==Map map = Collections.synchronizedMap(new HashMap());== 保证线程安全\n- 无序、key 不可重复（会覆盖）、可以存储一条 key 为 null 的数据\n- 内部使用 Node 数组+链表+红黑树的数据结构实现的，默认数量为 16 的数组，扩容时，容量*载入因子(默认 0.75)，扩大后的新空间一定是原来的 2 倍，这也导致比较消耗内存，所以 Android 中做了优化，使用 [SparseArray](#sparsearray)\n- 如果 key 是自定义类，需要实现 hashCode() 和 equals() 方法\n\n### **Hashtable** \n- ==是线程安全的==，操作方法使用 ==synchronized== 进行了修饰\n- 继承自 Dictionary\n- ==key 或 value 不能为 null==\n- 无序、key 不可重复（会覆盖）\n- 内部使用 Node 数组+链表+红黑树的数据结构实现的\n- 如果 key 是自定义类，需要实现 hashCode() 和 equals() 方法\n\n### **LinkedHashMap** \n- ==不是线程安全的==，可以使用 ==Map map = Collections.synchronizedMap(new HashMap());== 保证线程安全\n- key 不可重复（会覆盖）、可以存储一条 key 为 null 的数据\n- 内部使用 Node 数组+链表+红黑树的数据结构实现的\n- 如果 key 是自定义类，需要实现 hashCode() 和 equals() 方法\n- 有序的，记录了插入数据的顺序，使用 Iterator 遍历时先得到的记录是先插入的，所以查询速度比 HashMap 慢\n\n### **TreeMap** \n- ==不是线程安全的==\n- key 不可以重复（会覆盖）、不可以存储 key 为 null 的数据\n- 实现了 SortMap 接口，默认是按键升序排列\n- 存入的数据需要实现  ==Comparator== 接口或者 ==Comparable== 接口，会按照排序后的顺序迭代，所以两个要比较的 kye 不能抛出 ClassCaseException。\n- 基于红黑二叉树的NavigableMap的实现\n\n### **ConcurrentHashMap** \n- 使用锁分离思想，只锁住一个node，而锁住的Node之前的操作是基于在 volatile 和 CAS算法 之上无锁并且线程安全的；\n- CAS 是一种算法，基本思想就是不断的去比较当前内存中的变量值与指定的一个变量值是否相等，如果相等则接受，否则拒绝。\n\n### **总结**\n- 当在Map中插入、删除、定位元素，HashMap 速度比较快，因为是无序的，通过 HashCode 定位；\n- 如果需要自然然排序或自定义排序，TreeMap 是最好的选择，因为它实现了 SortMap 默认按照key升序排序；\n- 如果需要输出数据与输入时候相同，LinkedHashMap 是比较好的选择。\n\n# **Android的集合类有哪些？【性能优化】**\n\n## **ArrayMap**\n- 不是线程安全的\n- 基于两个数组，int[] mHashes; Object[] mArray;目的减少内存占用\n- 使用方式跟 HashMap 一样，实现 Map 接口\n- key-value 存储数据\n- 数据量小时可以用，数据量增大性能会下降 50%左右\n\n## **SparseArray**\n- 不是线程安全的\n- 基于两个数组，int[] mKeys; Object[] mValue;目的减少内存占用，默认初始容量为 10，\n- 用来代替 java 中的 HashMap<Integer,E>\n- 节省内存，使用 key-value 存储\n- 存储和读取数据使用的时二分查找法\n- 数据量不大，在千级以内\n- key 必须为 int 类型\n\n# **Java 中的线程池 Executor** \n\n## **为什么使用线程池？**\n- 因为频繁地为每一个任务创建一个线程，缺乏统一管理，降低性能，并且容易出现问题。\n- 线程池可以对多个线程统一管理 ，避免资源竞争出现问题；\n- 线程池对线程进行复用，线程执行完任务后不会立刻销毁，而会等待另外的任务，这样可以减少创建、销毁、以及GC调用。\n- 线程的创建和销毁由线程池维护，一个线程执行完成之后不会立即销毁，而是由后续的任务复用这个线程，从而减少线程的创建和销毁，节约系统的开销\n- 在执行大量异步任务的时候提高性能\n- Java 提供了 ExecutorService 线程池的 API，可以创建多种功能不一样的线程池，使用方便。\n\n\n\n## **如果超出了线程池最大数（maximumPoolSize）会发什么？**\n-  如果线程池中的线程超过了这个数值，则拒绝执行该任务，并抛出异常 ==RejectedExecutionException== \n\n## 常见的线程池有哪些？ 线程池关键参数？\n### **1、ThreadPoolExecutor 基本线程**\n使用这个类创建线程池，构造方法参数如下\n```java\npublic ThreadPoolExecutor(\n              int corePoolSize,    // 核心线程数,允许同时执行任务的最大线程数\n              int maximumPoolSize, // 最大线程数，允许同时处理任务的最大线程数\n              long keepAliveTime,  // 超出核心线程数的空闲线程的最大存活时间\n              TimeUnit unit,       // 空闲线程存活时间单位\n              BlockingQueue<Runnable> workQueue, // 阻塞任务队列，存储待执行的任务\n              ThreadFactory threadFactory, // 线程工厂，用于创建线程，可指定线程命名规则\n              RejectedExecutionHandler handler // 饱和策略(拒绝策略），当线程池阻塞队列已满时对新任务的处理\n        ) {\n        ...\n    }\n```\n- corePoolSize：核心线程的数量，在创建了线程池之后，默认情况下，线程池中并没有任何线程，而是等待有任务到来时才创建线程去执行任务，当线程池中的线程数目达到 corePoolSize 之后，就会把达到的任务放到缓存队列 BlockingQuequ 中，只有当工作队列满了的情况下才会创建超出这个数量的线程。如果某个线程的空闲时间超过了活动时间，那么将标记为可回收，并且只有当线程吃的当前大小超过，corePoolSize 时该线程才会被终止。用户可以调用 ==prestarAllCoreThreads()== 或者 ==prestartCoreThread()==方法预先创建线程，即在没有任务到来之前就创建 corePoolSize 个线程或者一个线程。\n- maximumPoolSize：线程池最大线程数，这个数大于等于 corePoolSize 否则会抛出 ==IllegalArgumentException==，它表示在线程池中最多能创建多少线程，当大于这个值就会拒绝任务，并抛出 ==RejectedExcutionException==\n- keepAliveTime：表示线程没有任务执行时最多保持多久时间会终止。默认情况下，只有当线程池中的线程数大于 corePoolSize 时，keepAliveTime 才会起作用，直到线程池中的线程数不大于 corePoolSize，如果调用了 allowCoreThreadTimeOutA(true)方法，在线程池中的线程数不大于 corePoolSize 时，keepAliceTime 参数也会起作用，直到线程池中的线程数为 0\n- unit：keepAliveTime 的时间单位\n- workQueue：一个阻塞队列，用来存储等待执行的任务，当线程池中的线程数目达到 corePoolSize 后，就会把到达的任务放到任务缓存队列中\n- threadFactory：线程工厂，主要用来创建线程\n- handler：处理拒绝处理任务时的策略，也就是参数 maximumPoolSize 达到后丢弃处理的方法:\n  - ThreadPoolExecutor.AbortPolicy:丢弃任务并抛出 RejectedExecutionException 异常\n  - ThreadPoolExecutor.DiscardPolicy:丢弃任务，不抛异常\n  - ThreadPoolExecutor.DiscardOldestPolicy:丢弃任务队列最前面的任务，然后重新尝试执行任务（重复此过程）\n  - ThreadPoolExecutor.CallerRunsPolicy:由调用线程处理该任务\n  - 也可以实现接口 RejectedExecutionHandler 定制自己的策略\n\n### **2、FixedThreadPool 可重用固定线程数**\n- Executors 中的创建方法\n- 特点：参数为核心线程数，只有核心线程，没有非核心线程，并且阻塞队列没有边界限制\n```java\n public static ExecutorService newFixedThreadPool(int nThreads, ThreadFactory threadFactory) {\n        return new ThreadPoolExecutor(nThreads, nThreads,\n                                      0L, TimeUnit.MILLISECONDS,\n                                      new LinkedBlockingQueue<Runnable>(),\n                                      threadFactory);\n    }\n```\n\n#### **3、CachedThreadPool 按需创建**\n- Executors 中的创建方法\n- 特点：没有核心线程，只有非核心线程，并且每个非核心线程空闲等待的时间为60秒，采用SynchronousQueue队列；\n- 由于没有设置最大线程数限制，如果提交速度大于执行速度，则会一直创建新的线程，需要注意，应该采取措施调整两边的速度，因为太多的线程会影响性能；\n\n```java\npublic static ExecutorService newCachedThreadPool() {\n        return new ThreadPoolExecutor(0, Integer.MAX_VALUE,\n                                      60L, TimeUnit.SECONDS,\n                                      new SynchronousQueue<Runnable>());\n    }\n```\n\n# **能否使用 Applaction 启动一个 Activity ？**\n- 可以在 Application 启动 Activity，但是需要注意的是，如果原来的任务栈已经销毁会抛出错误 ，需要判断添加标志，开启新的任务栈 ==addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)==\n- 因为都是继承实现 ==ContextWrapper==\n\n# **App 间通讯的方式有哪些？有什么区别？**\n- 数据访问: ContentProvicer、文件共享、网络共享、本地数据库、sp\n- 消息传递：AIDL、BroadcastReceiver、Messenger\n## **ContentProvider**\n- 将数据操作进行封装，提供标准 URI 进行操作\n- 存储形式可以为：SQLite、xml、文件或网络等\n- ContentProvider 共享数据\n- ContentResolver 操作数据\n\n## **BroadcastReceiver**\n- 广播接收者 BroadcastReceiver 通过 Binder 机制向 AMS(AcvitityManagerService)进行注册\n- 广播发送者通过 Binder 机制向 AMS 发送广播\n- AMS 查找符合相应条件的（IntentFilter|Permission）的 BroadcastReceiver，将广播发送到 BroadcastReceiver 相应的消息队列中\n- 消息队列拿到此广播，回调 BroadcastReceiver 中的 onReceive(Context，Intent) 方法，Intent 中会携带消息\n\n## **AIDL**\n- 不是线程安全的，支持多线程处理\n### **服务端**\n- 定义 AIDL 文件，生成 java 文件\n```java\ninterface MyAIDL {  \n  int plus(int a, int b);  \n}\n```\n- 定义服务类，AIDL 就是用来在多个 APP 之间访问同一个 Service 的，在这个服务类中定义对于你个的 stub 对象，在该 stub 对象中实现，上述的 AIDL 文件定义的抽象方法，在服务的 onBind(Intent)中返回 stub 对象。AndroidManifest.xml 配置相关属性。\n```java\npublic class MyService extends Service {  \n  ......  \n  @Override  \n  public IBinder onBind(Intent intent) { \n    //在onBind中返回该stub对象   \n    return mBinder;\n  }  \n\n  //在服务类中定义对应的stub对象，实现aidl中定义的抽象方法  \n  DemoAIDL.Stub mBinder = new Stub() {\n    @Override  \n    public int plus(int a, int b) throws RemoteException {  \n      return a + b;  \n    }  \n  };  \n}\n```\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.example.servicetest\"\n    android:versionCode=\"1\"\n    android:versionName=\"1.0\" >\n    ......\n\n    <service\n        android:name=\"com.example.servicetest.MyService\"\n        android:process=\":remote\" >\n        <intent-filter>\n            //注意action的android:name属性，该属性在客户端bindService中将会用到\n            <action android:name=\"com.example.servicetest.MyAIDLService\"/>\n        </intent-filter>\n    </service>\n```\n\n### **客户端**\n- 把服务端的 aidl 文件拷贝到相应的目录中，IDE 会生成 java 文件，这个是和服务端相同的，这样服务端和客户端通信协议上保证了一致\n- 在客户端的 Activity 与 Service 通信，在客户端 Activity 中定义 ServiceConnection 类，复写 onServiceConnected(ComponentName name,IBinder service)方法，通过 XX.Stub.asInterface(service);获取定义的 AIDL 文件生成的 java 类 ，使用 bindeService(intent,conn,Context.BIND_AUTO_CREATE);绑定远程服务，注意此时的 intent 需要指定为在服务端创建的 service 的 name 属性【==com.example.servicetest.MyAIDLService==】。\n```java\npublic class MainActivity extends Activity implements OnClickListener {\n\t...\n\tprivate MyAIDL myAIDL;\n\n\tprivate ServiceConnection connection = new ServiceConnection() {\n\n\t\t@Override\n\t\tpublic void onServiceDisconnected(ComponentName name) {\n\t\t}\n\n\t\t@Override\n\t\tpublic void onServiceConnected(ComponentName name, IBinder service) {\n\t\t    //在onServiceConnected中将IBinder转换为aidl对应的java类\n\t\t\tmyAIDL = MyAIDL.Stub.asInterface(service);\n\t\t\ttry {\n\t\t\t\tint result = myAIDL.plus(3, 5);\n\t\t\t\tLog.d(\"TAG\", \"result is \" + result);\n\t\t\t} catch (RemoteException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t};\n\t\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        \n        Button bindService = (Button) findViewById(R.id.bind_service);\n        \n        bindService.setOnClickListener(new OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            //intent指定为我们在服务端创建的service的intent-filter中action的android:name属性。\n            Intent intent = new Intent(\"com.example.servicetest.MyAIDLService\");\n            bindService(intent, connection, BIND_AUTO_CREATE);\n          }\n      });\n    }\n}\n```\n\n## **Messager**\n- 实现 IPC 通信，底层使用的也是 AIDL 方式\n- 不同点，Messager 利用了 Handler 形式处理，因此是线程安全的\n- 不支持多线程处理\n\n### **使用步骤**\n- 客户端绑定服务点，在 ServiceConnection 类的 onServiceConnection 方法中将远程服务穿过来的 binder 对象转换为 Messager 对象，调用 Messager 的 send 函数，将 Message 发送至服务点的 Handler，同时，需要服务端回调客户端（向 Handler 发消息），则可以在 send 的 Message 中设置 replyTo，服务端就可以向客户端发消息。\n- 服务端通过 Message 的 replyTo 取出客户端传递过来的 Messager，这样就可以通过该 Messager 与客户端通信。\n- 服务端通过 Messager 的 getBinder 方法将 IBinder 对象返给客户端，用于共享服务端的 Messager。\n\n### **客户端代码**\n```java\npublic class MainActivity extends Activity {\n  \n    protected static final String TAG = \"MainActivity\";\n    Messenger messenger;\n    Messenger reply;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        reply = new Messenger(handler);\n        Intent intent = new Intent(\"<span style=\"line-height: 25.2px; font-family: Verdana, Arial, Helvetica, sans-serif;\">test.messenger.MessengerTestService</span><span style=\"line-height: 25.2px; font-family: Verdana, Arial, Helvetica, sans-serif;\">\");</span>\n        // 绑定服务\n        bindService(intent, new ServiceConnection() {\n            @Override\n            public void onServiceDisconnected(ComponentName name) {\n            }\n            @Override\n            public void onServiceConnected(ComponentName name, IBinder service) {\n                Toast.makeText(MainActivity.this, \"bind success\", 0).show();\n                messenger = new Messenger(service);//将远程服务端中返回的IBinder对象转换为Messenger对象\n            }\n        }, Context.BIND_AUTO_CREATE);      \n    }\n    public void sendMessage(View v) {\n        Message msg = Message.obtain(null, 1);\n        // 设置回调用的Messenger\n        msg.replyTo = reply;//<span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;font-size:12px; line-height: 25.2px;\">如果需要服务端回调客户端，<span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;font-size:12px; line-height: 25.2px;\">则可以在send的Message中设置replyTo，将客户端的Messenger传递给服务端</span></span>\n        try {\n            messenger.send(msg);\n        } catch (RemoteException e) {\n            e.printStackTrace();\n        }\n    }\n    private Handler handler = new Handler() {//回调Messenger处理的Handler\n        @Override\n        public void handleMessage(Message msg) {\n            Log.d(TAG, \"回调成功\");\n        }\n    };\n}\n\n```\n\n### **服务端代码**\n```java\npublic class MessengerTestService extends Service {\n    protected static final String TAG = \"MessengerTestService\";\n    private Handler mHandler = new Handler() {\n        @Override\n        public void handleMessage(Message msg) {\n            switch (msg.what) {\n            case 1:\n                Log.d(TAG, \"收到消息\");\n                 //获取客户端message中的Messenger，用于回调\n                final Messenger callback = msg.replyTo;\n                try {\n                    // 回调\n                    callback.send(Message.obtain(null, 0));\n                } catch (RemoteException e) {\n                    // TODO Auto-generated catch block\n                    e.printStackTrace();\n                }\n                break;\n            }\n        }\n    };\n    @Override\n    public IBinder onBind(Intent intent) {\n        return new Messenger(mHandler).getBinder();//在onBind（Intent intent）方法中返回Messenger对应的binder对象。\n    }\n}\n```\n- 可以看到该方式与用AIDL方式整体大的框架基本相同，都是在远程服务端的Service中的onBind(Intent intent)中返回Ibinder对象，在客户端的ServiceConnection类的onServiceConnectioned（ComponentName name, IBinder service）中奖Ibinder转换为对应的对象，在AIDL中通过xxx.Stub.asInterface(service);转换为对应的aidl的java类，在Messenger中通过messenger = new Messenger(service);转换为Messenger对象，然后利用这个对象就可相互通信。\n\n# Java 中的 Lock 与 synchronized\n\n\n\n安卓广播机制有哪些，区别是什么。\n\n做过哪些安卓性能优化？\n\n如何检测应用卡顿，如何优化？\n\n造成安卓oom的原因有哪些？如何处理。\n\nRxJava的实现机制，如何处理背压。\n\nRetureFate实现原理\n\n对现在存在的Glide还有哪些优化方案？\n\n安卓中的内存泄漏如何解决，为什么会造成内存泄漏？\n\n如何检测内存泄漏？\n\n点击桌面应用图标之后发什么什么，回调了哪些方法。\n\njava中的lock相关。\n\nActivity  与 Fragment 相关生命周期对照\n\n能不能试用Applaction启动一个Activity为什么不能？\n\nAMS，PMS，WMS\n\n文件存储，分别使用的场景，SP是线程安全的么？是进程安全的么？如何保证安全性",[[1552581378516,["KotlinD@DESKTOP-JV8VAO0",[[1,14708,"\n"]],[14706,14706],[14707,14707]]],[1552581379282,["KotlinD@DESKTOP-JV8VAO0",[[1,14707,"##"]],[14707,14707],[14709,14709]]],[1552581380384,["KotlinD@DESKTOP-JV8VAO0",[[-1,14708,"#"]],[14709,14709],[14708,14708]]],[1552581381089,["KotlinD@DESKTOP-JV8VAO0",[[1,14708," 点击桌面应用图标之后发什么什么，回调了哪些方法。"]],[14708,14708],[14733,14733]]],[1552581391928,["KotlinD@DESKTOP-JV8VAO0",[[-1,14709,"点击桌面应用图标之后发什么什么，回调了哪些方法。"]],[14709,14709],[14709,14709]]],[1552581395993,["KotlinD@DESKTOP-JV8VAO0",[[1,14709,"App啓動"]],[14709,14709],[14714,14714]]],[1552581396049,["KotlinD@DESKTOP-JV8VAO0",[[1,14712," "]],[14714,14714],[14715,14715]]],[1552581396668,["KotlinD@DESKTOP-JV8VAO0",[[-1,14713,"啓動"]],[14715,14715],[14713,14713]]],[1552581399868,["KotlinD@DESKTOP-JV8VAO0",[[1,14713,"启动流程"]],[14713,14713],[14717,14717]]],[1552581400055,["KotlinD@DESKTOP-JV8VAO0",[[1,14719,"\n"]],[14717,14717],[14718,14718]]],[1552581402985,["KotlinD@DESKTOP-JV8VAO0",[[1,14718,"- "]],[14718,14718],[14720,14720]]],[1552581409609,["KotlinD@DESKTOP-JV8VAO0",[[1,14720,"duab="]],[14720,14720],[14725,14725]]],[1552581410785,["KotlinD@DESKTOP-JV8VAO0",[[-1,14719," duab="]],[14725,14725],[14719,14719]]],[1552581412691,["KotlinD@DESKTOP-JV8VAO0",[[1,14719," 读啊保护"]],[14719,14719],[14724,14724]]],[1552581413542,["KotlinD@DESKTOP-JV8VAO0",[[-1,14719," 读啊保护"]],[14724,14724],[14719,14719]]],[1552581415237,["KotlinD@DESKTOP-JV8VAO0",[[1,14719,"读啊保护="]],[14719,14719],[14724,14724]]],[1552581416124,["KotlinD@DESKTOP-JV8VAO0",[[-1,14718,"-读啊保护="]],[14724,14724],[14718,14718]]],[1552581422939,["KotlinD@DESKTOP-JV8VAO0",[[1,14718,"- 点击卓暮年"]],[14718,14718],[14725,14725]]],[1552581424319,["KotlinD@DESKTOP-JV8VAO0",[[-1,14721,"击卓暮年"]],[14725,14725],[14721,14721]]],[1552581425045,["KotlinD@DESKTOP-JV8VAO0",[[1,14721,"中"]],[14721,14721],[14722,14722]]],[1552581425689,["KotlinD@DESKTOP-JV8VAO0",[[-1,14720,"点中"]],[14722,14722],[14720,14720]]],[1552581438236,["KotlinD@DESKTOP-JV8VAO0",[[1,14720,"点击桌面应用图标，Lancher"]],[14720,14720],[14736,14736]]],[1552581441367,["KotlinD@DESKTOP-JV8VAO0",[[-1,14729,"Lancher"]],[14736,14736],[14729,14729]]],[1552581446255,["KotlinD@DESKTOP-JV8VAO0",[[1,14729,"Launcher进程"]],[14729,14729],[14739,14739]]],[1552581446313,["KotlinD@DESKTOP-JV8VAO0",[[1,14737," "]],[14739,14739],[14740,14740]]],[1552581452686,["KotlinD@DESKTOP-JV8VAO0",[[1,14740,"将启动Activity"]],[14740,14740],[14751,14751]]],[1552581452740,["KotlinD@DESKTOP-JV8VAO0",[[1,14743," "]],[14751,14751],[14752,14752]]],[1552581456623,["KotlinD@DESKTOP-JV8VAO0",[[1,14752,"的"]],[14752,14752],[14753,14753]]],[1552581456677,["KotlinD@DESKTOP-JV8VAO0",[[1,14752," "]],[14753,14753],[14754,14754]]],[1552581459491,["KotlinD@DESKTOP-JV8VAO0",[[1,14754,"请求一"]],[14754,14754],[14757,14757]]],[1552581460233,["KotlinD@DESKTOP-JV8VAO0",[[-1,14756,"一"]],[14757,14757],[14756,14756]]],[1552581473472,["KotlinD@DESKTOP-JV8VAO0",[[1,14756,"以Binder"]],[14756,14756],[14763,14763]]],[1552581473529,["KotlinD@DESKTOP-JV8VAO0",[[1,14757," "]],[14763,14763],[14764,14764]]],[1552581473926,["KotlinD@DESKTOP-JV8VAO0",[[1,14764,"的"]],[14764,14764],[14765,14765]]],[1552581473981,["KotlinD@DESKTOP-JV8VAO0",[[1,14764," "]],[14765,14765],[14766,14766]]],[1552581479486,["KotlinD@DESKTOP-JV8VAO0",[[1,14766,"方式发送给AMS"]],[14766,14766],[14774,14774]]],[1552581479538,["KotlinD@DESKTOP-JV8VAO0",[[1,14771," "]],[14774,14774],[14775,14775]]],[1552581480597,["KotlinD@DESKTOP-JV8VAO0",[[1,14776,"- \n"]],[14775,14775],[14778,14778]]],[1552581485752,["KotlinD@DESKTOP-JV8VAO0",[[1,14778,"AMS就会ie收到"]],[14778,14778],[14787,14787]]],[1552581485806,["KotlinD@DESKTOP-JV8VAO0",[[1,14781," "]],[14787,14787],[14788,14788]]],[1552581486850,["KotlinD@DESKTOP-JV8VAO0",[[-1,14782,"就会ie收到"]],[14788,14788],[14782,14782]]],[1552581505644,["KotlinD@DESKTOP-JV8VAO0",[[1,14782,"接收到启动请求后，交付Activity"]],[14782,14782],[14801,14801]]],[1552581505696,["KotlinD@DESKTOP-JV8VAO0",[[1,14793," "]],[14801,14801],[14802,14802]]],[1552581510664,["KotlinD@DESKTOP-JV8VAO0",[[1,14802,"Starterchu"]],[14802,14802],[14812,14812]]],[1552581511519,["KotlinD@DESKTOP-JV8VAO0",[[-1,14809,"chu"]],[14812,14812],[14809,14809]]],[1552581513029,["KotlinD@DESKTOP-JV8VAO0",[[1,14809,"处理"]],[14809,14809],[14811,14811]]],[1552581513083,["KotlinD@DESKTOP-JV8VAO0",[[1,14809," "]],[14811,14811],[14812,14812]]],[1552581515999,["KotlinD@DESKTOP-JV8VAO0",[[1,14812,"Intent"]],[14812,14812],[14818,14818]]],[1552581516052,["KotlinD@DESKTOP-JV8VAO0",[[1,14812," "]],[14818,14818],[14819,14819]]],[1552581516989,["KotlinD@DESKTOP-JV8VAO0",[[1,14819,"和"]],[14819,14819],[14820,14820]]],[1552581517042,["KotlinD@DESKTOP-JV8VAO0",[[1,14819," "]],[14820,14820],[14821,14821]]],[1552581519474,["KotlinD@DESKTOP-JV8VAO0",[[1,14821,"Flag"]],[14821,14821],[14825,14825]]],[1552581519526,["KotlinD@DESKTOP-JV8VAO0",[[1,14821," "]],[14825,14825],[14826,14826]]],[1552581520926,["KotlinD@DESKTOP-JV8VAO0",[[1,14826,"等"]],[14826,14826],[14827,14827]]],[1552581520980,["KotlinD@DESKTOP-JV8VAO0",[[1,14826," "]],[14827,14827],[14828,14828]]],[1552581521847,["KotlinD@DESKTOP-JV8VAO0",[[1,14828,"信息，"]],[14828,14828],[14831,14831]]],[1552581547925,["KotlinD@DESKTOP-JV8VAO0",[[1,14831,"然后再交给ActivityStackSupervisior"]],[14831,14831],[14860,14860]]],[1552581547979,["KotlinD@DESKTOP-JV8VAO0",[[1,14836," "]],[14860,14860],[14861,14861]]],[1552581568033,["KotlinD@DESKTOP-JV8VAO0",[[1,14861,"、"]],[14861,14861],[14862,14862]]],[1552581568782,["KotlinD@DESKTOP-JV8VAO0",[[-1,14861,"、"]],[14862,14862],[14861,14861]]],[1552581569080,["KotlinD@DESKTOP-JV8VAO0",[[1,14861,"/"]],[14861,14861],[14862,14862]]],[1552581570346,["KotlinD@DESKTOP-JV8VAO0",[[-1,14861,"/"]],[14862,14862],[14861,14861]]],[1552581570704,["KotlinD@DESKTOP-JV8VAO0",[[1,14861,"|"]],[14861,14861],[14862,14862]]],[1552581571526,["KotlinD@DESKTOP-JV8VAO0",[[1,14861," "]],[14861,14861],[14862,14862]]],[1552581572027,["KotlinD@DESKTOP-JV8VAO0",[[1,14863," "]],[14863,14863],[14864,14864]]],[1552581637816,["KotlinD@DESKTOP-JV8VAO0",[[1,14864,"ActivityStack chu"]],[14864,14864],[14881,14881]]],[1552581638615,["KotlinD@DESKTOP-JV8VAO0",[[-1,14877," chu"]],[14881,14881],[14877,14877]]],[1552581641495,["KotlinD@DESKTOP-JV8VAO0",[[1,14877," 处理"]],[14877,14877],[14880,14880]]],[1552581648245,["KotlinD@DESKTOP-JV8VAO0",[[1,14880,"Activity"]],[14880,14880],[14888,14888]]],[1552581648298,["KotlinD@DESKTOP-JV8VAO0",[[1,14880," "]],[14888,14888],[14889,14889]]],[1552581650967,["KotlinD@DESKTOP-JV8VAO0",[[1,14889," 就kin行"]],[14889,14889],[14895,14895]]],[1552581651919,["KotlinD@DESKTOP-JV8VAO0",[[-1,14890,"就kin行"]],[14895,14895],[14890,14890]]],[1552581667739,["KotlinD@DESKTOP-JV8VAO0",[[1,14890,"进行栈相关的流程。同时以Socker"]],[14890,14890],[14908,14908]]],[1552581667793,["KotlinD@DESKTOP-JV8VAO0",[[1,14902," "]],[14908,14908],[14909,14909]]],[1552581668115,["KotlinD@DESKTOP-JV8VAO0",[[-1,14908,"r"]],[14909,14909],[14908,14908]]],[1552581672694,["KotlinD@DESKTOP-JV8VAO0",[[1,14908,"t方式"]],[14908,14908],[14911,14911]]],[1552581672748,["KotlinD@DESKTOP-JV8VAO0",[[1,14909," "]],[14911,14911],[14912,14912]]],[1552581679129,["KotlinD@DESKTOP-JV8VAO0",[[1,14912,"请求Zy"]],[14912,14912],[14916,14916]]],[1552581679183,["KotlinD@DESKTOP-JV8VAO0",[[1,14914," "]],[14916,14916],[14917,14917]]],[1552581688917,["KotlinD@DESKTOP-JV8VAO0",[[1,14917,"gote进程"]],[14917,14917],[14923,14923]]],[1552581688970,["KotlinD@DESKTOP-JV8VAO0",[[1,14921," "]],[14923,14923],[14924,14924]]],[1552581695349,["KotlinD@DESKTOP-JV8VAO0",[[1,14924,"，fork"]],[14924,14924],[14929,14929]]],[1552581708463,["KotlinD@DESKTOP-JV8VAO0",[[1,14929,"新"]],[14929,14929],[14930,14930]]],[1552581708517,["KotlinD@DESKTOP-JV8VAO0",[[1,14929," "]],[14930,14930],[14931,14931]]],[1552581711379,["KotlinD@DESKTOP-JV8VAO0",[[1,14931,"的进程；"]],[14931,14931],[14935,14935]]],[1552581711963,["KotlinD@DESKTOP-JV8VAO0",[[-1,14934,"；"]],[14935,14935],[14934,14934]]],[1552581712180,["KotlinD@DESKTOP-JV8VAO0",[[1,14935,"- \n"]],[14934,14934],[14937,14937]]],[1552581725738,["KotlinD@DESKTOP-JV8VAO0",[[1,14937,"Zygote接收到"]],[14937,14937],[14946,14946]]],[1552581725794,["KotlinD@DESKTOP-JV8VAO0",[[1,14943," "]],[14946,14946],[14947,14947]]],[1552581734932,["KotlinD@DESKTOP-JV8VAO0",[[1,14947,"新进程创建请求今后"]],[14947,14947],[14956,14956]]],[1552581735386,["KotlinD@DESKTOP-JV8VAO0",[[-1,14954,"今后"]],[14956,14956],[14954,14954]]],[1552581736535,["KotlinD@DESKTOP-JV8VAO0",[[1,14954,"后"]],[14954,14954],[14955,14955]]],[1552581768222,["KotlinD@DESKTOP-JV8VAO0",[[1,14955,"fork"]],[14955,14955],[14959,14959]]],[1552581768278,["KotlinD@DESKTOP-JV8VAO0",[[1,14955," "]],[14959,14959],[14960,14960]]],[1552581784490,["KotlinD@DESKTOP-JV8VAO0",[[1,14960,"出"]],[14960,14960],[14961,14961]]],[1552581784554,["KotlinD@DESKTOP-JV8VAO0",[[1,14960," "]],[14961,14961],[14962,14962]]],[1552581786171,["KotlinD@DESKTOP-JV8VAO0",[[1,14962,"新锦城"]],[14962,14962],[14965,14965]]],[1552581787307,["KotlinD@DESKTOP-JV8VAO0",[[-1,14962,"新锦城"]],[14965,14965],[14962,14962]]],[1552581789738,["KotlinD@DESKTOP-JV8VAO0",[[1,14962,"新进程"]],[14962,14962],[14965,14965]]],[1552581799591,["KotlinD@DESKTOP-JV8VAO0",[[1,14966,"- \n"]],[14965,14965],[14968,14968]]],[1552581804576,["KotlinD@DESKTOP-JV8VAO0",[[1,14968,"新进"]],[14968,14968],[14970,14970]]],[1552581804813,["KotlinD@DESKTOP-JV8VAO0",[[-1,14969,"进"]],[14970,14970],[14969,14969]]],[1552581816492,["KotlinD@DESKTOP-JV8VAO0",[[1,14969,"启动的应用程序，改进成就是用来承载用"]],[14969,14969],[14987,14987]]],[1552581816721,["KotlinD@DESKTOP-JV8VAO0",[[-1,14986,"用"]],[14987,14987],[14986,14986]]],[1552581820356,["KotlinD@DESKTOP-JV8VAO0",[[1,14986,"应用成"]],[14986,14986],[14989,14989]]],[1552581820656,["KotlinD@DESKTOP-JV8VAO0",[[-1,14988,"成"]],[14989,14989],[14988,14988]]],[1552581842174,["KotlinD@DESKTOP-JV8VAO0",[[1,14988,"运行的进程，她也是应用的主线程，处理组件声明"]],[14988,14988],[15010,15010]]],[1552581842751,["KotlinD@DESKTOP-JV8VAO0",[[-1,15008,"声明"]],[15010,15010],[15008,15008]]],[1552581861215,["KotlinD@DESKTOP-JV8VAO0",[[1,15008,"生命周期，界面绘制等"]],[15008,15008],[15018,15018]]],[1552581863524,["KotlinD@DESKTOP-JV8VAO0",[[1,15018,"相关信息"]],[15018,15018],[15022,15022]]],[1552581864550,["KotlinD@DESKTOP-JV8VAO0",[[-1,15020,"信息"]],[15022,15022],[15020,15020]]],[1552581866135,["KotlinD@DESKTOP-JV8VAO0",[[1,15020,"事情。"]],[15020,15020],[15023,15023]]],[1552581866661,["KotlinD@DESKTOP-JV8VAO0",[[1,15024,"- \n"]],[15023,15023],[15026,15026]]],[1552581867653,["KotlinD@DESKTOP-JV8VAO0",[[-1,15024,"- "]],[15026,15026],[15024,15024]]],[1552581867904,["KotlinD@DESKTOP-JV8VAO0",[[-1,15025,"\n"]],[15024,15024],[15023,15023]]],[1552581868313,["KotlinD@DESKTOP-JV8VAO0",[[-1,15022,"。"]],[15023,15023],[15022,15022]]],[1552581868538,["KotlinD@DESKTOP-JV8VAO0",[[1,15023,"- \n"]],[15022,15022],[15025,15025]]],[1552581870781,["KotlinD@DESKTOP-JV8VAO0",[[-1,15023,"- "]],[15025,15025],[15023,15023]]],[1552581871492,["KotlinD@DESKTOP-JV8VAO0",[[-1,15024,"\n"]],[15023,15023],[15022,15022]]],[1552581899755,["KotlinD@DESKTOP-JV8VAO0",[[-1,14967," 新启动的应用程序，改进成就是用来承载应用运行的进程，她也是应用的主线程，处理组件生命周期，界面绘制等相关事情"]],[14967,15022],[14967,14967]]],[1552581905451,["KotlinD@DESKTOP-JV8VAO0",[[1,14967," 在新近成立"]],[14967,14967],[14973,14973]]],[1552581906050,["KotlinD@DESKTOP-JV8VAO0",[[-1,14970,"近成立"]],[14973,14973],[14970,14970]]],[1552581915630,["KotlinD@DESKTOP-JV8VAO0",[[1,14970,"进程里创建Activity"]],[14970,14970],[14983,14983]]],[1552581915688,["KotlinD@DESKTOP-JV8VAO0",[[1,14975," "]],[14983,14983],[14984,14984]]],[1552581919689,["KotlinD@DESKTOP-JV8VAO0",[[1,14984,"Thread对象"]],[14984,14984],[14992,14992]]],[1552581919744,["KotlinD@DESKTOP-JV8VAO0",[[1,14990," "]],[14992,14992],[14993,14993]]],[1552581923226,["KotlinD@DESKTOP-JV8VAO0",[[1,14993,"，新创建的额"]],[14993,14993],[14999,14999]]],[1552581924144,["KotlinD@DESKTOP-JV8VAO0",[[-1,14998,"额"]],[14999,14999],[14998,14998]]],[1552581931672,["KotlinD@DESKTOP-JV8VAO0",[[1,14998,"进程就是"]],[14998,14998],[15002,15002]]],[1552581944275,["KotlinD@DESKTOP-JV8VAO0",[[1,15002,"应用的主线程，在主线程里开启L"]],[15002,15002],[15017,15017]]],[1552581944329,["KotlinD@DESKTOP-JV8VAO0",[[1,15016," "]],[15017,15017],[15018,15018]]],[1552581945688,["KotlinD@DESKTOP-JV8VAO0",[[1,15018,"ooper"]],[15018,15018],[15023,15023]]],[1552581946061,["KotlinD@DESKTOP-JV8VAO0",[[1,15024,"- \n"]],[15023,15023],[15026,15026]]],[1552581948105,["KotlinD@DESKTOP-JV8VAO0",[[-1,15024,"- "]],[15026,15026],[15024,15024]]],[1552581948319,["KotlinD@DESKTOP-JV8VAO0",[[-1,15025,"\n"]],[15024,15024],[15023,15023]]],[1552581950520,["KotlinD@DESKTOP-JV8VAO0",[[1,15023,"xiao"]],[15023,15023],[15027,15027]]],[1552581951792,["KotlinD@DESKTOP-JV8VAO0",[[-1,15023,"xiao"]],[15027,15027],[15023,15023]]],[1552581953740,["KotlinD@DESKTOP-JV8VAO0",[[1,15023,"消息"]],[15023,15023],[15025,15025]]],[1552581953796,["KotlinD@DESKTOP-JV8VAO0",[[1,15023," "]],[15025,15025],[15026,15026]]],[1552581962232,["KotlinD@DESKTOP-JV8VAO0",[[1,15026,"循环，开始处理创建Activity"]],[15026,15026],[15043,15043]]],[1552581962289,["KotlinD@DESKTOP-JV8VAO0",[[1,15035," "]],[15043,15043],[15044,15044]]],[1552581963343,["KotlinD@DESKTOP-JV8VAO0",[[1,15045,"- \n"]],[15044,15044],[15047,15047]]],[1552581970647,["KotlinD@DESKTOP-JV8VAO0",[[1,15047,"ActivityThread利用"]],[15047,15047],[15063,15063]]],[1552581970703,["KotlinD@DESKTOP-JV8VAO0",[[1,15061," "]],[15063,15063],[15064,15064]]],[1552581973664,["KotlinD@DESKTOP-JV8VAO0",[[1,15064,"CLassLoader"]],[15064,15064],[15075,15075]]],[1552581973720,["KotlinD@DESKTOP-JV8VAO0",[[1,15064," "]],[15075,15075],[15076,15076]]],[1552581974755,["KotlinD@DESKTOP-JV8VAO0",[[1,15076,"去"]],[15076,15076],[15077,15077]]],[1552581974811,["KotlinD@DESKTOP-JV8VAO0",[[1,15076," "]],[15077,15077],[15078,15078]]],[1552581978279,["KotlinD@DESKTOP-JV8VAO0",[[1,15078,"加载Activity"]],[15078,15078],[15088,15088]]],[1552581978336,["KotlinD@DESKTOP-JV8VAO0",[[1,15080," "]],[15088,15088],[15089,15089]]],[1552581986342,["KotlinD@DESKTOP-JV8VAO0",[[1,15089,"、创建Activity"]],[15089,15089],[15100,15100]]],[1552581986398,["KotlinD@DESKTOP-JV8VAO0",[[1,15092," "]],[15100,15100],[15101,15101]]],[1552581987585,["KotlinD@DESKTOP-JV8VAO0",[[1,15101,"实例"]],[15101,15101],[15103,15103]]],[1552581987641,["KotlinD@DESKTOP-JV8VAO0",[[1,15101," "]],[15103,15103],[15104,15104]]],[1552581992467,["KotlinD@DESKTOP-JV8VAO0",[[1,15104,"，并毁掉"]],[15104,15104],[15108,15108]]],[1552581992732,["KotlinD@DESKTOP-JV8VAO0",[[-1,15107,"掉"]],[15108,15108],[15107,15107]]],[1552581997676,["KotlinD@DESKTOP-JV8VAO0",[[1,15106,"回调Activity"]],[15106,15106],[15116,15116]]],[1552581997734,["KotlinD@DESKTOP-JV8VAO0",[[1,15108," "]],[15116,15116],[15117,15117]]],[1552581998490,["KotlinD@DESKTOP-JV8VAO0",[[1,15117,"的"]],[15117,15117],[15118,15118]]],[1552581998546,["KotlinD@DESKTOP-JV8VAO0",[[1,15117," "]],[15118,15118],[15119,15119]]],[1552581999437,["KotlinD@DESKTOP-JV8VAO0",[[1,15119,"o"]],[15119,15119],[15120,15120]]],[1552581999493,["KotlinD@DESKTOP-JV8VAO0",[[1,15119," "]],[15120,15120],[15121,15121]]],[1552582001434,["KotlinD@DESKTOP-JV8VAO0",[[1,15121,"nCread"]],[15121,15121],[15127,15127]]],[1552582002376,["KotlinD@DESKTOP-JV8VAO0",[[-1,15126,"d"]],[15127,15127],[15126,15126]]],[1552582002835,["KotlinD@DESKTOP-JV8VAO0",[[1,15126,"tr"]],[15126,15126],[15128,15128]]],[1552582004793,["KotlinD@DESKTOP-JV8VAO0",[[-1,15120,"onCreatr"]],[15128,15128],[15120,15120]]],[1552582015423,["KotlinD@DESKTOP-JV8VAO0",[[1,15120,"onCreate()fang"]],[15120,15120],[15134,15134]]],[1552582016586,["KotlinD@DESKTOP-JV8VAO0",[[-1,15130,"fang"]],[15134,15134],[15130,15130]]],[1552582033296,["KotlinD@DESKTOP-JV8VAO0",[[1,15130,"方法，这样便完成了Activity"]],[15130,15130],[15147,15147]]],[1552582033353,["KotlinD@DESKTOP-JV8VAO0",[[1,15139," "]],[15147,15147],[15148,15148]]],[1552582034228,["KotlinD@DESKTOP-JV8VAO0",[[1,15148,"的"]],[15148,15148],[15149,15149]]],[1552582034285,["KotlinD@DESKTOP-JV8VAO0",[[1,15148," "]],[15149,15149],[15150,15150]]],[1552582035699,["KotlinD@DESKTOP-JV8VAO0",[[1,15150,"启动。"]],[15150,15150],[15153,15153]]],[1552582036357,["KotlinD@DESKTOP-JV8VAO0",[[-1,15152,"。"]],[15153,15153],[15152,15152]]],[1552582053358,[null,[[-1,15152,"毁"]],[15152,15152],[15152,15152]]],[1552582053358,[null,[[1,15152,"毁"]],[15152,15152],[15152,15152]]],[1552582037124,["KotlinD@DESKTOP-JV8VAO0",[[1,15153,"- \n"]],[15152,15152],[15155,15155]]],[1552582055294,[null,[[-1,15152,"毁"],[1,15153,"\n"],[-1,15155,"\n"]],[15152,15152],[15155,15155]]],[1552582055294,[null,[[1,15152,"毁"],[-1,15152,"\n"],[1,15155,"\n"]],[15155,15155],[15152,15152]]],[1552582054784,["KotlinD@DESKTOP-JV8VAO0",[[-1,15153,"- \n"]],[15153,15156],[15153,15153]]],[1552582087528,[null,[[-1,15152,"毁"]],[15152,15152],[15152,15152]]],[1552582087528,[null,[[1,15152,"毁"]],[15152,15152],[15152,15152]]],[1552582086261,["KotlinD@DESKTOP-JV8VAO0",[[1,15154,"\n"]],[15153,15153],[15154,15154]]],[1552582086890,["KotlinD@DESKTOP-JV8VAO0",[[1,15155,"\n"]],[15154,15154],[15155,15155]]],[1552582091591,[null,[[-1,15152,"毁"]],[15152,15152],[15152,15152]]],[1552582091591,[null,[[1,15152,"毁"]],[15152,15152],[15152,15152]]],[1552582089717,["KotlinD@DESKTOP-JV8VAO0",[[-1,15066,"L"]],[15067,15067],[15066,15066]]],[1552582089955,["KotlinD@DESKTOP-JV8VAO0",[[1,15066,"；"]],[15066,15066],[15067,15067]]],[1552582090282,["KotlinD@DESKTOP-JV8VAO0",[[-1,15066,"；"]],[15067,15067],[15066,15066]]],[1552582090861,["KotlinD@DESKTOP-JV8VAO0",[[1,15066,"l"]],[15066,15066],[15067,15067]]],[1552582451614,[null,[[-1,15152,"毁"]],[15152,15152],[15152,15152]]],[1552582451614,[null,[[1,15152,"毁"]],[15152,15152],[15152,15152]]],[1552582415144,["KotlinD@DESKTOP-JV8VAO0",[[1,15152,"（*）"]],[15152,15152],[15155,15155]]],[1552582416173,["KotlinD@DESKTOP-JV8VAO0",[[-1,15153,"*"]],[15154,15154],[15153,15153]]],[1552582418897,["KotlinD@DESKTOP-JV8VAO0",[[1,15153,"使用到了"]],[15153,15153],[15157,15157]]],[1552582420175,["KotlinD@DESKTOP-JV8VAO0",[[-1,15152,"（使用到了"]],[15157,15157],[15152,15152]]],[1552582421300,["KotlinD@DESKTOP-JV8VAO0",[[1,15152,"（使用到了"]],[15152,15152],[15157,15157]]],[1552582428274,["KotlinD@DESKTOP-JV8VAO0",[[-1,15153,"使用到了"],[1,15157,"performLaunchActivity"]],[15153,15157],[15174,15174]]],[1552582430468,["KotlinD@DESKTOP-JV8VAO0",[[1,15174,"方法"]],[15174,15174],[15176,15176]]],[1552582430526,["KotlinD@DESKTOP-JV8VAO0",[[1,15174," "]],[15176,15176],[15177,15177]]],[1552582430972,["KotlinD@DESKTOP-JV8VAO0",[[1,15177,"，"]],[15177,15177],[15178,15178]]],[1552582454257,[null,[[-1,15179,"毁"]],[15179,15179],[15179,15179]]],[1552582454257,[null,[[1,15179,"毁"]],[15179,15179],[15179,15179]]],[1552582452015,["KotlinD@DESKTOP-JV8VAO0",[[1,15178,"Instrumentation"]],[15178,15178],[15193,15193]]],[1552582461146,[null,[[-1,15194,"毁"]],[15194,15194],[15194,15194]]],[1552582461146,[null,[[1,15194,"毁"]],[15194,15194],[15194,15194]]],[1552582455077,["KotlinD@DESKTOP-JV8VAO0",[[1,15193,"，"]],[15193,15193],[15194,15194]]],[1552582455780,["KotlinD@DESKTOP-JV8VAO0",[[-1,15193,"，"]],[15194,15194],[15193,15193]]],[1552582459967,["KotlinD@DESKTOP-JV8VAO0",[[1,15193,".newActivity"]],[15193,15193],[15205,15205]]],[1552582516061,[null,[[-1,15206,"毁"]],[15206,15206],[15206,15206]]],[1552582516061,[null,[[1,15206,"毁"]],[15206,15206],[15206,15206]]],[1552582513912,["KotlinD@DESKTOP-JV8VAO0",[[1,15208,"# "]],[15208,15208],[15210,15210]]],[1552582533966,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15210,"\n"]],[15206,15206],[15210,15210]]],[1552582533966,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15210,"\n"]],[15210,15210],[15206,15206]]],[1552582518125,["KotlinD@DESKTOP-JV8VAO0",[[1,15210,"ying"]],[15210,15210],[15214,15214]]],[1552582518871,["KotlinD@DESKTOP-JV8VAO0",[[-1,15210,"ying"]],[15214,15214],[15210,15210]]],[1552582530717,["KotlinD@DESKTOP-JV8VAO0",[[1,15210,"应用程序安装到手机上的过程"]],[15210,15210],[15223,15223]]],[1552582531046,["KotlinD@DESKTOP-JV8VAO0",[[1,15225,"\n"]],[15223,15223],[15224,15224]]],[1552582533267,["KotlinD@DESKTOP-JV8VAO0",[[1,15224,"- "]],[15224,15224],[15226,15226]]],[1552582593976,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15226,"\n"]],[15206,15206],[15226,15226]]],[1552582593976,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15226,"\n"]],[15226,15226],[15206,15206]]],[1552582538381,["KotlinD@DESKTOP-JV8VAO0",[[1,15226,"安装APK"]],[15226,15226],[15231,15231]]],[1552582538438,["KotlinD@DESKTOP-JV8VAO0",[[1,15228," "]],[15231,15231],[15232,15232]]],[1552582543637,["KotlinD@DESKTOP-JV8VAO0",[[1,15232,"-拷贝"]],[15232,15232],[15235,15235]]],[1552582545876,["KotlinD@DESKTOP-JV8VAO0",[[-1,15232,"-拷贝"]],[15235,15235],[15232,15232]]],[1552582547438,["KotlinD@DESKTOP-JV8VAO0",[[1,15232,"--》"]],[15232,15232],[15235,15235]]],[1552582548058,["KotlinD@DESKTOP-JV8VAO0",[[-1,15234,"》"]],[15235,15235],[15234,15234]]],[1552582550532,["KotlinD@DESKTOP-JV8VAO0",[[1,15234,">ba"]],[15234,15234],[15237,15237]]],[1552582551010,["KotlinD@DESKTOP-JV8VAO0",[[-1,15235,"ba"]],[15237,15237],[15235,15235]]],[1552582551503,["KotlinD@DESKTOP-JV8VAO0",[[1,15235,"kao"]],[15235,15235],[15238,15238]]],[1552582552051,["KotlinD@DESKTOP-JV8VAO0",[[-1,15235,"kao"]],[15238,15238],[15235,15235]]],[1552582552865,["KotlinD@DESKTOP-JV8VAO0",[[1,15235,"kaoba"]],[15235,15235],[15240,15240]]],[1552582553676,["KotlinD@DESKTOP-JV8VAO0",[[-1,15235,"kaoba"]],[15240,15240],[15235,15235]]],[1552582557080,["KotlinD@DESKTOP-JV8VAO0",[[1,15235,"拷贝APK"]],[15235,15235],[15240,15240]]],[1552582557137,["KotlinD@DESKTOP-JV8VAO0",[[1,15237," "]],[15240,15240],[15241,15241]]],[1552582563380,["KotlinD@DESKTOP-JV8VAO0",[[1,15241,"-->、"]],[15241,15241],[15245,15245]]],[1552582564170,["KotlinD@DESKTOP-JV8VAO0",[[-1,15244,"、"]],[15245,15245],[15244,15244]]],[1552582565253,["KotlinD@DESKTOP-JV8VAO0",[[1,15244,"/."]],[15244,15244],[15246,15246]]],[1552582565874,["KotlinD@DESKTOP-JV8VAO0",[[-1,15245,"."]],[15246,15246],[15245,15245]]],[1552582575903,["KotlinD@DESKTOP-JV8VAO0",[[1,15245,"data/app/pkg-->zi"]],[15245,15245],[15262,15262]]],[1552582576553,["KotlinD@DESKTOP-JV8VAO0",[[-1,15260,"zi"]],[15262,15262],[15260,15260]]],[1552582583129,["KotlinD@DESKTOP-JV8VAO0",[[1,15260,"资源管理器加载资源 -"]],[15260,15260],[15271,15271]]],[1552582583767,["KotlinD@DESKTOP-JV8VAO0",[[-1,15269," -"]],[15271,15271],[15269,15269]]],[1552582585263,["KotlinD@DESKTOP-JV8VAO0",[[1,15269,"--》"]],[15269,15269],[15272,15272]]],[1552582585730,["KotlinD@DESKTOP-JV8VAO0",[[-1,15271,"》"]],[15272,15272],[15271,15271]]],[1552582589750,["KotlinD@DESKTOP-JV8VAO0",[[1,15271,">机械"]],[15271,15271],[15274,15274]]],[1552582624386,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15274,"\n"]],[15206,15206],[15274,15274]]],[1552582624386,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15274,"\n"]],[15274,15274],[15206,15206]]],[1552582598759,["KotlinD@DESKTOP-JV8VAO0",[[1,15274,"AndroidManifes"]],[15274,15274],[15288,15288]]],[1552582598813,["KotlinD@DESKTOP-JV8VAO0",[[1,15274," "]],[15288,15288],[15289,15289]]],[1552582601341,["KotlinD@DESKTOP-JV8VAO0",[[-1,15282,"Manifes"]],[15289,15289],[15282,15282]]],[1552582605743,["KotlinD@DESKTOP-JV8VAO0",[[1,15282,"Manifes。"]],[15282,15282],[15290,15290]]],[1552582606265,["KotlinD@DESKTOP-JV8VAO0",[[-1,15289,"。"]],[15290,15290],[15289,15289]]],[1552582607299,["KotlinD@DESKTOP-JV8VAO0",[[1,15289,".xml"]],[15289,15289],[15293,15293]]],[1552582607582,["KotlinD@DESKTOP-JV8VAO0",[[1,15294,"- \n"]],[15293,15293],[15296,15296]]],[1552582609089,["KotlinD@DESKTOP-JV8VAO0",[[-1,15294,"- "]],[15296,15296],[15294,15294]]],[1552582609380,["KotlinD@DESKTOP-JV8VAO0",[[-1,15295,"\n"]],[15294,15294],[15293,15293]]],[1552582621484,["KotlinD@DESKTOP-JV8VAO0",[[1,15293,"-->/data/data/l"]],[15293,15293],[15308,15308]]],[1552582622218,["KotlinD@DESKTOP-JV8VAO0",[[-1,15307,"l"]],[15308,15308],[15307,15307]]],[1552582623430,["KotlinD@DESKTOP-JV8VAO0",[[1,15307,"pkg"]],[15307,15307],[15310,15310]]],[1552582667283,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15310,"\n"]],[15206,15206],[15310,15310]]],[1552582667283,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15310,"\n"]],[15310,15310],[15206,15206]]],[1552582632835,["KotlinD@DESKTOP-JV8VAO0",[[1,15310,"-->dexopt-->?"]],[15310,15310],[15323,15323]]],[1552582633406,["KotlinD@DESKTOP-JV8VAO0",[[-1,15322,"?"]],[15323,15323],[15322,15322]]],[1552582634510,["KotlinD@DESKTOP-JV8VAO0",[[1,15322,"zhu"]],[15322,15322],[15325,15325]]],[1552582635280,["KotlinD@DESKTOP-JV8VAO0",[[-1,15322,"zhu"]],[15325,15325],[15322,15322]]],[1552582639235,["KotlinD@DESKTOP-JV8VAO0",[[1,15322,"注册四大组建"]],[15322,15322],[15328,15328]]],[1552582641019,["KotlinD@DESKTOP-JV8VAO0",[[-1,15326,"组建"]],[15328,15328],[15326,15326]]],[1552582646306,["KotlinD@DESKTOP-JV8VAO0",[[1,15326,"组件--》"]],[15326,15326],[15331,15331]]],[1552582647238,["KotlinD@DESKTOP-JV8VAO0",[[-1,15330,"》"]],[15331,15331],[15330,15330]]],[1552582650903,["KotlinD@DESKTOP-JV8VAO0",[[1,15330,">z"]],[15330,15330],[15332,15332]]],[1552582651278,["KotlinD@DESKTOP-JV8VAO0",[[-1,15331,"z"]],[15332,15332],[15331,15331]]],[1552582651582,["KotlinD@DESKTOP-JV8VAO0",[[1,15331,"an"]],[15331,15331],[15333,15333]]],[1552582652110,["KotlinD@DESKTOP-JV8VAO0",[[-1,15331,"an"]],[15333,15333],[15331,15331]]],[1552582657532,["KotlinD@DESKTOP-JV8VAO0",[[1,15331,"暗转完毕发送ing"]],[15331,15331],[15340,15340]]],[1552582659025,["KotlinD@DESKTOP-JV8VAO0",[[-1,15331,"暗转完毕发送ing"]],[15340,15340],[15331,15331]]],[1552582666473,["KotlinD@DESKTOP-JV8VAO0",[[1,15331,"安装完毕发送广播"]],[15331,15331],[15339,15339]]],[1552582670595,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15339,"\n"]],[15206,15206],[15339,15339]]],[1552582670595,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15339,"\n"]],[15339,15339],[15206,15206]]],[1552582667669,["KotlinD@DESKTOP-JV8VAO0",[[1,15340,"- \n"]],[15339,15339],[15342,15342]]],[1552582669880,["KotlinD@DESKTOP-JV8VAO0",[[-1,15341," "]],[15342,15342],[15341,15341]]],[1552582730621,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15341,"\n"]],[15206,15206],[15341,15341]]],[1552582730621,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15341,"\n"]],[15341,15341],[15206,15206]]],[1552582680498,["KotlinD@DESKTOP-JV8VAO0",[[1,15341," 复制APK"]],[15341,15341],[15347,15347]]],[1552582680554,["KotlinD@DESKTOP-JV8VAO0",[[1,15344," "]],[15347,15347],[15348,15348]]],[1552582682835,["KotlinD@DESKTOP-JV8VAO0",[[1,15348,"搭配"]],[15348,15348],[15350,15350]]],[1552582682892,["KotlinD@DESKTOP-JV8VAO0",[[1,15348," "]],[15350,15350],[15351,15351]]],[1552582684676,["KotlinD@DESKTOP-JV8VAO0",[[-1,15346,"PK 搭配"]],[15351,15351],[15346,15346]]],[1552582687566,["KotlinD@DESKTOP-JV8VAO0",[[1,15346,"pk到"]],[15346,15346],[15349,15349]]],[1552582687622,["KotlinD@DESKTOP-JV8VAO0",[[1,15348," "]],[15349,15349],[15350,15350]]],[1552582689108,["KotlinD@DESKTOP-JV8VAO0",[[1,15350,"。"]],[15350,15350],[15351,15351]]],[1552582689911,["KotlinD@DESKTOP-JV8VAO0",[[-1,15350,"。"]],[15351,15351],[15350,15350]]],[1552582690174,["KotlinD@DESKTOP-JV8VAO0",[[1,15350,"、"]],[15350,15350],[15351,15351]]],[1552582690796,["KotlinD@DESKTOP-JV8VAO0",[[-1,15350,"、"]],[15351,15351],[15350,15350]]],[1552582693411,["KotlinD@DESKTOP-JV8VAO0",[[1,15350,"/data/da"]],[15350,15350],[15358,15358]]],[1552582694317,["KotlinD@DESKTOP-JV8VAO0",[[-1,15356,"da"]],[15358,15358],[15356,15356]]],[1552582699009,["KotlinD@DESKTOP-JV8VAO0",[[1,15356,"app目录"]],[15356,15356],[15361,15361]]],[1552582699065,["KotlinD@DESKTOP-JV8VAO0",[[1,15359," "]],[15361,15361],[15362,15362]]],[1552582714536,["KotlinD@DESKTOP-JV8VAO0",[[1,15362,"下，解压并扫描安装包"]],[15362,15362],[15372,15372]]],[1552582715156,["KotlinD@DESKTOP-JV8VAO0",[[1,15373,"- \n"]],[15372,15372],[15375,15375]]],[1552582727128,["KotlinD@DESKTOP-JV8VAO0",[[1,15375,"资源管理器解析Apk"]],[15375,15375],[15385,15385]]],[1552582727185,["KotlinD@DESKTOP-JV8VAO0",[[1,15382," "]],[15385,15385],[15386,15386]]],[1552582729092,["KotlinD@DESKTOP-JV8VAO0",[[1,15386,"里"]],[15386,15386],[15387,15387]]],[1552582729149,["KotlinD@DESKTOP-JV8VAO0",[[1,15386," "]],[15387,15387],[15388,15388]]],[1552582730295,["KotlinD@DESKTOP-JV8VAO0",[[1,15388,"的资源"]],[15388,15388],[15391,15391]]],[1552582768514,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15391,"\n"]],[15206,15206],[15391,15391]]],[1552582768514,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15391,"\n"]],[15391,15391],[15206,15206]]],[1552582731203,["KotlinD@DESKTOP-JV8VAO0",[[1,15391,"文件"]],[15391,15391],[15393,15393]]],[1552582731653,["KotlinD@DESKTOP-JV8VAO0",[[1,15394,"- \n"]],[15393,15393],[15396,15396]]],[1552582735618,["KotlinD@DESKTOP-JV8VAO0",[[1,15396,"解析Android"]],[15396,15396],[15405,15405]]],[1552582735674,["KotlinD@DESKTOP-JV8VAO0",[[1,15398," "]],[15405,15405],[15406,15406]]],[1552582742563,["KotlinD@DESKTOP-JV8VAO0",[[1,15406,"Manifest文件"]],[15406,15406],[15416,15416]]],[1552582742618,["KotlinD@DESKTOP-JV8VAO0",[[1,15414," "]],[15416,15416],[15417,15417]]],[1552582746954,["KotlinD@DESKTOP-JV8VAO0",[[1,15417,"，并在/打他、"]],[15417,15417],[15424,15424]]],[1552582748457,["KotlinD@DESKTOP-JV8VAO0",[[-1,15421,"打他、"]],[15424,15424],[15421,15421]]],[1552582752789,["KotlinD@DESKTOP-JV8VAO0",[[1,15421,"data/data目录"]],[15421,15421],[15432,15432]]],[1552582752844,["KotlinD@DESKTOP-JV8VAO0",[[1,15430," "]],[15432,15432],[15433,15433]]],[1552582759418,["KotlinD@DESKTOP-JV8VAO0",[[1,15433,"下创建对饮的数据"]],[15433,15433],[15441,15441]]],[1552582760658,["KotlinD@DESKTOP-JV8VAO0",[[-1,15436,"对饮的数据"]],[15441,15441],[15436,15436]]],[1552582766983,["KotlinD@DESKTOP-JV8VAO0",[[1,15436,"对应的应用数据目录"]],[15436,15436],[15445,15445]]],[1552582767450,["KotlinD@DESKTOP-JV8VAO0",[[1,15446,"- \n"]],[15445,15445],[15448,15448]]],[1552582828520,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15448,"\n"]],[15206,15206],[15448,15448]]],[1552582828520,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15448,"\n"]],[15448,15448],[15206,15206]]],[1552582773311,["KotlinD@DESKTOP-JV8VAO0",[[1,15448,"然后对dex"]],[15448,15448],[15454,15454]]],[1552582773367,["KotlinD@DESKTOP-JV8VAO0",[[1,15451," "]],[15454,15454],[15455,15455]]],[1552582774338,["KotlinD@DESKTOP-JV8VAO0",[[1,15455,"文件"]],[15455,15455],[15457,15457]]],[1552582774395,["KotlinD@DESKTOP-JV8VAO0",[[1,15455," "]],[15457,15457],[15458,15458]]],[1552582785646,["KotlinD@DESKTOP-JV8VAO0",[[1,15458,"进行优化，并保存在dalvik"]],[15458,15458],[15473,15473]]],[1552582785703,["KotlinD@DESKTOP-JV8VAO0",[[1,15467," "]],[15473,15473],[15474,15474]]],[1552582792083,["KotlinD@DESKTOP-JV8VAO0",[[1,15474,"-cachel"]],[15474,15474],[15481,15481]]],[1552582792441,["KotlinD@DESKTOP-JV8VAO0",[[-1,15480,"l"]],[15481,15481],[15480,15480]]],[1552582793463,["KotlinD@DESKTOP-JV8VAO0",[[1,15480,"目录"]],[15480,15480],[15482,15482]]],[1552582793519,["KotlinD@DESKTOP-JV8VAO0",[[1,15480," "]],[15482,15482],[15483,15483]]],[1552582793907,["KotlinD@DESKTOP-JV8VAO0",[[1,15483,"下"]],[15483,15483],[15484,15484]]],[1552582794116,["KotlinD@DESKTOP-JV8VAO0",[[1,15485,"- \n"]],[15484,15484],[15487,15487]]],[1552582798107,["KotlinD@DESKTOP-JV8VAO0",[[1,15487,"将Android"]],[15487,15487],[15495,15495]]],[1552582798163,["KotlinD@DESKTOP-JV8VAO0",[[1,15488," "]],[15495,15495],[15496,15496]]],[1552582806957,["KotlinD@DESKTOP-JV8VAO0",[[1,15496,"Manifest文件"]],[15496,15496],[15506,15506]]],[1552582807014,["KotlinD@DESKTOP-JV8VAO0",[[1,15504," "]],[15506,15506],[15507,15507]]],[1552582823874,["KotlinD@DESKTOP-JV8VAO0",[[1,15507,"解析出的自打组建信息注册到PackageManagerService"]],[15507,15507],[15541,15541]]],[1552582823930,["KotlinD@DESKTOP-JV8VAO0",[[1,15520," "]],[15541,15541],[15542,15542]]],[1552582824731,["KotlinD@DESKTOP-JV8VAO0",[[1,15542,"中"]],[15542,15542],[15543,15543]]],[1552582824788,["KotlinD@DESKTOP-JV8VAO0",[[1,15542," "]],[15543,15543],[15544,15544]]],[1552582824912,["KotlinD@DESKTOP-JV8VAO0",[[1,15545,"- \n"]],[15544,15544],[15547,15547]]],[1552582836494,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15547,"\n"]],[15206,15206],[15547,15547]]],[1552582836494,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15547,"\n"]],[15547,15547],[15206,15206]]],[1552582835863,["KotlinD@DESKTOP-JV8VAO0",[[1,15547,"安装完成，发送广播"]],[15547,15547],[15556,15556]]],[1552582837181,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15556,"\n"]],[15206,15206],[15556,15556]]],[1552582837181,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15556,"\n"]],[15556,15556],[15206,15206]]],[1552582836675,["KotlinD@DESKTOP-JV8VAO0",[[1,15557,"- \n"]],[15556,15556],[15559,15559]]],[1552582839490,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15559,"\n"]],[15206,15206],[15559,15559]]],[1552582839490,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15559,"\n"]],[15559,15559],[15206,15206]]],[1552582838624,["KotlinD@DESKTOP-JV8VAO0",[[-1,15557,"- "]],[15559,15559],[15557,15557]]],[1552582838939,["KotlinD@DESKTOP-JV8VAO0",[[1,15559,"\n"]],[15557,15557],[15558,15558]]],[1552582959510,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15556,"\n"]],[15206,15206],[15556,15556]]],[1552582959510,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15556,"\n"]],[15556,15556],[15206,15206]]],[1552582947315,["KotlinD@DESKTOP-JV8VAO0",[[-1,15558,"\n"],[1,15559,"#"]],[15558,15558],[15559,15559]]],[1552582947534,["KotlinD@DESKTOP-JV8VAO0",[[1,15559," "]],[15559,15559],[15560,15560]]],[1552582948548,["KotlinD@DESKTOP-JV8VAO0",[[1,15561,"\n"]],[15560,15560],[15561,15561]]],[1552582948750,["KotlinD@DESKTOP-JV8VAO0",[[1,15562,"\n"]],[15561,15561],[15562,15562]]],[1552582955568,["KotlinD@DESKTOP-JV8VAO0",[[1,15560,"OkHttp"]],[15560,15560],[15566,15566]]],[1552582958742,["KotlinD@DESKTOP-JV8VAO0",[[-1,15561,"kHttp"]],[15566,15566],[15561,15561]]],[1552582973869,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15561,"\n"]],[15206,15206],[15561,15561]]],[1552582973869,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15561,"\n"]],[15561,15561],[15206,15206]]],[1552582962149,["KotlinD@DESKTOP-JV8VAO0",[[1,15561,"khttp"]],[15561,15561],[15566,15566]]],[1552582966956,["KotlinD@DESKTOP-JV8VAO0",[[-1,15562,"http"]],[15566,15566],[15562,15562]]],[1552582972924,["KotlinD@DESKTOP-JV8VAO0",[[1,15562,"Http实现原理"]],[15562,15562],[15570,15570]]],[1552582972981,["KotlinD@DESKTOP-JV8VAO0",[[1,15566," "]],[15570,15570],[15571,15571]]],[1552582973126,["KotlinD@DESKTOP-JV8VAO0",[[1,15574,"\n"]],[15571,15571],[15572,15572]]],[1552583093882,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15571,"\n"]],[15206,15206],[15571,15571]]],[1552583093882,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15571,"\n"]],[15571,15571],[15206,15206]]],[1552583046278,["KotlinD@DESKTOP-JV8VAO0",[[-1,15572,"\n"],[1,15573,"-"]],[15572,15572],[15573,15573]]],[1552583052507,["KotlinD@DESKTOP-JV8VAO0",[[1,15573," 网络配置层：；"]],[15573,15573],[15581,15581]]],[1552583053908,["KotlinD@DESKTOP-JV8VAO0",[[-1,15580,"；"]],[15581,15581],[15580,15580]]],[1552583059291,["KotlinD@DESKTOP-JV8VAO0",[[1,15580,"利用Builder"]],[15580,15580],[15589,15589]]],[1552583059349,["KotlinD@DESKTOP-JV8VAO0",[[1,15582," "]],[15589,15589],[15590,15590]]],[1552583061315,["KotlinD@DESKTOP-JV8VAO0",[[1,15590,"模式"]],[15590,15590],[15592,15592]]],[1552583061373,["KotlinD@DESKTOP-JV8VAO0",[[1,15590," "]],[15592,15592],[15593,15593]]],[1552583073993,["KotlinD@DESKTOP-JV8VAO0",[[1,15593,"配置各充参数，例如：超市见"]],[15593,15593],[15606,15606]]],[1552583075757,["KotlinD@DESKTOP-JV8VAO0",[[-1,15603,"超市见"]],[15606,15606],[15603,15603]]],[1552583078636,["KotlinD@DESKTOP-JV8VAO0",[[1,15603,"超时时间，"]],[15603,15603],[15608,15608]]],[1552583079169,["KotlinD@DESKTOP-JV8VAO0",[[-1,15607,"，"]],[15608,15608],[15607,15607]]],[1552583083994,["KotlinD@DESKTOP-JV8VAO0",[[1,15607,"、拦截器等"]],[15607,15607],[15612,15612]]],[1552583087360,["KotlinD@DESKTOP-JV8VAO0",[[1,15613,"- \n"]],[15612,15612],[15615,15615]]],[1552583092517,["KotlinD@DESKTOP-JV8VAO0",[[1,15615,"重定向层："]],[15615,15615],[15620,15620]]],[1552583153887,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15620,"\n"]],[15206,15206],[15620,15620]]],[1552583153887,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15620,"\n"]],[15620,15620],[15206,15206]]],[1552583097971,["KotlinD@DESKTOP-JV8VAO0",[[1,15620,"负责重定向"]],[15620,15620],[15625,15625]]],[1552583099737,["KotlinD@DESKTOP-JV8VAO0",[[1,15626,"- \n"]],[15625,15625],[15628,15628]]],[1552583104459,["KotlinD@DESKTOP-JV8VAO0",[[1,15628,"HeaderPin姐"]],[15628,15628],[15638,15638]]],[1552583105371,["KotlinD@DESKTOP-JV8VAO0",[[-1,15634,"Pin姐"]],[15638,15638],[15634,15634]]],[1552583108041,["KotlinD@DESKTOP-JV8VAO0",[[1,15634,"品阶层"]],[15634,15634],[15637,15637]]],[1552583108098,["KotlinD@DESKTOP-JV8VAO0",[[1,15634," "]],[15637,15637],[15638,15638]]],[1552583108451,["KotlinD@DESKTOP-JV8VAO0",[[1,15638,"："]],[15638,15638],[15639,15639]]],[1552583109490,["KotlinD@DESKTOP-JV8VAO0",[[-1,15635,"品阶层："]],[15639,15639],[15635,15635]]],[1552583111657,["KotlinD@DESKTOP-JV8VAO0",[[1,15635,"品阶层"]],[15635,15635],[15638,15638]]],[1552583113640,["KotlinD@DESKTOP-JV8VAO0",[[-1,15634," 品阶层"]],[15638,15638],[15634,15634]]],[1552583114990,["KotlinD@DESKTOP-JV8VAO0",[[1,15634," pin"]],[15634,15634],[15638,15638]]],[1552583115775,["KotlinD@DESKTOP-JV8VAO0",[[-1,15635,"pin"]],[15638,15638],[15635,15635]]],[1552583121768,["KotlinD@DESKTOP-JV8VAO0",[[1,15635,"拼接层：负责吧"]],[15635,15635],[15642,15642]]],[1552583122175,["KotlinD@DESKTOP-JV8VAO0",[[-1,15641,"吧"]],[15642,15642],[15641,15641]]],[1552583152181,["KotlinD@DESKTOP-JV8VAO0",[[1,15641,"把用户构造的请求转换为发送给服务器的请求，把服务器放回的相应"]],[15641,15641],[15671,15671]]],[1552583213953,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15671,"\n"]],[15206,15206],[15671,15671]]],[1552583213953,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15671,"\n"]],[15671,15671],[15206,15206]]],[1552583157829,["KotlinD@DESKTOP-JV8VAO0",[[1,15674,"对用"]],[15674,15674],[15676,15676]]],[1552583161260,["KotlinD@DESKTOP-JV8VAO0",[[-1,15675,"用"]],[15676,15676],[15675,15675]]],[1552583165859,["KotlinD@DESKTOP-JV8VAO0",[[1,15675,"用户有哈的"]],[15675,15675],[15680,15680]]],[1552583166599,["KotlinD@DESKTOP-JV8VAO0",[[-1,15677,"有哈的"]],[15680,15680],[15677,15677]]],[1552583173603,["KotlinD@DESKTOP-JV8VAO0",[[1,15677,"友好的响应"]],[15677,15677],[15682,15682]]],[1552583175743,["KotlinD@DESKTOP-JV8VAO0",[[1,15683,"- \n"]],[15682,15682],[15685,15685]]],[1552583180769,["KotlinD@DESKTOP-JV8VAO0",[[1,15685,"HTTP画卷村"]],[15685,15685],[15692,15692]]],[1552583180827,["KotlinD@DESKTOP-JV8VAO0",[[1,15689," "]],[15692,15692],[15693,15693]]],[1552583181360,["KotlinD@DESKTOP-JV8VAO0",[[-1,15690,"画卷村"]],[15693,15693],[15690,15690]]],[1552583185781,["KotlinD@DESKTOP-JV8VAO0",[[1,15690,"缓存层："]],[15690,15690],[15694,15694]]],[1552583186058,["KotlinD@DESKTOP-JV8VAO0",[[1,15695,"- \n"]],[15694,15694],[15697,15697]]],[1552583186976,["KotlinD@DESKTOP-JV8VAO0",[[-1,15695,"- "]],[15697,15697],[15695,15695]]],[1552583187198,["KotlinD@DESKTOP-JV8VAO0",[[-1,15696,"\n"]],[15695,15695],[15694,15694]]],[1552583197956,["KotlinD@DESKTOP-JV8VAO0",[[1,15694,"负责读取缓存以及更新缓存"]],[15694,15694],[15706,15706]]],[1552583198610,["KotlinD@DESKTOP-JV8VAO0",[[1,15707,"- \n"]],[15706,15706],[15709,15709]]],[1552583207760,["KotlinD@DESKTOP-JV8VAO0",[[1,15709,"连接层：连接层"]],[15709,15709],[15716,15716]]],[1552583208351,["KotlinD@DESKTOP-JV8VAO0",[[-1,15713,"连接层"]],[15716,15716],[15713,15713]]],[1552583213731,["KotlinD@DESKTOP-JV8VAO0",[[1,15713,"实现网络协议"]],[15713,15713],[15719,15719]]],[1552583273641,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15671,"\n\n\n"],[1,15674,"转换为"],[-1,15682,"安"],[1,15683,"\n"],[1,15721,"安卓"]],[15206,15206],[15723,15723]]],[1552583273641,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15671,"\n\n\n"],[-1,15671,"转换为"],[1,15682,"安"],[-1,15682,"\n"],[-1,15721,"安卓"]],[15723,15723],[15206,15206]]],[1552583214962,["KotlinD@DESKTOP-JV8VAO0",[[-1,15719,"，"]],[15720,15720],[15719,15719]]],[1552583229480,["KotlinD@DESKTOP-JV8VAO0",[[1,15719,"、内部的拦截器、安全性认证、链接与"]],[15719,15719],[15736,15736]]],[1552583230621,["KotlinD@DESKTOP-JV8VAO0",[[-1,15733,"链接与"]],[15736,15736],[15733,15733]]],[1552583230943,["KotlinD@DESKTOP-JV8VAO0",[[1,15733,"了；"]],[15733,15733],[15735,15735]]],[1552583232073,["KotlinD@DESKTOP-JV8VAO0",[[-1,15733,"了；"]],[15735,15735],[15733,15733]]],[1552583238256,["KotlinD@DESKTOP-JV8VAO0",[[1,15733,"连接与连接池等"]],[15733,15733],[15740,15740]]],[1552583243723,["KotlinD@DESKTOP-JV8VAO0",[[1,15741,"- \n"]],[15740,15740],[15743,15743]]],[1552583263140,["KotlinD@DESKTOP-JV8VAO0",[[1,15743,"数据相应层：负责从服务器读取相应"]],[15743,15743],[15759,15759]]],[1552583263718,["KotlinD@DESKTOP-JV8VAO0",[[-1,15757,"相应"]],[15759,15759],[15757,15757]]],[1552583266544,["KotlinD@DESKTOP-JV8VAO0",[[1,15757,"响应3"]],[15757,15757],[15760,15760]]],[1552583266637,["KotlinD@DESKTOP-JV8VAO0",[[1,15759," "]],[15760,15760],[15761,15761]]],[1552583267575,["KotlinD@DESKTOP-JV8VAO0",[[1,15761,"的"]],[15761,15761],[15762,15762]]],[1552583267633,["KotlinD@DESKTOP-JV8VAO0",[[1,15761," "]],[15762,15762],[15763,15763]]],[1552583268302,["KotlinD@DESKTOP-JV8VAO0",[[-1,15760,"3 的"]],[15763,15763],[15760,15760]]],[1552583268875,["KotlinD@DESKTOP-JV8VAO0",[[1,15760,"的"]],[15760,15760],[15761,15761]]],[1552583269248,["KotlinD@DESKTOP-JV8VAO0",[[-1,15759," 的"]],[15761,15761],[15759,15759]]],[1552583270754,["KotlinD@DESKTOP-JV8VAO0",[[1,15759,"的数据"]],[15759,15759],[15762,15762]]],[1552583273033,["KotlinD@DESKTOP-JV8VAO0",[[1,15763,"- \n"]],[15762,15762],[15765,15765]]],[1552583289355,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15671,"\n\n\n"],[1,15674,"转换为"],[-1,15682,"安"],[1,15683,"\n"],[1,15766,"\n安卓"]],[15206,15206],[15769,15769]]],[1552583289355,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15671,"\n\n\n"],[-1,15671,"转换为"],[1,15682,"安"],[-1,15682,"\n"],[-1,15766,"\n安卓"]],[15769,15769],[15206,15206]]],[1552583288084,["KotlinD@DESKTOP-JV8VAO0",[[-1,15763,"- "]],[15765,15765],[15763,15763]]],[1552583288298,["KotlinD@DESKTOP-JV8VAO0",[[1,15765,"\n"]],[15763,15763],[15764,15764]]],[1552583318746,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15671,"\n\n\n"],[1,15674,"转换为"],[-1,15682,"安"],[1,15683,"\n"],[1,15764,"\n\n安卓"],[-1,15765,"\n"]],[15206,15206],[15765,15765]]],[1552583318746,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15671,"\n\n\n"],[-1,15671,"转换为"],[1,15682,"安"],[-1,15682,"\n"],[-1,15764,"\n\n安卓"],[1,15769,"\n"]],[15765,15765],[15206,15206]]],[1552583292959,["KotlinD@DESKTOP-JV8VAO0",[[-1,15764,"\n"],[1,15765,"Okhtt"]],[15764,15764],[15769,15769]]],[1552583294512,["KotlinD@DESKTOP-JV8VAO0",[[1,15769,"p"]],[15769,15769],[15770,15770]]],[1552583301386,["KotlinD@DESKTOP-JV8VAO0",[[1,15764,"### "]],[15764,15764],[15768,15768]]],[1552583302269,["KotlinD@DESKTOP-JV8VAO0",[[-1,15768,"O"]],[15768,15768],[15768,15768]]],[1552583304062,["KotlinD@DESKTOP-JV8VAO0",[[1,15768,"o"]],[15768,15768],[15769,15769]]],[1552583305054,["KotlinD@DESKTOP-JV8VAO0",[[-1,15768,"o"]],[15769,15769],[15768,15768]]],[1552583305867,["KotlinD@DESKTOP-JV8VAO0",[[1,15768,"O"]],[15768,15768],[15769,15769]]],[1552583310500,["KotlinD@DESKTOP-JV8VAO0",[[1,15774,"总"]],[15774,15774],[15775,15775]]],[1552583310557,["KotlinD@DESKTOP-JV8VAO0",[[1,15774," "]],[15775,15775],[15776,15776]]],[1552583311165,["KotlinD@DESKTOP-JV8VAO0",[[-1,15775,"总"]],[15776,15776],[15775,15775]]],[1552583317155,["KotlinD@DESKTOP-JV8VAO0",[[1,15775,"中关键的类"]],[15775,15775],[15780,15780]]],[1552583317771,["KotlinD@DESKTOP-JV8VAO0",[[1,15781,"\n"]],[15780,15780],[15781,15781]]],[1552583320878,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15671,"\n\n\n"],[1,15674,"转换为"],[-1,15682,"安"],[1,15683,"\n"],[1,15782,"安卓广"]],[15206,15206],[15785,15785]]],[1552583320878,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15671,"\n\n\n"],[-1,15671,"转换为"],[1,15682,"安"],[-1,15682,"\n"],[-1,15782,"安卓广"]],[15785,15785],[15206,15206]]],[1552583319860,["KotlinD@DESKTOP-JV8VAO0",[[1,15781,"- "]],[15781,15781],[15783,15783]]],[1552583380892,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15671,"\n\n\n"],[1,15674,"转换为"],[-1,15682,"安"],[1,15683,"\n"],[1,15784,"安卓广"]],[15206,15206],[15787,15787]]],[1552583380892,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15671,"\n\n\n"],[-1,15671,"转换为"],[1,15682,"安"],[-1,15682,"\n"],[-1,15784,"安卓广"]],[15787,15787],[15206,15206]]],[1552583351623,["KotlinD@DESKTOP-JV8VAO0",[[1,15783,"OkHttpClient：通信的客户端，用来统一管理发起请求与解析相应；"]],[15783,15783],[15819,15819]]],[1552583351850,["KotlinD@DESKTOP-JV8VAO0",[[1,15820,"- \n"]],[15819,15819],[15822,15822]]],[1552583365409,["KotlinD@DESKTOP-JV8VAO0",[[1,15822,"Call：是一个接口，她是Http"]],[15822,15822],[15839,15839]]],[1552583365470,["KotlinD@DESKTOP-JV8VAO0",[[1,15835," "]],[15839,15839],[15840,15840]]],[1552583367803,["KotlinD@DESKTOP-JV8VAO0",[[1,15840,"请求"]],[15840,15840],[15842,15842]]],[1552583367863,["KotlinD@DESKTOP-JV8VAO0",[[1,15840," "]],[15842,15842],[15843,15843]]],[1552583369931,["KotlinD@DESKTOP-JV8VAO0",[[1,15843,"的抽喜爱那个"]],[15843,15843],[15849,15849]]],[1552583371197,["KotlinD@DESKTOP-JV8VAO0",[[-1,15844,"抽喜爱那个"]],[15849,15849],[15844,15844]]],[1552583379946,["KotlinD@DESKTOP-JV8VAO0",[[1,15844,"抽象描述，具体"]],[15844,15844],[15851,15851]]],[1552583440893,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15671,"\n\n\n"],[1,15674,"转换为"],[-1,15682,"安"],[1,15683,"\n"],[1,15852,"安卓广"]],[15206,15206],[15855,15855]]],[1552583440893,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15671,"\n\n\n"],[-1,15671,"转换为"],[1,15682,"安"],[-1,15682,"\n"],[-1,15852,"安卓广"]],[15855,15855],[15206,15206]]],[1552583382085,["KotlinD@DESKTOP-JV8VAO0",[[1,15851,"惨"]],[15851,15851],[15852,15852]]],[1552583382379,["KotlinD@DESKTOP-JV8VAO0",[[-1,15851,"惨"]],[15852,15852],[15851,15851]]],[1552583387838,["KotlinD@DESKTOP-JV8VAO0",[[1,15851,"实现是RealCall"]],[15851,15851],[15862,15862]]],[1552583387896,["KotlinD@DESKTOP-JV8VAO0",[[1,15854," "]],[15862,15862],[15863,15863]]],[1552583395248,["KotlinD@DESKTOP-JV8VAO0",[[1,15863,"他由"]],[15863,15863],[15865,15865]]],[1552583395306,["KotlinD@DESKTOP-JV8VAO0",[[1,15863," "]],[15865,15865],[15866,15866]]],[1552583399127,["KotlinD@DESKTOP-JV8VAO0",[[-1,15863," 他由"]],[15866,15866],[15863,15863]]],[1552583399897,["KotlinD@DESKTOP-JV8VAO0",[[1,15863,"它"]],[15863,15863],[15864,15864]]],[1552583399966,["KotlinD@DESKTOP-JV8VAO0",[[1,15863," "]],[15864,15864],[15865,15865]]],[1552583406544,["KotlinD@DESKTOP-JV8VAO0",[[1,15865,"由CallFactory"]],[15865,15865],[15877,15877]]],[1552583406600,["KotlinD@DESKTOP-JV8VAO0",[[1,15866," "]],[15877,15877],[15878,15878]]],[1552583408219,["KotlinD@DESKTOP-JV8VAO0",[[1,15878,"创建"]],[15878,15878],[15880,15880]]],[1552583408278,["KotlinD@DESKTOP-JV8VAO0",[[1,15878," "]],[15880,15880],[15881,15881]]],[1552583408727,["KotlinD@DESKTOP-JV8VAO0",[[1,15881,"。"]],[15881,15881],[15882,15882]]],[1552583410992,["KotlinD@DESKTOP-JV8VAO0",[[1,15883,"- \n"]],[15882,15882],[15885,15885]]],[1552583429013,["KotlinD@DESKTOP-JV8VAO0",[[1,15885,"Request：请求，封装请求的具体信息，例如;"]],[15885,15885],[15909,15909]]],[1552583429651,["KotlinD@DESKTOP-JV8VAO0",[[-1,15908,";"]],[15909,15909],[15908,15908]]],[1552583431896,["KotlinD@DESKTOP-JV8VAO0",[[1,15908,":rl"]],[15908,15908],[15911,15911]]],[1552583432880,["KotlinD@DESKTOP-JV8VAO0",[[-1,15909,"rl"]],[15911,15911],[15909,15909]]],[1552583435522,["KotlinD@DESKTOP-JV8VAO0",[[1,15909,"url\\e"]],[15909,15909],[15914,15914]]],[1552583436351,["KotlinD@DESKTOP-JV8VAO0",[[-1,15912,"\\e"]],[15914,15914],[15912,15912]]],[1552583440396,["KotlinD@DESKTOP-JV8VAO0",[[1,15912,"、header"]],[15912,15912],[15919,15919]]],[1552583500894,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15671,"\n\n\n"],[1,15674,"转换为"],[-1,15682,"安"],[1,15683,"\n"],[1,15920,"安卓广"]],[15206,15206],[15923,15923]]],[1552583500894,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15671,"\n\n\n"],[-1,15671,"转换为"],[1,15682,"安"],[-1,15682,"\n"],[-1,15920,"安卓广"]],[15923,15923],[15206,15206]]],[1552583441348,["KotlinD@DESKTOP-JV8VAO0",[[1,15919,"等"]],[15919,15919],[15920,15920]]],[1552583441406,["KotlinD@DESKTOP-JV8VAO0",[[1,15919," "]],[15920,15920],[15921,15921]]],[1552583441607,["KotlinD@DESKTOP-JV8VAO0",[[1,15922,"- \n"]],[15921,15921],[15924,15924]]],[1552583472607,["KotlinD@DESKTOP-JV8VAO0",[[1,15924,"RequestBody：请求体、用来提交流、表等请求信息"]],[15924,15924],[15952,15952]]],[1552583473487,["KotlinD@DESKTOP-JV8VAO0",[[1,15953,"- \n"]],[15952,15952],[15955,15955]]],[1552583481357,["KotlinD@DESKTOP-JV8VAO0",[[1,15955,"ResponseL"]],[15955,15955],[15964,15964]]],[1552583481719,["KotlinD@DESKTOP-JV8VAO0",[[-1,15963,"L"]],[15964,15964],[15963,15963]]],[1552583486453,["KotlinD@DESKTOP-JV8VAO0",[[1,15963,"：HTTP请求的"]],[15963,15963],[15971,15971]]],[1552583486511,["KotlinD@DESKTOP-JV8VAO0",[[1,15968," "]],[15971,15971],[15972,15972]]],[1552583486702,["KotlinD@DESKTOP-JV8VAO0",[[1,15972,"额"]],[15972,15972],[15973,15973]]],[1552583488525,["KotlinD@DESKTOP-JV8VAO0",[[-1,15972,"额"]],[15973,15973],[15972,15972]]],[1552583491120,["KotlinD@DESKTOP-JV8VAO0",[[1,15972,"想赢2"]],[15972,15972],[15975,15975]]],[1552583491207,["KotlinD@DESKTOP-JV8VAO0",[[1,15974," "]],[15975,15975],[15976,15976]]],[1552583492327,["KotlinD@DESKTOP-JV8VAO0",[[-1,15972,"想赢 2"]],[15976,15976],[15972,15972]]],[1552583494482,["KotlinD@DESKTOP-JV8VAO0",[[1,15972,"想赢"]],[15972,15972],[15974,15974]]],[1552583495138,["KotlinD@DESKTOP-JV8VAO0",[[-1,15972,"想赢"]],[15974,15974],[15972,15972]]],[1552583499659,["KotlinD@DESKTOP-JV8VAO0",[[1,15972,"响应，获取"]],[15972,15972],[15977,15977]]],[1552583560897,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15671,"\n\n\n"],[1,15674,"转换为"],[-1,15682,"安"],[1,15683,"\n"],[1,15978,"安卓广"]],[15206,15206],[15981,15981]]],[1552583560897,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15671,"\n\n\n"],[-1,15671,"转换为"],[1,15682,"安"],[-1,15682,"\n"],[-1,15978,"安卓广"]],[15981,15981],[15206,15206]]],[1552583511798,["KotlinD@DESKTOP-JV8VAO0",[[1,15977,"响应信息，例如想用"]],[15977,15977],[15986,15986]]],[1552583512213,["KotlinD@DESKTOP-JV8VAO0",[[-1,15984,"想用"]],[15986,15986],[15984,15984]]],[1552583517147,["KotlinD@DESKTOP-JV8VAO0",[[1,15984,"：响应h"]],[15984,15984],[15988,15988]]],[1552583517204,["KotlinD@DESKTOP-JV8VAO0",[[1,15987," "]],[15988,15988],[15989,15989]]],[1552583519231,["KotlinD@DESKTOP-JV8VAO0",[[1,15989,"eader等"]],[15989,15989],[15995,15995]]],[1552583519289,["KotlinD@DESKTOP-JV8VAO0",[[1,15994," "]],[15995,15995],[15996,15996]]],[1552583520254,["KotlinD@DESKTOP-JV8VAO0",[[1,15997,"- \n"]],[15996,15996],[15999,15999]]],[1552583535855,["KotlinD@DESKTOP-JV8VAO0",[[1,15999,"ResponseBody：HTTP请求的"]],[15999,15999],[16019,16019]]],[1552583535913,["KotlinD@DESKTOP-JV8VAO0",[[1,16016," "]],[16019,16019],[16020,16020]]],[1552583558034,["KotlinD@DESKTOP-JV8VAO0",[[1,16020,"响应体，被读取一次以后就会关闭，所以我们重复调用"]],[16020,16020],[16044,16044]]],[1552583590029,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15671,"\n\n\n"],[1,15674,"转换为"],[-1,15682,"安"],[1,15683,"\n"],[1,16045,"安卓广"]],[15206,15206],[16048,16048]]],[1552583590029,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15671,"\n\n\n"],[-1,15671,"转换为"],[1,15682,"安"],[-1,15682,"\n"],[-1,16045,"安卓广"]],[16048,16048],[15206,15206]]],[1552583567490,["KotlinD@DESKTOP-JV8VAO0",[[1,16044,"responseBody"]],[16044,16044],[16056,16056]]],[1552583567548,["KotlinD@DESKTOP-JV8VAO0",[[1,16044," "]],[16056,16056],[16057,16057]]],[1552583567885,["KotlinD@DESKTOP-JV8VAO0",[[1,16057,"。"]],[16057,16057],[16058,16058]]],[1552583568413,["KotlinD@DESKTOP-JV8VAO0",[[-1,16057,"。"]],[16058,16058],[16057,16057]]],[1552583570178,["KotlinD@DESKTOP-JV8VAO0",[[1,16057,".String"]],[16057,16057],[16064,16064]]],[1552583571645,["KotlinD@DESKTOP-JV8VAO0",[[-1,16058,"String"]],[16064,16064],[16058,16058]]],[1552583573371,["KotlinD@DESKTOP-JV8VAO0",[[1,16058,"strein"]],[16058,16058],[16064,16064]]],[1552583574525,["KotlinD@DESKTOP-JV8VAO0",[[-1,16061,"ein"]],[16064,16064],[16061,16061]]],[1552583576495,["KotlinD@DESKTOP-JV8VAO0",[[1,16061,"ing*I"]],[16061,16061],[16066,16066]]],[1552583577425,["KotlinD@DESKTOP-JV8VAO0",[[-1,16064,"*I"]],[16066,16066],[16064,16064]]],[1552583588022,["KotlinD@DESKTOP-JV8VAO0",[[1,16064,"()获取请求结果会报错；"]],[16064,16064],[16076,16076]]],[1552583588688,["KotlinD@DESKTOP-JV8VAO0",[[-1,16075,"；"]],[16076,16076],[16075,16075]]],[1552583588896,["KotlinD@DESKTOP-JV8VAO0",[[1,16076,"- \n"]],[16075,16075],[16078,16078]]],[1552583602005,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15671,"\n\n\n"],[1,15674,"转换为"],[-1,15682,"安"],[1,15683,"\n"],[1,16079,"安卓广"]],[15206,15206],[16082,16082]]],[1552583602005,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15671,"\n\n\n"],[-1,15671,"转换为"],[1,15682,"安"],[-1,15682,"\n"],[-1,16079,"安卓广"]],[16082,16082],[15206,15206]]],[1552583596676,["KotlinD@DESKTOP-JV8VAO0",[[1,15999,"=="],[1,16011,"=="]],[15999,16011],[15999,16015]]],[1552583601291,["KotlinD@DESKTOP-JV8VAO0",[[1,16028,"=="],[1,16039,"=="]],[16028,16039],[16028,16043]]],[1552583662008,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15671,"\n\n\n"],[1,15674,"转换为"],[-1,15682,"安"],[1,15683,"\n"],[1,16087,"安卓广"]],[15206,15206],[16090,16090]]],[1552583662008,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15671,"\n\n\n"],[-1,15671,"转换为"],[1,15682,"安"],[-1,15682,"\n"],[-1,16087,"安卓广"]],[16090,16090],[15206,15206]]],[1552583625312,["KotlinD@DESKTOP-JV8VAO0",[[1,16086,"Interceptor：Interceptor是"]],[16086,16086],[16110,16110]]],[1552583625371,["KotlinD@DESKTOP-JV8VAO0",[[1,16109," "]],[16110,16110],[16111,16111]]],[1552583641699,["KotlinD@DESKTOP-JV8VAO0",[[1,16111,"请求拦截器，负责拦截并处理请求，他讲"]],[16111,16111],[16129,16129]]],[1552583642390,["KotlinD@DESKTOP-JV8VAO0",[[-1,16127,"他讲"]],[16129,16129],[16127,16127]]],[1552583648677,["KotlinD@DESKTOP-JV8VAO0",[[1,16127,"它将网络请求，"]],[16127,16127],[16134,16134]]],[1552583649008,["KotlinD@DESKTOP-JV8VAO0",[[-1,16133,"，"]],[16134,16134],[16133,16133]]],[1552583660665,["KotlinD@DESKTOP-JV8VAO0",[[1,16133,"、缓存、透明压缩等功能都"]],[16133,16133],[16145,16145]]],[1552583722009,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15671,"\n\n\n"],[1,15674,"转换为"],[-1,15682,"安"],[1,15683,"\n"],[1,16146,"安卓广"]],[15206,15206],[16149,16149]]],[1552583722009,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15671,"\n\n\n"],[-1,15671,"转换为"],[1,15682,"安"],[-1,15682,"\n"],[-1,16146,"安卓广"]],[16149,16149],[15206,15206]]],[1552583663627,["KotlinD@DESKTOP-JV8VAO0",[[1,16145,"统一1"]],[16145,16145],[16148,16148]]],[1552583663689,["KotlinD@DESKTOP-JV8VAO0",[[1,16147," "]],[16148,16148],[16149,16149]]],[1552583664374,["KotlinD@DESKTOP-JV8VAO0",[[1,16149,"I啦"]],[16149,16149],[16151,16151]]],[1552583665332,["KotlinD@DESKTOP-JV8VAO0",[[-1,16147," 1I啦"]],[16151,16151],[16147,16147]]],[1552583672768,["KotlinD@DESKTOP-JV8VAO0",[[1,16147,"起来，每个功能等是"]],[16147,16147],[16156,16156]]],[1552583673859,["KotlinD@DESKTOP-JV8VAO0",[[-1,16154,"等是"]],[16156,16156],[16154,16154]]],[1552583680780,["KotlinD@DESKTOP-JV8VAO0",[[1,16154,"都是一个Interceptor"]],[16154,16154],[16169,16169]]],[1552583680839,["KotlinD@DESKTOP-JV8VAO0",[[1,16158," "]],[16169,16169],[16170,16170]]],[1552583686861,["KotlinD@DESKTOP-JV8VAO0",[[1,16170,"，所有的INterceptor"]],[16170,16170],[16185,16185]]],[1552583686920,["KotlinD@DESKTOP-JV8VAO0",[[1,16174," "]],[16185,16185],[16186,16186]]],[1552583689931,["KotlinD@DESKTOP-JV8VAO0",[[-1,16176,"N"]],[16177,16177],[16176,16176]]],[1552583690587,["KotlinD@DESKTOP-JV8VAO0",[[1,16176,"n"]],[16176,16176],[16177,16177]]],[1552583696153,["KotlinD@DESKTOP-JV8VAO0",[[1,16186,"最终"]],[16186,16186],[16188,16188]]],[1552583696219,["KotlinD@DESKTOP-JV8VAO0",[[1,16186," "]],[16188,16188],[16189,16189]]],[1552583706986,["KotlinD@DESKTOP-JV8VAO0",[[1,16189,"炼成一个InterceptorChain"]],[16189,16189],[16209,16209]]],[1552583707045,["KotlinD@DESKTOP-JV8VAO0",[[1,16193," "]],[16209,16209],[16210,16210]]],[1552583710309,["KotlinD@DESKTOP-JV8VAO0",[[1,16205,"。"]],[16205,16205],[16206,16206]]],[1552583710761,["KotlinD@DESKTOP-JV8VAO0",[[-1,16205,"。"]],[16206,16206],[16205,16205]]],[1552583711111,["KotlinD@DESKTOP-JV8VAO0",[[1,16205,"."]],[16205,16205],[16206,16206]]],[1552583715950,["KotlinD@DESKTOP-JV8VAO0",[[1,16211,",ze"]],[16211,16211],[16214,16214]]],[1552583716893,["KotlinD@DESKTOP-JV8VAO0",[[-1,16211,",ze"]],[16214,16214],[16211,16211]]],[1552583719187,["KotlinD@DESKTOP-JV8VAO0",[[1,16211,"责任链"]],[16211,16211],[16214,16214]]],[1552583719246,["KotlinD@DESKTOP-JV8VAO0",[[1,16211," "]],[16214,16214],[16215,16215]]],[1552583720994,["KotlinD@DESKTOP-JV8VAO0",[[1,16215,"模式"]],[16215,16215],[16217,16217]]],[1552583782009,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15671,"\n\n\n"],[1,15674,"转换为"],[-1,15682,"安"],[1,15683,"\n"],[1,16218,"安卓广"]],[15206,15206],[16221,16221]]],[1552583782009,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15671,"\n\n\n"],[-1,15671,"转换为"],[1,15682,"安"],[-1,15682,"\n"],[-1,16218,"安卓广"]],[16221,16221],[15206,15206]]],[1552583723627,["KotlinD@DESKTOP-JV8VAO0",[[1,16217,"实现，"]],[16217,16217],[16220,16220]]],[1552583725144,["KotlinD@DESKTOP-JV8VAO0",[[1,16221,"- \n"]],[16220,16220],[16223,16223]]],[1552583742104,["KotlinD@DESKTOP-JV8VAO0",[[1,16223,"StreamAllocation：用来控制COnnections"]],[16223,16223],[16255,16255]]],[1552583742162,["KotlinD@DESKTOP-JV8VAO0",[[1,16244," "]],[16255,16255],[16256,16256]]],[1552583743317,["KotlinD@DESKTOP-JV8VAO0",[[1,16256,"与"]],[16256,16256],[16257,16257]]],[1552583743375,["KotlinD@DESKTOP-JV8VAO0",[[1,16256," "]],[16257,16257],[16258,16258]]],[1552583747484,["KotlinD@DESKTOP-JV8VAO0",[[1,16258,"Streas"]],[16258,16258],[16264,16264]]],[1552583747543,["KotlinD@DESKTOP-JV8VAO0",[[1,16258," "]],[16264,16264],[16265,16265]]],[1552583750380,["KotlinD@DESKTOP-JV8VAO0",[[1,16265,"的"]],[16265,16265],[16266,16266]]],[1552583750439,["KotlinD@DESKTOP-JV8VAO0",[[1,16265," "]],[16266,16266],[16267,16267]]],[1552583758753,["KotlinD@DESKTOP-JV8VAO0",[[1,16267,"资源分配与释放"]],[16267,16267],[16274,16274]]],[1552583761696,["KotlinD@DESKTOP-JV8VAO0",[[-1,16246,"O"]],[16247,16247],[16246,16246]]],[1552583764961,["KotlinD@DESKTOP-JV8VAO0",[[1,16246,"o"]],[16246,16246],[16247,16247]]],[1552583767229,["KotlinD@DESKTOP-JV8VAO0",[[1,16275,"- \n"]],[16274,16274],[16277,16277]]],[1552583779888,["KotlinD@DESKTOP-JV8VAO0",[[1,16277,"RouteSelector："]],[16277,16277],[16291,16291]]],[1552583816775,[null,[[-1,15206,"毁"],[1,15207,"\n"],[-1,15671,"\n\n\n"],[1,15674,"转换为"],[-1,15682,"安"],[1,15683,"\n"],[1,16292,"安卓广"]],[15206,15206],[16295,16295]]],[1552583816775,[null,[[1,15206,"毁"],[-1,15206,"\n"],[1,15671,"\n\n\n"],[-1,15671,"转换为"],[1,15682,"安"],[-1,15682,"\n"],[-1,16292,"安卓广"]],[16295,16295],[15206,15206]]],[1552583790352,["KotlinD@DESKTOP-JV8VAO0",[[1,16291,"选择路线与自动重连"]],[16291,16291],[16300,16300]]],[1552583791077,["KotlinD@DESKTOP-JV8VAO0",[[1,16301,"- \n"]],[16300,16300],[16303,16303]]],[1552583798582,["KotlinD@DESKTOP-JV8VAO0",[[1,16303,"RouteDatabase:"]],[16303,16303],[16317,16317]]],[1552583799630,["KotlinD@DESKTOP-JV8VAO0",[[-1,16316,":"]],[16317,16317],[16316,16316]]],[1552583808439,["KotlinD@DESKTOP-JV8VAO0",[[1,16316,"：记录连接失败的Route"]],[16316,16316],[16329,16329]]],[1552583808497,["KotlinD@DESKTOP-JV8VAO0",[[1,16324," "]],[16329,16329],[16330,16330]]],[1552583813719,["KotlinD@DESKTOP-JV8VAO0",[[1,16330,"黑名单"]],[16330,16330],[16333,16333]]],[1552583813779,["KotlinD@DESKTOP-JV8VAO0",[[1,16330," "]],[16333,16333],[16334,16334]]],[1552583814027,["KotlinD@DESKTOP-JV8VAO0",[[1,16335,"- \n"]],[16334,16334],[16337,16337]]],[1552583816130,["KotlinD@DESKTOP-JV8VAO0",[[-1,16335,"- "]],[16337,16337],[16335,16335]]]],null,"KotlinD@DESKTOP-JV8VAO0"],["72c1e15c-e071-42c8-849d-93ef6ce90eed",1553009360616,"# **Java中的集合类有哪些。区别是什么，如何保证安全性。**\n## **Collection、Map:**\n- Collection ：List、Set，区别是 List 有序&可重复，而 Set 无序&不可重复。\n- Map 为key-value的对应关系，key不可以重复\n\n## **List**\n- List 接口是有序可重复的 Collection 接口实现，可以通过索引来访问 List 中的元素；\n- 实现类 LinkedList、ArrayList、Vector；\n\n### **LinkedList** \n- ==不是线程安全的==，可以使用 ==List list = Collections.synchronizedList(new LinkedList());== 保证线程安全\n- 有序、素可重复、允许 null\n- 提供了 get、remove、insert、方法在 LinedList 首部或尾部操作数据，所以可以作为：堆栈（stack）、队列（queue）、双向队列（deque）\n- 内部实现使用的是链表数据结构，元素之间使用指针引用关联\n\n### **ArrayList** \n- ==不是线程安全的==，可以使用 ==List list = Collections.synchronizedList(new LinkedList());== 保证线程安全\n- 有序、元素可重复、允许 null\n- 内部实现使用的是数组，初始容量为 10，扩容增长为原来的 1.5 倍，grow 方法中数据转移使用==Arrays.copyof(elementData,newCapacity)==\n\n### **Vector** \n- ==是线程安全的==，内部的操作方法都是用 synchronized 进行修饰来\n- 如果 Vector 创建的 Iterator 被使用的时候，另一个线程改变 Vector 状态，会抛出 ==ConcurrentModificationException== ，因此必须捕获这个异常。\n- 内部实现使用的是数组，初始默认容量为 10，扩容增长为原来的 2 倍，数据转移使用==Arrays.copyof(elementData,newCapacity)==\n\n### **使用场景：**\n- 当需要快速插入、删除元素，应该使用 LinkedList，如果需要快速随机访问元素，应该使用 ArrayList。\n- 如果是单个线程使用，需要效率更更高。使用 ArrayList\n- 如果是多线程同时操作，应该使用线程安全的类。LinkedList\n- 使用的时候尽量的使用接口类声明，例如：List。目的是考虑到以后业务变成，由ArrayList 替换成了LinkedList，减少代码的修改。\n\n### **总结 ArrayList & LinkedList**\n- ArrayList 是基于动态数组的数据结构，LinkedList是基于链表的数据结构；\n- 随机访问数据，get和set，ArrayList更优于 LinkedList ，因为 LinkedList 是链表结构，需要移动指针，效率更低；\n- 对于新增和删除操作：\n    - 如果只是对单条数据插入或删除，ArrayList 速度更快些。\n    - 如果是批量随机的插入或删除数据，LinkedList 速度更快些。\n    - 原因是 ArrayList 每插入一条数据就要移动插入点及后面的所有数据，效率更低，而 LinkedList 只需要替换插入点的前后指针引用即可完成操作；\n\n### **总结 Vector 和 ArrayList**\n- Vector 是线程同步的，所以是线程安全的，而 ArrayList 是线程异步的，不是线程安全的。通过源码看到，Vector 在操作的方法前使用 synchronized 进行同步操作\n- 默认情况下，在进行添加元素操作的时候，如果元素数目大于当前的集合数组的长度时，Vector 增长率为目前数组的 100% ，而 ArrayList 为 50%，同时 Vector 在创建时支持指定增长容量\n- 如果查找一个指定位置的数据， Vector 和 ArrayList 的使用时间是相同的O(1)。但移动一个指定未知的数据使用的时间是 O(n-1),n为总长度，这个时候就会考虑使用 LinkedList ，因为它使用的时间为O(1),而查询指定位置数据使用的时间为O(i)\n- ArrayList 和 Vector 都是采用数组的方式进行存储的，且数组元素数量大于实际存储的数据，以便增加或插入，可以直接通过索引访问元素。\n- Vector 由于使用了 synchronized 方法所以性能上会比 ArrayList 差一些，LinkedList 使用的是双链表实现的存储，按照序号索引数据可以进行向前或向后遍历，但是插入数据时只需要记录当前元素的前后项即可，所以插入速度更快些。\n\n## **Set**\n- Set 接口是无序不可重复 Collection 接口实现，\n- 实现类有，HashSet、TreeSet\n\n### **HashSet** \n- ==不是线程安全的==，可以使用 ==Set set = Collections.synchronizedSet(new HashSet());== 保证线程安全\n- 无序、不可重复、可以存储 null\n- 通过哈希算法实现防止重复\n- 存放元素使用 key-value 形式\n- 基于 HashMap 实现的\n\n### **TreeSet** \n- ==不是线程安全的==，可以使用 ==Set set = Collections.synchronizedSet(new TreeSet());== 保证线程安全\n- 有序、不可重复、不可存储 null\n- 与 HashSet 相比较，多了排序算法，默认使用元素的自然数序，也可以根据创建 set 时设置的 Comparator 进行排序。\n- 是基于 TreeMap 的 NavigableSet 实现的。底层数据结构是二叉树。\n\n## **Map**\n- key-value 形式存在，key不能重复。\n- 实现类有，HashMap、TreeMap、LinkedHashMap、Hashtable\n\n### **HashMap** \n- ==不是线程安全的==，可以使用 ==Map map = Collections.synchronizedMap(new HashMap());== 保证线程安全\n- 无序、key 不可重复（会覆盖）、可以存储一条 key 为 null 的数据\n- 内部使用 Node 数组+链表+红黑树的数据结构实现的，默认数量为 16 的数组，扩容时，容量*载入因子(默认 0.75)，扩大后的新空间一定是原来的 2 倍，这也导致比较消耗内存，所以 Android 中做了优化，使用 [SparseArray](#sparsearray)\n- 如果 key 是自定义类，需要实现 hashCode() 和 equals() 方法\n\n### **Hashtable** \n- ==是线程安全的==，操作方法使用 ==synchronized== 进行了修饰\n- 继承自 Dictionary\n- ==key 或 value 不能为 null==\n- 无序、key 不可重复（会覆盖）\n- 内部使用 Node 数组+链表+红黑树的数据结构实现的\n- 如果 key 是自定义类，需要实现 hashCode() 和 equals() 方法\n\n### **LinkedHashMap** \n- ==不是线程安全的==，可以使用 ==Map map = Collections.synchronizedMap(new HashMap());== 保证线程安全\n- key 不可重复（会覆盖）、可以存储一条 key 为 null 的数据\n- 内部使用 Node 数组+链表+红黑树的数据结构实现的\n- 如果 key 是自定义类，需要实现 hashCode() 和 equals() 方法\n- 有序的，记录了插入数据的顺序，使用 Iterator 遍历时先得到的记录是先插入的，所以查询速度比 HashMap 慢\n\n### **TreeMap** \n- ==不是线程安全的==\n- key 不可以重复（会覆盖）、不可以存储 key 为 null 的数据\n- 实现了 SortMap 接口，默认是按键升序排列\n- 存入的数据需要实现  ==Comparator== 接口或者 ==Comparable== 接口，会按照排序后的顺序迭代，所以两个要比较的 kye 不能抛出 ClassCaseException。\n- 基于红黑二叉树的NavigableMap的实现\n\n### **ConcurrentHashMap** \n- 使用锁分离思想，只锁住一个node，而锁住的Node之前的操作是基于在 volatile 和 CAS算法 之上无锁并且线程安全的；\n- CAS 是一种算法，基本思想就是不断的去比较当前内存中的变量值与指定的一个变量值是否相等，如果相等则接受，否则拒绝。\n\n### **总结**\n- 当在Map中插入、删除、定位元素，HashMap 速度比较快，因为是无序的，通过 HashCode 定位；\n- 如果需要自然然排序或自定义排序，TreeMap 是最好的选择，因为它实现了 SortMap 默认按照key升序排序；\n- 如果需要输出数据与输入时候相同，LinkedHashMap 是比较好的选择。\n\n# **Android的集合类有哪些？【性能优化】**\n\n## **ArrayMap**\n- 不是线程安全的\n- 基于两个数组，int[] mHashes; Object[] mArray;目的减少内存占用\n- 使用方式跟 HashMap 一样，实现 Map 接口\n- key-value 存储数据\n- 数据量小时可以用，数据量增大性能会下降 50%左右\n\n## **SparseArray**\n- 不是线程安全的\n- 基于两个数组，int[] mKeys; Object[] mValue;目的减少内存占用，默认初始容量为 10，\n- 用来代替 java 中的 HashMap<Integer,E>\n- 节省内存，使用 key-value 存储\n- 存储和读取数据使用的时二分查找法\n- 数据量不大，在千级以内\n- key 必须为 int 类型\n\n# **Java 中的线程池 Executor** \n\n## **为什么使用线程池？**\n- 因为频繁地为每一个任务创建一个线程，缺乏统一管理，降低性能，并且容易出现问题。\n- 线程池可以对多个线程统一管理 ，避免资源竞争出现问题；\n- 线程池对线程进行复用，线程执行完任务后不会立刻销毁，而会等待另外的任务，这样可以减少创建、销毁、以及GC调用。\n- 线程的创建和销毁由线程池维护，一个线程执行完成之后不会立即销毁，而是由后续的任务复用这个线程，从而减少线程的创建和销毁，节约系统的开销\n- 在执行大量异步任务的时候提高性能\n- Java 提供了 ExecutorService 线程池的 API，可以创建多种功能不一样的线程池，使用方便。\n\n\n\n## **如果超出了线程池最大数（maximumPoolSize）会发什么？**\n-  如果线程池中的线程超过了这个数值，则拒绝执行该任务，并抛出异常 ==RejectedExecutionException== \n\n## 常见的线程池有哪些？ 线程池关键参数？\n### **1、ThreadPoolExecutor 基本线程**\n使用这个类创建线程池，构造方法参数如下\n```java\npublic ThreadPoolExecutor(\n              int corePoolSize,    // 核心线程数,允许同时执行任务的最大线程数\n              int maximumPoolSize, // 最大线程数，允许同时处理任务的最大线程数\n              long keepAliveTime,  // 超出核心线程数的空闲线程的最大存活时间\n              TimeUnit unit,       // 空闲线程存活时间单位\n              BlockingQueue<Runnable> workQueue, // 阻塞任务队列，存储待执行的任务\n              ThreadFactory threadFactory, // 线程工厂，用于创建线程，可指定线程命名规则\n              RejectedExecutionHandler handler // 饱和策略(拒绝策略），当线程池阻塞队列已满时对新任务的处理\n        ) {\n        ...\n    }\n```\n- corePoolSize：核心线程的数量，在创建了线程池之后，默认情况下，线程池中并没有任何线程，而是等待有任务到来时才创建线程去执行任务，当线程池中的线程数目达到 corePoolSize 之后，就会把达到的任务放到缓存队列 BlockingQuequ 中，只有当工作队列满了的情况下才会创建超出这个数量的线程。如果某个线程的空闲时间超过了活动时间，那么将标记为可回收，并且只有当线程吃的当前大小超过，corePoolSize 时该线程才会被终止。用户可以调用 ==prestarAllCoreThreads()== 或者 ==prestartCoreThread()==方法预先创建线程，即在没有任务到来之前就创建 corePoolSize 个线程或者一个线程。\n- maximumPoolSize：线程池最大线程数，这个数大于等于 corePoolSize 否则会抛出 ==IllegalArgumentException==，它表示在线程池中最多能创建多少线程，当大于这个值就会拒绝任务，并抛出 ==RejectedExcutionException==\n- keepAliveTime：表示线程没有任务执行时最多保持多久时间会终止。默认情况下，只有当线程池中的线程数大于 corePoolSize 时，keepAliveTime 才会起作用，直到线程池中的线程数不大于 corePoolSize，如果调用了 allowCoreThreadTimeOutA(true)方法，在线程池中的线程数不大于 corePoolSize 时，keepAliceTime 参数也会起作用，直到线程池中的线程数为 0\n- unit：keepAliveTime 的时间单位\n- workQueue：一个阻塞队列，用来存储等待执行的任务，当线程池中的线程数目达到 corePoolSize 后，就会把到达的任务放到任务缓存队列中\n- threadFactory：线程工厂，主要用来创建线程\n- handler：处理拒绝处理任务时的策略，也就是参数 maximumPoolSize 达到后丢弃处理的方法:\n  - ThreadPoolExecutor.AbortPolicy:丢弃任务并抛出 RejectedExecutionException 异常\n  - ThreadPoolExecutor.DiscardPolicy:丢弃任务，不抛异常\n  - ThreadPoolExecutor.DiscardOldestPolicy:丢弃任务队列最前面的任务，然后重新尝试执行任务（重复此过程）\n  - ThreadPoolExecutor.CallerRunsPolicy:由调用线程处理该任务\n  - 也可以实现接口 RejectedExecutionHandler 定制自己的策略\n\n### **2、FixedThreadPool 可重用固定线程数**\n- Executors 中的创建方法\n- 特点：参数为核心线程数，只有核心线程，没有非核心线程，并且阻塞队列没有边界限制\n```java\n public static ExecutorService newFixedThreadPool(int nThreads, ThreadFactory threadFactory) {\n        return new ThreadPoolExecutor(nThreads, nThreads,\n                                      0L, TimeUnit.MILLISECONDS,\n                                      new LinkedBlockingQueue<Runnable>(),\n                                      threadFactory);\n    }\n```\n\n#### **3、CachedThreadPool 按需创建**\n- Executors 中的创建方法\n- 特点：没有核心线程，只有非核心线程，并且每个非核心线程空闲等待的时间为60秒，采用SynchronousQueue队列；\n- 由于没有设置最大线程数限制，如果提交速度大于执行速度，则会一直创建新的线程，需要注意，应该采取措施调整两边的速度，因为太多的线程会影响性能；\n\n```java\npublic static ExecutorService newCachedThreadPool() {\n        return new ThreadPoolExecutor(0, Integer.MAX_VALUE,\n                                      60L, TimeUnit.SECONDS,\n                                      new SynchronousQueue<Runnable>());\n    }\n```\n\n# **能否使用 Applaction 启动一个 Activity ？**\n- 可以在 Application 启动 Activity，但是需要注意的是，如果原来的任务栈已经销毁会抛出错误 ，需要判断添加标志，开启新的任务栈 ==addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)==\n- 因为都是继承实现 ==ContextWrapper==\n\n# **App 间通讯的方式有哪些？有什么区别？**\n- 数据访问: ContentProvicer、文件共享、网络共享、本地数据库、sp\n- 消息传递：AIDL、BroadcastReceiver、Messenger\n## **ContentProvider**\n- 将数据操作进行封装，提供标准 URI 进行操作\n- 存储形式可以为：SQLite、xml、文件或网络等\n- ContentProvider 共享数据\n- ContentResolver 操作数据\n\n## **BroadcastReceiver**\n- 广播接收者 BroadcastReceiver 通过 Binder 机制向 AMS(AcvitityManagerService)进行注册\n- 广播发送者通过 Binder 机制向 AMS 发送广播\n- AMS 查找符合相应条件的（IntentFilter|Permission）的 BroadcastReceiver，将广播发送到 BroadcastReceiver 相应的消息队列中\n- 消息队列拿到此广播，回调 BroadcastReceiver 中的 onReceive(Context，Intent) 方法，Intent 中会携带消息\n\n## **AIDL**\n- 不是线程安全的，支持多线程处理\n### **服务端**\n- 定义 AIDL 文件，生成 java 文件\n```java\ninterface MyAIDL {  \n  int plus(int a, int b);  \n}\n```\n- 定义服务类，AIDL 就是用来在多个 APP 之间访问同一个 Service 的，在这个服务类中定义对于你个的 stub 对象，在该 stub 对象中实现，上述的 AIDL 文件定义的抽象方法，在服务的 onBind(Intent)中返回 stub 对象。AndroidManifest.xml 配置相关属性。\n```java\npublic class MyService extends Service {  \n  ......  \n  @Override  \n  public IBinder onBind(Intent intent) { \n    //在onBind中返回该stub对象   \n    return mBinder;\n  }  \n\n  //在服务类中定义对应的stub对象，实现aidl中定义的抽象方法  \n  DemoAIDL.Stub mBinder = new Stub() {\n    @Override  \n    public int plus(int a, int b) throws RemoteException {  \n      return a + b;  \n    }  \n  };  \n}\n```\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.example.servicetest\"\n    android:versionCode=\"1\"\n    android:versionName=\"1.0\" >\n    ......\n\n    <service\n        android:name=\"com.example.servicetest.MyService\"\n        android:process=\":remote\" >\n        <intent-filter>\n            //注意action的android:name属性，该属性在客户端bindService中将会用到\n            <action android:name=\"com.example.servicetest.MyAIDLService\"/>\n        </intent-filter>\n    </service>\n```\n\n### **客户端**\n- 把服务端的 aidl 文件拷贝到相应的目录中，IDE 会生成 java 文件，这个是和服务端相同的，这样服务端和客户端通信协议上保证了一致\n- 在客户端的 Activity 与 Service 通信，在客户端 Activity 中定义 ServiceConnection 类，复写 onServiceConnected(ComponentName name,IBinder service)方法，通过 XX.Stub.asInterface(service);获取定义的 AIDL 文件生成的 java 类 ，使用 bindeService(intent,conn,Context.BIND_AUTO_CREATE);绑定远程服务，注意此时的 intent 需要指定为在服务端创建的 service 的 name 属性【==com.example.servicetest.MyAIDLService==】。\n```java\npublic class MainActivity extends Activity implements OnClickListener {\n\t...\n\tprivate MyAIDL myAIDL;\n\n\tprivate ServiceConnection connection = new ServiceConnection() {\n\n\t\t@Override\n\t\tpublic void onServiceDisconnected(ComponentName name) {\n\t\t}\n\n\t\t@Override\n\t\tpublic void onServiceConnected(ComponentName name, IBinder service) {\n\t\t    //在onServiceConnected中将IBinder转换为aidl对应的java类\n\t\t\tmyAIDL = MyAIDL.Stub.asInterface(service);\n\t\t\ttry {\n\t\t\t\tint result = myAIDL.plus(3, 5);\n\t\t\t\tLog.d(\"TAG\", \"result is \" + result);\n\t\t\t} catch (RemoteException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t};\n\t\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        \n        Button bindService = (Button) findViewById(R.id.bind_service);\n        \n        bindService.setOnClickListener(new OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            //intent指定为我们在服务端创建的service的intent-filter中action的android:name属性。\n            Intent intent = new Intent(\"com.example.servicetest.MyAIDLService\");\n            bindService(intent, connection, BIND_AUTO_CREATE);\n          }\n      });\n    }\n}\n```\n\n## **Messager**\n- 实现 IPC 通信，底层使用的也是 AIDL 方式\n- 不同点，Messager 利用了 Handler 形式处理，因此是线程安全的\n- 不支持多线程处理\n\n### **使用步骤**\n- 客户端绑定服务点，在 ServiceConnection 类的 onServiceConnection 方法中将远程服务穿过来的 binder 对象转换为 Messager 对象，调用 Messager 的 send 函数，将 Message 发送至服务点的 Handler，同时，需要服务端回调客户端（向 Handler 发消息），则可以在 send 的 Message 中设置 replyTo，服务端就可以向客户端发消息。\n- 服务端通过 Message 的 replyTo 取出客户端传递过来的 Messager，这样就可以通过该 Messager 与客户端通信。\n- 服务端通过 Messager 的 getBinder 方法将 IBinder 对象返给客户端，用于共享服务端的 Messager。\n\n### **客户端代码**\n```java\npublic class MainActivity extends Activity {\n  \n    protected static final String TAG = \"MainActivity\";\n    Messenger messenger;\n    Messenger reply;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        reply = new Messenger(handler);\n        Intent intent = new Intent(\"<span style=\"line-height: 25.2px; font-family: Verdana, Arial, Helvetica, sans-serif;\">test.messenger.MessengerTestService</span><span style=\"line-height: 25.2px; font-family: Verdana, Arial, Helvetica, sans-serif;\">\");</span>\n        // 绑定服务\n        bindService(intent, new ServiceConnection() {\n            @Override\n            public void onServiceDisconnected(ComponentName name) {\n            }\n            @Override\n            public void onServiceConnected(ComponentName name, IBinder service) {\n                Toast.makeText(MainActivity.this, \"bind success\", 0).show();\n                messenger = new Messenger(service);//将远程服务端中返回的IBinder对象转换为Messenger对象\n            }\n        }, Context.BIND_AUTO_CREATE);      \n    }\n    public void sendMessage(View v) {\n        Message msg = Message.obtain(null, 1);\n        // 设置回调用的Messenger\n        msg.replyTo = reply;//<span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;font-size:12px; line-height: 25.2px;\">如果需要服务端回调客户端，<span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;font-size:12px; line-height: 25.2px;\">则可以在send的Message中设置replyTo，将客户端的Messenger传递给服务端</span></span>\n        try {\n            messenger.send(msg);\n        } catch (RemoteException e) {\n            e.printStackTrace();\n        }\n    }\n    private Handler handler = new Handler() {//回调Messenger处理的Handler\n        @Override\n        public void handleMessage(Message msg) {\n            Log.d(TAG, \"回调成功\");\n        }\n    };\n}\n\n```\n\n### **服务端代码**\n```java\npublic class MessengerTestService extends Service {\n    protected static final String TAG = \"MessengerTestService\";\n    private Handler mHandler = new Handler() {\n        @Override\n        public void handleMessage(Message msg) {\n            switch (msg.what) {\n            case 1:\n                Log.d(TAG, \"收到消息\");\n                 //获取客户端message中的Messenger，用于回调\n                final Messenger callback = msg.replyTo;\n                try {\n                    // 回调\n                    callback.send(Message.obtain(null, 0));\n                } catch (RemoteException e) {\n                    // TODO Auto-generated catch block\n                    e.printStackTrace();\n                }\n                break;\n            }\n        }\n    };\n    @Override\n    public IBinder onBind(Intent intent) {\n        return new Messenger(mHandler).getBinder();//在onBind（Intent intent）方法中返回Messenger对应的binder对象。\n    }\n}\n```\n- 可以看到该方式与用AIDL方式整体大的框架基本相同，都是在远程服务端的Service中的onBind(Intent intent)中返回Ibinder对象，在客户端的ServiceConnection类的onServiceConnectioned（ComponentName name, IBinder service）中奖Ibinder转换为对应的对象，在AIDL中通过xxx.Stub.asInterface(service);转换为对应的aidl的java类，在Messenger中通过messenger = new Messenger(service);转换为Messenger对象，然后利用这个对象就可相互通信。\n\n# Java 中的 Lock 与 synchronized\n\n\n# App 启动流程\n- 点击桌面应用图标，Launcher 进程将启动 Activity 的请求以 Binder 的方式发送给 AMS\n- AMS 接收到启动请求后，交付 ActivityStarter 处理 Intent 和 Flag 等信息，然后再交给 ActivityStackSupervisior | ActivityStack 处理 Activity 进行栈相关的流程。同时以 Socket 方式请求 Zygote 进程，fork 新的进程\n- Zygote 接收到新进程创建请求后 fork 出新进程\n- 在新进程里创建 ActivityThread 对象，新创建的进程就是应用的主线程，在主线程里开启 Looper 消息循环，开始处理创建 Activity\n- ActivityThread 利用 ClassLoader 去加载 Activity、创建 Activity 实例，并回调 Activity 的 onCreate()方法，这样便完成了 Activity 的启动（performLaunchActivity 方法，Instrumentation.newActivity）\n\n# 应用程序安装到手机上的过程\n- 安装 APK-->拷贝 APK-->/data/app/pkg-->资源管理器加载资源-->机械 AndroidManifes.xml-->/data/data/pkg-->dexopt-->注册四大组件-->安装完毕发送广播\n- 复制 Apk 到/data/app 目录下，解压并扫描安装包\n- 资源管理器解析 Apk 里的资源文件\n- 解析 AndroidManifest 文件，并在/data/data 目录下创建对应的应用数据目录\n- 然后对 dex 文件进行优化，并保存在 dalvik-cache 目录下\n- 将 AndroidManifest 文件解析出的自打组建信息注册到 PackageManagerService 中\n- 安装完成，发送广播\n\n# OkHttp 实现原理\n- 网络配置层：利用 Builder 模式配置各充参数，例如：超时时间、拦截器等\n- 重定向层：负责重定向\n- Header 拼接层：负责把用户构造的请求转换为发送给服务器的请求，把服务器放回的相应转换为对用户友好的响应\n- HTTP 缓存层：负责读取缓存以及更新缓存\n- 连接层：实现网络协议、内部的拦截器、安全性认证、连接与连接池等\n- 数据相应层：负责从服务器读取响应的数据\n\n### Okhttp 中关键的类\n- OkHttpClient：通信的客户端，用来统一管理发起请求与解析相应；\n- Call：是一个接口，她是 Http 请求的抽象描述，具体实现是 RealCall 它由 CallFactory 创建。\n- Request：请求，封装请求的具体信息，例如:url、header 等\n- RequestBody：请求体、用来提交流、表等请求信息\n- Response：HTTP 请求的响应，获取响应信息，例如：响应 header 等\n- ==ResponseBody==：HTTP 请求的响应体，==被读取一次以后就会关闭==，所以我们重复调用 responseBody.string()获取请求结果会报错\n- Interceptor：Interceptor 是请求拦截器，负责拦截并处理请求，它将网络请求、缓存、透明压缩等功能都统一起来，每个功能都是一个 Interceptor，所有的 Interceptor 最终炼成一个 Interceptor.Chain 责任链模式实现，\n- StreamAllocation：用来控制 Connections 与 Streas 的资源分配与释放\n- RouteSelector：选择路线与自动重连\n- RouteDatabase：记录连接失败的 Route 黑名单\n\n安卓广播机制有哪些，区别是什么。\n\n做过哪些安卓性能优化？\n\n如何检测应用卡顿，如何优化？\n\n造成安卓oom的原因有哪些？如何处理。\n\nRxJava的实现机制，如何处理背压。\n\nRetureFate实现原理\n\n对现在存在的Glide还有哪些优化方案？\n\n安卓中的内存泄漏如何解决，为什么会造成内存泄漏？\n\n如何检测内存泄漏？\n\n点击桌面应用图标之后发什么什么，回调了哪些方法。\n\njava中的lock相关。\n\nActivity  与 Fragment 相关生命周期对照\n\n能不能试用Applaction启动一个Activity为什么不能？\n\nAMS，PMS，WMS\n\n文件存储，分别使用的场景，SP是线程安全的么？是进程安全的么？如何保证安全性",[[1553009357966,["KotlinD@DESKTOP-JV8VAO0",[[1,16336,"##"]],[16336,16336],[16338,16338]]],[1553009358903,["KotlinD@DESKTOP-JV8VAO0",[[-1,16337,"#"]],[16338,16338],[16337,16337]]],[1553009359034,["KotlinD@DESKTOP-JV8VAO0",[[1,16337," "]],[16337,16337],[16338,16338]]],[1553009830108,["KotlinD@DESKTOP-JV8VAO0",[[1,16356,"\n"]],[16355,16355],[16356,16356]]],[1553009831587,["KotlinD@DESKTOP-JV8VAO0",[[1,16357,"\n"]],[16355,16355],[16356,16356]]],[1553009840201,["KotlinD@DESKTOP-JV8VAO0",[[1,16355,"- "]],[16355,16355],[16357,16357]]],[1553010250842,["KotlinD@DESKTOP-JV8VAO0",[[1,16357,"No"]],[16357,16357],[16359,16359]]],[1553010251879,["KotlinD@DESKTOP-JV8VAO0",[[-1,16357,"No"]],[16359,16359],[16357,16357]]],[1553010259265,["KotlinD@DESKTOP-JV8VAO0",[[1,16357,"Normal Broadcast:"]],[16357,16357],[16374,16374]]],[1553010260200,["KotlinD@DESKTOP-JV8VAO0",[[-1,16373,":"]],[16374,16374],[16373,16373]]],[1553010262153,["KotlinD@DESKTOP-JV8VAO0",[[1,16373,":pu"]],[16373,16373],[16376,16376]]],[1553010263074,["KotlinD@DESKTOP-JV8VAO0",[[-1,16373,":pu"]],[16376,16376],[16373,16373]]],[1553010265163,["KotlinD@DESKTOP-JV8VAO0",[[1,16373,":p["]],[16373,16373],[16376,16376]]],[1553010266026,["KotlinD@DESKTOP-JV8VAO0",[[-1,16374,"p["]],[16376,16376],[16374,16374]]],[1553010269455,["KotlinD@DESKTOP-JV8VAO0",[[1,16374,"普通广播"]],[16374,16374],[16378,16378]]],[1553010271972,["KotlinD@DESKTOP-JV8VAO0",[[1,16379,"- \n"]],[16378,16378],[16381,16381]]],[1553010281868,["KotlinD@DESKTOP-JV8VAO0",[[1,16381,"System Broadcast："]],[16381,16381],[16398,16398]]],[1553010284350,["KotlinD@DESKTOP-JV8VAO0",[[-1,16373,":"]],[16374,16374],[16373,16373]]],[1553010284653,["KotlinD@DESKTOP-JV8VAO0",[[1,16373,"："]],[16373,16373],[16374,16374]]],[1553010290498,["KotlinD@DESKTOP-JV8VAO0",[[1,16398,"系统广播"]],[16398,16398],[16402,16402]]],[1553010290600,["KotlinD@DESKTOP-JV8VAO0",[[1,16403,"- \n"]],[16402,16402],[16405,16405]]],[1553010304761,["KotlinD@DESKTOP-JV8VAO0",[[1,16405,"Ordered BroadcastL"]],[16405,16405],[16423,16423]]],[1553010304914,["KotlinD@DESKTOP-JV8VAO0",[[-1,16422,"L"]],[16423,16423],[16422,16422]]],[1553010307222,["KotlinD@DESKTOP-JV8VAO0",[[1,16422,"：“："]],[16422,16422],[16425,16425]]],[1553010307345,["KotlinD@DESKTOP-JV8VAO0",[[-1,16423,"“："],[1,16425,"『"]],[16425,16425],[16424,16424]]],[1553010307926,["KotlinD@DESKTOP-JV8VAO0",[[-1,16423,"『"]],[16424,16424],[16423,16423]]],[1553010331174,["KotlinD@DESKTOP-JV8VAO0",[[1,16423,"有序广播"]],[16423,16423],[16427,16427]]],[1553010331341,["KotlinD@DESKTOP-JV8VAO0",[[1,16428,"- \n"]],[16427,16427],[16430,16430]]],[1553010344938,["KotlinD@DESKTOP-JV8VAO0",[[1,16430,"Sticky Broadcast："]],[16430,16430],[16447,16447]]],[1553010382933,["KotlinD@DESKTOP-JV8VAO0",[[1,16447,"粘性广播"]],[16447,16447],[16451,16451]]],[1553010383360,["KotlinD@DESKTOP-JV8VAO0",[[1,16452,"- \n"]],[16451,16451],[16454,16454]]],[1553010403002,["KotlinD@DESKTOP-JV8VAO0",[[1,16454,"Local Broadcast：App应用"]],[16454,16454],[16475,16475]]],[1553010403061,["KotlinD@DESKTOP-JV8VAO0",[[1,16473," "]],[16475,16475],[16476,16476]]],[1553010405510,["KotlinD@DESKTOP-JV8VAO0",[[1,16476,"内广播"]],[16476,16476],[16479,16479]]],[1553010407356,["KotlinD@DESKTOP-JV8VAO0",[[1,16480,"- \n"]],[16479,16479],[16482,16482]]],[1553010419944,["KotlinD@DESKTOP-JV8VAO0",[[-1,16480,"- "]],[16482,16482],[16480,16480]]],[1553010420586,["KotlinD@DESKTOP-JV8VAO0",[[-1,16482,"\n"]],[16480,16480],[16479,16479]]],[1553010548612,["KotlinD@DESKTOP-JV8VAO0",[[1,16381,"\n- "]],[16378,16378],[16381,16381]]],[1553010549047,["KotlinD@DESKTOP-JV8VAO0",[[1,16379,"  "]],[16381,16381],[16383,16383]]],[1553010592778,["KotlinD@DESKTOP-JV8VAO0",[[1,16383,"普通广播会被注册 "]],[16383,16383],[16392,16392]]],[1553010593294,["KotlinD@DESKTOP-JV8VAO0",[[-1,16391," "]],[16392,16392],[16391,16391]]],[1553010599934,["KotlinD@DESKTOP-JV8VAO0",[[1,16391,"了响应的intent"]],[16391,16391],[16401,16401]]],[1553010599992,["KotlinD@DESKTOP-JV8VAO0",[[1,16395," "]],[16401,16401],[16402,16402]]],[1553010605542,["KotlinD@DESKTOP-JV8VAO0",[[1,16402,"-filter的"]],[16402,16402],[16410,16410]]],[1553010605601,["KotlinD@DESKTOP-JV8VAO0",[[1,16409," "]],[16410,16410],[16411,16411]]],[1553010606294,["KotlinD@DESKTOP-JV8VAO0",[[-1,16410,"的"]],[16411,16411],[16410,16410]]],[1553010607818,["KotlinD@DESKTOP-JV8VAO0",[[1,16410,"接受，"]],[16410,16410],[16413,16413]]],[1553010608698,["KotlinD@DESKTOP-JV8VAO0",[[-1,16410,"接受，"]],[16413,16413],[16410,16410]]],[1553010610736,["KotlinD@DESKTOP-JV8VAO0",[[1,16410,"接受"]],[16410,16410],[16412,16412]]],[1553010611127,["KotlinD@DESKTOP-JV8VAO0",[[-1,16410,"接受"]],[16412,16412],[16410,16410]]],[1553010622532,["KotlinD@DESKTOP-JV8VAO0",[[1,16410,"接收，且顺序是无序的，"]],[16410,16410],[16421,16421]]],[1553010637150,["KotlinD@DESKTOP-JV8VAO0",[[1,16421,"如果发送股概念"]],[16421,16421],[16428,16428]]],[1553010637891,["KotlinD@DESKTOP-JV8VAO0",[[-1,16425,"股概念"]],[16428,16428],[16425,16425]]],[1553010642747,["KotlinD@DESKTOP-JV8VAO0",[[1,16425,"广播时需要"]],[16425,16425],[16430,16430]]],[1553010645625,["KotlinD@DESKTOP-JV8VAO0",[[-1,16428,"需要"]],[16430,16430],[16428,16428]]],[1553010683071,["KotlinD@DESKTOP-JV8VAO0",[[1,16428,"有相应的权限要求，BroadCastReceiver如果"]],[16428,16428],[16456,16456]]],[1553010683133,["KotlinD@DESKTOP-JV8VAO0",[[1,16454," "]],[16456,16456],[16457,16457]]],[1553010698781,["KotlinD@DESKTOP-JV8VAO0",[[1,16457,"要接收次广播也需要有响应的权限。"]],[16457,16457],[16473,16473]]],[1553010700643,["KotlinD@DESKTOP-JV8VAO0",[[1,16500,"\n- "]],[16497,16497],[16500,16500]]],[1553010701142,["KotlinD@DESKTOP-JV8VAO0",[[1,16498,"  "]],[16500,16500],[16502,16502]]],[1553010759326,["KotlinD@DESKTOP-JV8VAO0",[[1,16502,"只要涉及到"]],[16502,16502],[16507,16507]]],[1553010764255,["KotlinD@DESKTOP-JV8VAO0",[[1,16507,"手机操作的"]],[16507,16507],[16512,16512]]],[1553010768528,["KotlinD@DESKTOP-JV8VAO0",[[-1,16509,"操作的"]],[16512,16512],[16509,16509]]],[1553010810727,["KotlinD@DESKTOP-JV8VAO0",[[1,16509,"的基本操作，基本上都会发出响应的系统广播，每个系统广播具有特定的intent"]],[16509,16509],[16547,16547]]],[1553010810785,["KotlinD@DESKTOP-JV8VAO0",[[1,16541," "]],[16547,16547],[16548,16548]]],[1553010818420,["KotlinD@DESKTOP-JV8VAO0",[[1,16548,"-filter，启动"]],[16548,16548],[16558,16558]]],[1553010819101,["KotlinD@DESKTOP-JV8VAO0",[[-1,16555,"，启动"]],[16558,16558],[16555,16555]]],[1553010821831,["KotlinD@DESKTOP-JV8VAO0",[[1,16555,"，其中"]],[16555,16555],[16558,16558]]],[1553010824178,["KotlinD@DESKTOP-JV8VAO0",[[1,16558,"珠宝"]],[16558,16558],[16560,16560]]],[1553010824639,["KotlinD@DESKTOP-JV8VAO0",[[-1,16558,"珠宝"]],[16560,16560],[16558,16558]]],[1553010832642,["KotlinD@DESKTOP-JV8VAO0",[[1,16558,"主要包括具体的action"]],[16558,16558],[16571,16571]]],[1553010832700,["KotlinD@DESKTOP-JV8VAO0",[[1,16565," "]],[16571,16571],[16572,16572]]],[1553010851798,["KotlinD@DESKTOP-JV8VAO0",[[1,16572,"，系统广播发出后，将被响应的BroadcastReceiver"]],[16572,16572],[16603,16603]]],[1553010851856,["KotlinD@DESKTOP-JV8VAO0",[[1,16586," "]],[16603,16603],[16604,16604]]],[1553010853594,["KotlinD@DESKTOP-JV8VAO0",[[1,16604,"接收"]],[16604,16604],[16606,16606]]],[1553010853652,["KotlinD@DESKTOP-JV8VAO0",[[1,16604," "]],[16606,16606],[16607,16607]]],[1553010857642,["KotlinD@DESKTOP-JV8VAO0",[[1,16607,"，系统光"]],[16607,16607],[16611,16611]]],[1553010858796,["KotlinD@DESKTOP-JV8VAO0",[[-1,16608,"系统光"]],[16611,16611],[16608,16608]]],[1553010879669,["KotlinD@DESKTOP-JV8VAO0",[[1,16608,"系统广播在系统内部当特定事件发生时，由系统"]],[16608,16608],[16629,16629]]],[1553010881983,["KotlinD@DESKTOP-JV8VAO0",[[-1,16627,"系统"]],[16629,16629],[16627,16627]]],[1553010885493,["KotlinD@DESKTOP-JV8VAO0",[[1,16627,"系统发出、"]],[16627,16627],[16632,16632]]],[1553010886111,["KotlinD@DESKTOP-JV8VAO0",[[-1,16631,"、"]],[16632,16632],[16631,16631]]],[1553010886428,["KotlinD@DESKTOP-JV8VAO0",[[1,16631,"。"]],[16631,16631],[16632,16632]]],[1553010888422,["KotlinD@DESKTOP-JV8VAO0",[[1,16660,"\n- "]],[16657,16657],[16660,16660]]],[1553010888933,["KotlinD@DESKTOP-JV8VAO0",[[1,16658,"  "]],[16660,16660],[16662,16662]]],[1553010913998,["KotlinD@DESKTOP-JV8VAO0",[[1,16662,"有序广播的有序针对的接收者而言"]],[16662,16662],[16677,16677]]],[1553011063341,["KotlinD@DESKTOP-JV8VAO0",[[1,16677,"，指定的是发送出去的广播倍"]],[16677,16677],[16690,16690]]],[1553011063646,["KotlinD@DESKTOP-JV8VAO0",[[-1,16689,"倍"]],[16690,16690],[16689,16689]]],[1553011073268,["KotlinD@DESKTOP-JV8VAO0",[[1,16689,"被BroadcastReceiver"]],[16689,16689],[16707,16707]]],[1553011073326,["KotlinD@DESKTOP-JV8VAO0",[[1,16690," "]],[16707,16707],[16708,16708]]],[1553011076149,["KotlinD@DESKTOP-JV8VAO0",[[1,16708,"按照"]],[16708,16708],[16710,16710]]],[1553011076207,["KotlinD@DESKTOP-JV8VAO0",[[1,16708," "]],[16710,16710],[16711,16711]]],[1553011093833,["KotlinD@DESKTOP-JV8VAO0",[[1,16711,"先后顺序接收，有序广播的定义过程与"]],[16711,16711],[16728,16728]]],[1553011105980,["KotlinD@DESKTOP-JV8VAO0",[[1,16728,"普通广播没有区别，知识"]],[16728,16728],[16739,16739]]],[1553011108733,["KotlinD@DESKTOP-JV8VAO0",[[-1,16737,"知识"]],[16739,16739],[16737,16737]]],[1553011128036,["KotlinD@DESKTOP-JV8VAO0",[[1,16737,"发送方式变为：sendOrderBroadcast（）"]],[16737,16737],[16764,16764]]],[1553011128606,["KotlinD@DESKTOP-JV8VAO0",[[-1,16762,"（）"]],[16764,16764],[16762,16762]]],[1553011129469,["KotlinD@DESKTOP-JV8VAO0",[[1,16762,"()"]],[16762,16762],[16764,16764]]],[1553011140264,["KotlinD@DESKTOP-JV8VAO0",[[1,16763,"intent,receiverPermin"]],[16763,16763],[16784,16784]]],[1553011141610,["KotlinD@DESKTOP-JV8VAO0",[[-1,16782,"in"]],[16784,16784],[16782,16782]]],[1553011147088,["KotlinD@DESKTOP-JV8VAO0",[[1,16782,"ission,..."]],[16782,16782],[16792,16792]]],[1553011147885,["KotlinD@DESKTOP-JV8VAO0",[[1,16793,"/"]],[16793,16793],[16794,16794]]],[1553011148510,["KotlinD@DESKTOP-JV8VAO0",[[-1,16793,"/"]],[16794,16794],[16793,16793]]],[1553011148838,["KotlinD@DESKTOP-JV8VAO0",[[1,16794,"  - \n"]],[16793,16793],[16798,16798]]],[1553011150636,["KotlinD@DESKTOP-JV8VAO0",[[-1,16794,"  - "]],[16798,16798],[16794,16794]]],[1553011151126,["KotlinD@DESKTOP-JV8VAO0",[[-1,16794,"\n"]],[16794,16794],[16793,16793]]],[1553011157163,["KotlinD@DESKTOP-JV8VAO0",[[1,16820,"\n- "]],[16817,16817],[16820,16820]]],[1553011157361,["KotlinD@DESKTOP-JV8VAO0",[[1,16818,"  "]],[16820,16820],[16822,16822]]],[1553011203026,["KotlinD@DESKTOP-JV8VAO0",[[1,16822,"5.0zhihou"]],[16822,16822],[16831,16831]]],[1553011204526,["KotlinD@DESKTOP-JV8VAO0",[[-1,16825,"zhihou"]],[16831,16831],[16825,16825]]],[1553011205369,["KotlinD@DESKTOP-JV8VAO0",[[1,16825,"zhih"]],[16825,16825],[16829,16829]]],[1553011206525,["KotlinD@DESKTOP-JV8VAO0",[[-1,16825,"zhih"]],[16829,16829],[16825,16825]]],[1553011208758,["KotlinD@DESKTOP-JV8VAO0",[[1,16825,"之后"]],[16825,16825],[16827,16827]]],[1553011208816,["KotlinD@DESKTOP-JV8VAO0",[[1,16825," "]],[16827,16827],[16828,16828]]],[1553011217332,["KotlinD@DESKTOP-JV8VAO0",[[1,16828,"弃用了"]],[16828,16828],[16831,16831]]],[1553011229263,["KotlinD@DESKTOP-JV8VAO0",[[1,16859,"（）"]],[16859,16859],[16861,16861]]],[1553011233664,["KotlinD@DESKTOP-JV8VAO0",[[1,16860,"App进程"]],[16860,16860],[16865,16865]]],[1553011233722,["KotlinD@DESKTOP-JV8VAO0",[[1,16863," "]],[16865,16865],[16866,16866]]],[1553011243938,["KotlinD@DESKTOP-JV8VAO0",[[1,16866,"为界"]],[16866,16866],[16868,16868]]],[1553011245280,["KotlinD@DESKTOP-JV8VAO0",[[1,16870,"- \n"]],[16869,16869],[16872,16872]]],[1553011249529,["KotlinD@DESKTOP-JV8VAO0",[[1,16870,"  "]],[16872,16872],[16874,16874]]],[1553011273869,["KotlinD@DESKTOP-JV8VAO0",[[1,16874,"Android中"]],[16874,16874],[16882,16882]]],[1553011273927,["KotlinD@DESKTOP-JV8VAO0",[[1,16881," "]],[16882,16882],[16883,16883]]],[1553011286246,["KotlinD@DESKTOP-JV8VAO0",[[1,16883,"的广播可以跨进程，设置时"]],[16883,16883],[16895,16895]]],[1553011286786,["KotlinD@DESKTOP-JV8VAO0",[[-1,16892,"设置时"]],[16895,16895],[16892,16892]]],[1553011294326,["KotlinD@DESKTOP-JV8VAO0",[[1,16892,"甚至是跨App"]],[16892,16892],[16899,16899]]],[1553011294385,["KotlinD@DESKTOP-JV8VAO0",[[1,16896," "]],[16899,16899],[16900,16900]]],[1553011295558,["KotlinD@DESKTOP-JV8VAO0",[[1,16900,"直接"]],[16900,16900],[16902,16902]]],[1553011295617,["KotlinD@DESKTOP-JV8VAO0",[[1,16900," "]],[16902,16902],[16903,16903]]],[1553011308505,["KotlinD@DESKTOP-JV8VAO0",[[1,16903,"通信，且注册是exported"]],[16903,16903],[16918,16918]]],[1553011308567,["KotlinD@DESKTOP-JV8VAO0",[[1,16910," "]],[16918,16918],[16919,16919]]],[1553011311154,["KotlinD@DESKTOP-JV8VAO0",[[1,16919,"对于"]],[16919,16919],[16921,16921]]],[1553011311224,["KotlinD@DESKTOP-JV8VAO0",[[1,16919," "]],[16921,16921],[16922,16922]]],[1553011311406,["KotlinD@DESKTOP-JV8VAO0",[[1,16922,"，"]],[16922,16922],[16923,16923]]],[1553011311950,["KotlinD@DESKTOP-JV8VAO0",[[-1,16922,"，"]],[16923,16923],[16922,16922]]],[1553011315110,["KotlinD@DESKTOP-JV8VAO0",[[1,16922,"有intent"]],[16922,16922],[16929,16929]]],[1553011315169,["KotlinD@DESKTOP-JV8VAO0",[[1,16923," "]],[16929,16929],[16930,16930]]],[1553011318533,["KotlinD@DESKTOP-JV8VAO0",[[1,16930,"-filter的"]],[16930,16930],[16938,16938]]],[1553011318593,["KotlinD@DESKTOP-JV8VAO0",[[1,16937," "]],[16938,16938],[16939,16939]]],[1553011329768,["KotlinD@DESKTOP-JV8VAO0",[[1,16939,"轻卡U那个下默认值是true"]],[16939,16939],[16953,16953]]],[1553011329826,["KotlinD@DESKTOP-JV8VAO0",[[1,16949," "]],[16953,16953],[16954,16954]]],[1553011340856,["KotlinD@DESKTOP-JV8VAO0",[[1,16954,"，由此将可能出现安全隐患："]],[16954,16954],[16967,16967]]],[1553011341067,["KotlinD@DESKTOP-JV8VAO0",[[1,16968,"  - \n"]],[16967,16967],[16972,16972]]],[1553011341281,["KotlinD@DESKTOP-JV8VAO0",[[1,16970,"  "]],[16972,16972],[16974,16974]]],[1553011346892,["KotlinD@DESKTOP-JV8VAO0",[[1,16974,"其他App"]],[16974,16974],[16979,16979]]],[1553011346951,["KotlinD@DESKTOP-JV8VAO0",[[1,16976," "]],[16979,16979],[16980,16980]]],[1553011348165,["KotlinD@DESKTOP-JV8VAO0",[[1,16980,"可能"]],[16980,16980],[16982,16982]]],[1553011348225,["KotlinD@DESKTOP-JV8VAO0",[[1,16980," "]],[16982,16982],[16983,16983]]],[1553011360754,["KotlinD@DESKTOP-JV8VAO0",[[1,16983,"针对性的发出与当前App"]],[16983,16983],[16995,16995]]],[1553011360812,["KotlinD@DESKTOP-JV8VAO0",[[1,16992," "]],[16995,16995],[16996,16996]]],[1553011367862,["KotlinD@DESKTOP-JV8VAO0",[[1,16996," intent-filter相匹配"]],[16996,16996],[17013,17013]]],[1553011367921,["KotlinD@DESKTOP-JV8VAO0",[[1,17010," "]],[17013,17013],[17014,17014]]],[1553011375764,["KotlinD@DESKTOP-JV8VAO0",[[1,17014,"的广播，由此导致当前App"]],[17014,17014],[17027,17027]]],[1553011375825,["KotlinD@DESKTOP-JV8VAO0",[[1,17024," "]],[17027,17027],[17028,17028]]],[1553011377501,["KotlinD@DESKTOP-JV8VAO0",[[1,17028,"不断"]],[17028,17028],[17030,17030]]],[1553011377561,["KotlinD@DESKTOP-JV8VAO0",[[1,17028," "]],[17030,17030],[17031,17031]]],[1553011378800,["KotlinD@DESKTOP-JV8VAO0",[[1,17031,"结合搜到"]],[17031,17031],[17035,17035]]],[1553011380388,["KotlinD@DESKTOP-JV8VAO0",[[-1,17031,"结合搜到"]],[17035,17035],[17031,17031]]],[1553011387390,["KotlinD@DESKTOP-JV8VAO0",[[1,17031,"接收到广播并处理。"]],[17031,17031],[17040,17040]]],[1553011389163,["KotlinD@DESKTOP-JV8VAO0",[[1,17041,"    - \n"]],[17040,17040],[17047,17047]]],[1553011389548,["KotlinD@DESKTOP-JV8VAO0",[[1,17045,"  "]],[17047,17047],[17049,17049]]],[1553011393106,["KotlinD@DESKTOP-JV8VAO0",[[-1,17041,"      - "]],[17049,17049],[17041,17041]]],[1553011393485,["KotlinD@DESKTOP-JV8VAO0",[[-1,17043,"\n"]],[17041,17041],[17040,17040]]],[1553011393946,["KotlinD@DESKTOP-JV8VAO0",[[1,17041,"    - \n"]],[17040,17040],[17047,17047]]],[1553011400926,["KotlinD@DESKTOP-JV8VAO0",[[1,17047,"其他App"]],[17047,17047],[17052,17052]]],[1553011400994,["KotlinD@DESKTOP-JV8VAO0",[[1,17049," "]],[17052,17052],[17053,17053]]],[1553011403091,["KotlinD@DESKTOP-JV8VAO0",[[1,17053,"可以"]],[17053,17053],[17055,17055]]],[1553011403150,["KotlinD@DESKTOP-JV8VAO0",[[1,17053," "]],[17055,17055],[17056,17056]]],[1553011409238,["KotlinD@DESKTOP-JV8VAO0",[[1,17056,"注册与当前App"]],[17056,17056],[17064,17064]]],[1553011409312,["KotlinD@DESKTOP-JV8VAO0",[[1,17061," "]],[17064,17064],[17065,17065]]],[1553011411052,["KotlinD@DESKTOP-JV8VAO0",[[1,17065,"一直的"]],[17065,17065],[17068,17068]]],[1553011413013,["KotlinD@DESKTOP-JV8VAO0",[[1,17065," "],[-1,17066,"一的直"]],[17068,17068],[17066,17066]]],[1553011420789,["KotlinD@DESKTOP-JV8VAO0",[[1,17066,"一致的intent"]],[17066,17066],[17075,17075]]],[1553011420846,["KotlinD@DESKTOP-JV8VAO0",[[1,17069," "]],[17075,17075],[17076,17076]]],[1553011426686,["KotlinD@DESKTOP-JV8VAO0",[[1,17076,"-filter用于"]],[17076,17076],[17085,17085]]],[1553011426756,["KotlinD@DESKTOP-JV8VAO0",[[1,17083," "]],[17085,17085],[17086,17086]]],[1553011437634,["KotlinD@DESKTOP-JV8VAO0",[[1,17086,"接收广播，获取广播具体信息；"]],[17086,17086],[17100,17100]]],[1553011438148,["KotlinD@DESKTOP-JV8VAO0",[[1,17101,"    - \n"]],[17100,17100],[17107,17107]]],[1553011446832,["KotlinD@DESKTOP-JV8VAO0",[[-1,17106," "]],[17107,17107],[17106,17106]]],[1553011448037,["KotlinD@DESKTOP-JV8VAO0",[[1,17106," "]],[17106,17106],[17107,17107]]],[1553011448954,["KotlinD@DESKTOP-JV8VAO0",[[-1,17105,"- "]],[17107,17107],[17105,17105]]],[1553011450580,["KotlinD@DESKTOP-JV8VAO0",[[1,17105,"- "]],[17105,17105],[17107,17107]]],[1553011452912,["KotlinD@DESKTOP-JV8VAO0",[[-1,17101,"    - "]],[17107,17107],[17101,17101]]],[1553011453398,["KotlinD@DESKTOP-JV8VAO0",[[-1,17103,"\n"]],[17101,17101],[17100,17100]]],[1553011454085,["KotlinD@DESKTOP-JV8VAO0",[[1,17101,"    - \n"]],[17100,17100],[17107,17107]]],[1553011454589,["KotlinD@DESKTOP-JV8VAO0",[[-1,17106," "]],[17107,17107],[17106,17106]]],[1553011456622,["KotlinD@DESKTOP-JV8VAO0",[[1,17106,"  "]],[17106,17106],[17108,17108]]],[1553011459268,["KotlinD@DESKTOP-JV8VAO0",[[-1,17103,"  "]],[17105,17105],[17103,17103]]],[1553011499783,[null,[[-1,17100,"一"],[1,17101,"\n"]],[17100,17100],[17102,17102]]],[1553011499783,[null,[[1,17100,"一"],[-1,17100,"\n"]],[17102,17102],[17100,17100]]],[1553011497666,["KotlinD@DESKTOP-JV8VAO0",[[1,17106,"为了增加安全性，可以按照下面的方式："]],[17106,17106],[17124,17124]]],[1553011497877,["KotlinD@DESKTOP-JV8VAO0",[[1,17125,"  - \n"]],[17124,17124],[17129,17129]]],[1553011498912,["KotlinD@DESKTOP-JV8VAO0",[[1,17127,"  "]],[17129,17129],[17131,17131]]],[1553011559785,[null,[[-1,17100,"一"],[1,17101,"\n"]],[17100,17100],[17102,17102]]],[1553011559785,[null,[[1,17100,"一"],[-1,17100,"\n"]],[17102,17102],[17100,17100]]],[1553011508275,["KotlinD@DESKTOP-JV8VAO0",[[1,17131,"对于统一"]],[17131,17131],[17135,17135]]],[1553011508810,["KotlinD@DESKTOP-JV8VAO0",[[-1,17133,"统一"]],[17135,17135],[17133,17133]]],[1553011511939,["KotlinD@DESKTOP-JV8VAO0",[[1,17133,"同一A[["]],[17133,17133],[17138,17138]]],[1553011512006,["KotlinD@DESKTOP-JV8VAO0",[[1,17135," "]],[17138,17138],[17139,17139]]],[1553011517595,["KotlinD@DESKTOP-JV8VAO0",[[1,17139,"内部发送盒"]],[17139,17139],[17144,17144]]],[1553011519694,["KotlinD@DESKTOP-JV8VAO0",[[-1,17137,"[[内部发送盒"]],[17144,17144],[17137,17137]]],[1553011522727,["KotlinD@DESKTOP-JV8VAO0",[[1,17137,"pp发送"]],[17137,17137],[17141,17141]]],[1553011522788,["KotlinD@DESKTOP-JV8VAO0",[[1,17139," "]],[17141,17141],[17142,17142]]],[1553011523344,["KotlinD@DESKTOP-JV8VAO0",[[-1,17140,"发送"]],[17142,17142],[17140,17140]]],[1553011539422,["KotlinD@DESKTOP-JV8VAO0",[[1,17140,"内部发送和接收广播，将exported"]],[17140,17140],[17159,17159]]],[1553011539485,["KotlinD@DESKTOP-JV8VAO0",[[1,17151," "]],[17159,17159],[17160,17160]]],[1553011540693,["KotlinD@DESKTOP-JV8VAO0",[[1,17160,"属性"]],[17160,17160],[17162,17162]]],[1553011540763,["KotlinD@DESKTOP-JV8VAO0",[[1,17160," "]],[17162,17162],[17163,17163]]],[1553011542343,["KotlinD@DESKTOP-JV8VAO0",[[1,17163,"改为"]],[17163,17163],[17165,17165]]],[1553011542965,["KotlinD@DESKTOP-JV8VAO0",[[-1,17163,"改为"]],[17165,17165],[17163,17163]]],[1553011545668,["KotlinD@DESKTOP-JV8VAO0",[[1,17163,"设置为false"]],[17163,17163],[17171,17171]]],[1553011545729,["KotlinD@DESKTOP-JV8VAO0",[[1,17166," "]],[17171,17171],[17172,17172]]],[1553011619787,[null,[[-1,17100,"一"],[1,17101,"\n"]],[17100,17100],[17102,17102]]],[1553011619787,[null,[[1,17100,"一"],[-1,17100,"\n"]],[17102,17102],[17100,17100]]],[1553011576769,["KotlinD@DESKTOP-JV8VAO0",[[1,17172,"，谁"]],[17172,17172],[17174,17174]]],[1553011577136,["KotlinD@DESKTOP-JV8VAO0",[[-1,17172,"，谁"]],[17174,17174],[17172,17172]]],[1553011577824,["KotlinD@DESKTOP-JV8VAO0",[[1,17172,"是"]],[17172,17172],[17173,17173]]],[1553011577886,["KotlinD@DESKTOP-JV8VAO0",[[1,17172," "]],[17173,17173],[17174,17174]]],[1553011578028,["KotlinD@DESKTOP-JV8VAO0",[[-1,17173,"是"]],[17174,17174],[17173,17173]]],[1553011581547,["KotlinD@DESKTOP-JV8VAO0",[[1,17173,"，使得飞"]],[17173,17173],[17177,17177]]],[1553011581878,["KotlinD@DESKTOP-JV8VAO0",[[-1,17176,"飞"]],[17177,17177],[17176,17176]]],[1553011585988,["KotlinD@DESKTOP-JV8VAO0",[[1,17176,"非本App"]],[17176,17176],[17181,17181]]],[1553011586049,["KotlinD@DESKTOP-JV8VAO0",[[1,17178," "]],[17181,17181],[17182,17182]]],[1553011587452,["KotlinD@DESKTOP-JV8VAO0",[[1,17182,"内部"]],[17182,17182],[17184,17184]]],[1553011587513,["KotlinD@DESKTOP-JV8VAO0",[[1,17182," "]],[17184,17184],[17185,17185]]],[1553011596126,["KotlinD@DESKTOP-JV8VAO0",[[1,17185,"发出的此广播不被接受"]],[17185,17185],[17195,17195]]],[1553011596846,["KotlinD@DESKTOP-JV8VAO0",[[-1,17193,"接受"]],[17195,17195],[17193,17193]]],[1553011597863,["KotlinD@DESKTOP-JV8VAO0",[[1,17193,"接受"]],[17193,17193],[17195,17195]]],[1553011598398,["KotlinD@DESKTOP-JV8VAO0",[[-1,17193,"接受"]],[17195,17195],[17193,17193]]],[1553011599871,["KotlinD@DESKTOP-JV8VAO0",[[1,17193,"接收；"]],[17193,17193],[17196,17196]]],[1553011600402,["KotlinD@DESKTOP-JV8VAO0",[[1,17197,"    - \n"]],[17196,17196],[17203,17203]]],[1553011619375,["KotlinD@DESKTOP-JV8VAO0",[[1,17203,"在广播发送和接收时，增加相应的permission"]],[17203,17203],[17228,17228]]],[1553011619437,["KotlinD@DESKTOP-JV8VAO0",[[1,17218," "]],[17228,17228],[17229,17229]]],[1553011679792,[null,[[-1,17100,"一"],[1,17101,"\n"]],[17100,17100],[17102,17102]]],[1553011679792,[null,[[1,17100,"一"],[-1,17100,"\n"]],[17102,17102],[17100,17100]]],[1553011625435,["KotlinD@DESKTOP-JV8VAO0",[[1,17229,"，用于权限教研"]],[17229,17229],[17236,17236]]],[1553011626104,["KotlinD@DESKTOP-JV8VAO0",[[-1,17234,"教研"]],[17236,17236],[17234,17234]]],[1553011628010,["KotlinD@DESKTOP-JV8VAO0",[[1,17234,"验证；"]],[17234,17234],[17237,17237]]],[1553011628107,["KotlinD@DESKTOP-JV8VAO0",[[1,17238,"    - \n"]],[17237,17237],[17244,17244]]],[1553011650045,["KotlinD@DESKTOP-JV8VAO0",[[1,17244,"发送广播时，指定特定广播接收器所在的薄命"]],[17244,17244],[17264,17264]]],[1553011650599,["KotlinD@DESKTOP-JV8VAO0",[[-1,17262,"薄命"]],[17264,17264],[17262,17262]]],[1553011663204,["KotlinD@DESKTOP-JV8VAO0",[[1,17262,"包名，具体是通过intent"]],[17262,17262],[17276,17276]]],[1553011663267,["KotlinD@DESKTOP-JV8VAO0",[[1,17270," "]],[17276,17276],[17277,17277]]],[1553011663430,["KotlinD@DESKTOP-JV8VAO0",[[1,17277,"。"]],[17277,17277],[17278,17278]]],[1553011664019,["KotlinD@DESKTOP-JV8VAO0",[[-1,17277,"。"]],[17278,17278],[17277,17277]]],[1553011670230,["KotlinD@DESKTOP-JV8VAO0",[[1,17277,".setPackage()"]],[17277,17277],[17290,17290]]],[1553011673946,["KotlinD@DESKTOP-JV8VAO0",[[1,17289,"packagename"]],[17289,17289],[17300,17300]]],[1553011675370,["KotlinD@DESKTOP-JV8VAO0",[[-1,17296,"name"]],[17300,17300],[17296,17296]]],[1553011675989,["KotlinD@DESKTOP-JV8VAO0",[[1,17296,"Ma,"]],[17296,17296],[17299,17299]]],[1553011676677,["KotlinD@DESKTOP-JV8VAO0",[[-1,17296,"Ma,"]],[17299,17299],[17296,17296]]],[1553011677500,["KotlinD@DESKTOP-JV8VAO0",[[1,17296,"Na,e"]],[17296,17296],[17300,17300]]],[1553011678201,["KotlinD@DESKTOP-JV8VAO0",[[-1,17298,",e"]],[17300,17300],[17298,17298]]],[1553011678671,["KotlinD@DESKTOP-JV8VAO0",[[1,17298,"me"]],[17298,17298],[17300,17300]]],[1553011739789,[null,[[-1,17100,"一"],[1,17101,"\n"]],[17100,17100],[17102,17102]]],[1553011739789,[null,[[1,17100,"一"],[-1,17100,"\n"]],[17102,17102],[17100,17100]]],[1553011681151,["KotlinD@DESKTOP-JV8VAO0",[[1,17301,"z"]],[17301,17301],[17302,17302]]],[1553011681524,["KotlinD@DESKTOP-JV8VAO0",[[-1,17301,"z"]],[17302,17302],[17301,17301]]],[1553011684319,["KotlinD@DESKTOP-JV8VAO0",[[1,17301,"指定在"]],[17301,17301],[17304,17304]]],[1553011685796,["KotlinD@DESKTOP-JV8VAO0",[[-1,17303,"在"]],[17304,17304],[17303,17303]]],[1553011691257,["KotlinD@DESKTOP-JV8VAO0",[[1,17303,"，这样次"]],[17303,17303],[17307,17307]]],[1553011693682,["KotlinD@DESKTOP-JV8VAO0",[[-1,17306,"次"]],[17307,17307],[17306,17306]]],[1553011711304,["KotlinD@DESKTOP-JV8VAO0",[[1,17306,"此广播将只会发送到此包中的App"]],[17306,17306],[17322,17322]]],[1553011711379,["KotlinD@DESKTOP-JV8VAO0",[[1,17319," "]],[17322,17322],[17323,17323]]],[1553011712360,["KotlinD@DESKTOP-JV8VAO0",[[1,17323,"内"]],[17323,17323],[17324,17324]]],[1553011712423,["KotlinD@DESKTOP-JV8VAO0",[[1,17323," "]],[17324,17324],[17325,17325]]],[1553011731676,["KotlinD@DESKTOP-JV8VAO0",[[1,17325,"与之相匹配的有效广播接收器中；"]],[17325,17325],[17340,17340]]],[1553011732065,["KotlinD@DESKTOP-JV8VAO0",[[1,17341,"    - \n"]],[17340,17340],[17347,17347]]],[1553011775367,[null,[[-1,17100,"一"],[1,17101,"\n"]],[17100,17100],[17102,17102]]],[1553011775367,[null,[[1,17100,"一"],[-1,17100,"\n"]],[17102,17102],[17100,17100]]],[1553011768062,["KotlinD@DESKTOP-JV8VAO0",[[1,17347,"安全性更高"]],[17347,17347],[17352,17352]]],[1553011770610,["KotlinD@DESKTOP-JV8VAO0",[[1,17353,"    - \n"]],[17352,17352],[17359,17359]]],[1553011774106,["KotlinD@DESKTOP-JV8VAO0",[[1,17359,"更加高效"]],[17359,17359],[17363,17363]]],[1553011780787,[null,[[-1,17100,"一"],[1,17101,"\n"]],[17100,17100],[17102,17102]]],[1553011780787,[null,[[1,17100,"一"],[-1,17100,"\n"]],[17102,17102],[17100,17100]]],[1553011778649,["KotlinD@DESKTOP-JV8VAO0",[[1,17345,"  "]],[17345,17345],[17347,17347]]],[1553011779706,["KotlinD@DESKTOP-JV8VAO0",[[1,17359,"  "]],[17359,17359],[17361,17361]]],[1553011790851,[null,[[-1,17100,"一"],[1,17101,"\n"]],[17100,17100],[17102,17102]]],[1553011790851,[null,[[1,17100,"一"],[-1,17100,"\n"]],[17102,17102],[17100,17100]]],[1553011789268,["KotlinD@DESKTOP-JV8VAO0",[[-1,17105," "]],[17106,17106],[17105,17105]]],[1553011817843,[null,[[-1,17100,"一"],[1,17101,"\n"]],[17100,17100],[17102,17102]]],[1553011817843,[null,[[1,17100,"一"],[-1,17100,"\n"]],[17102,17102],[17100,17100]]],[1553011806843,["KotlinD@DESKTOP-JV8VAO0",[[1,17367,"      -  "]],[17367,17367],[17376,17376]]],[1553011809606,["KotlinD@DESKTOP-JV8VAO0",[[-1,17371,"  "]],[17373,17373],[17371,17371]]],[1553011810887,["KotlinD@DESKTOP-JV8VAO0",[[1,17374," "]],[17373,17373],[17374,17374]]],[1553011811816,["KotlinD@DESKTOP-JV8VAO0",[[1,17374,"LocalBroadcastManager"]],[17374,17374],[17395,17395]]],[1553011816830,["KotlinD@DESKTOP-JV8VAO0",[[1,17371," "]],[17371,17371],[17372,17372]]],[1553011877855,[null,[[-1,17100,"一"],[1,17101,"\n"]],[17100,17100],[17102,17102]]],[1553011877855,[null,[[1,17100,"一"],[-1,17100,"\n"]],[17102,17102],[17100,17100]]],[1553011825648,["KotlinD@DESKTOP-JV8VAO0",[[1,17397,"用于处理"]],[17397,17397],[17401,17401]]],[1553011826049,["KotlinD@DESKTOP-JV8VAO0",[[-1,17399,"处理"]],[17401,17401],[17399,17399]]],[1553011830372,["KotlinD@DESKTOP-JV8VAO0",[[1,17399,"统一处理App"]],[17399,17399],[17406,17406]]],[1553011830434,["KotlinD@DESKTOP-JV8VAO0",[[1,17403," "]],[17406,17406],[17407,17407]]],[1553011832036,["KotlinD@DESKTOP-JV8VAO0",[[1,17407,"应用"]],[17407,17407],[17409,17409]]],[1553011832098,["KotlinD@DESKTOP-JV8VAO0",[[1,17407," "]],[17409,17409],[17410,17410]]],[1553011853382,["KotlinD@DESKTOP-JV8VAO0",[[1,17410,"内的广播，使用方式与普通的一样，知识注册"]],[17410,17410],[17430,17430]]],[1553011854080,["KotlinD@DESKTOP-JV8VAO0",[[-1,17426,"知识注册"]],[17430,17430],[17426,17426]]],[1553011856825,["KotlinD@DESKTOP-JV8VAO0",[[1,17426,"只是注册、"]],[17426,17426],[17431,17431]]],[1553011858129,["KotlinD@DESKTOP-JV8VAO0",[[-1,17430,"、"]],[17431,17431],[17430,17430]]],[1553011860152,["KotlinD@DESKTOP-JV8VAO0",[[1,17430,"、取消"]],[17430,17430],[17433,17433]]],[1553011861077,["KotlinD@DESKTOP-JV8VAO0",[[-1,17430,"、取消"]],[17433,17433],[17430,17430]]],[1553011862693,["KotlinD@DESKTOP-JV8VAO0",[[1,17430,"、"]],[17430,17430],[17431,17431]]],[1553011863345,["KotlinD@DESKTOP-JV8VAO0",[[-1,17430,"、"]],[17431,17431],[17430,17430]]],[1553011865697,["KotlinD@DESKTOP-JV8VAO0",[[1,17430,"\\quxiao"]],[17430,17430],[17437,17437]]],[1553011867321,["KotlinD@DESKTOP-JV8VAO0",[[-1,17431,"quxiao"]],[17437,17437],[17431,17431]]],[1553011874644,["KotlinD@DESKTOP-JV8VAO0",[[1,17431,"取消注册广播结合搜奇和"]],[17431,17431],[17442,17442]]],[1553011876177,["KotlinD@DESKTOP-JV8VAO0",[[-1,17437,"结合搜奇和"]],[17442,17442],[17437,17437]]],[1553011928082,[null,[[-1,17100,"一"],[1,17101,"\n"]],[17100,17100],[17102,17102]]],[1553011928082,[null,[[1,17100,"一"],[-1,17100,"\n"]],[17102,17102],[17100,17100]]],[1553011889873,["KotlinD@DESKTOP-JV8VAO0",[[1,17437,"接收器和广播发送"]],[17437,17437],[17445,17445]]],[1553011890810,["KotlinD@DESKTOP-JV8VAO0",[[-1,17441,"广播发送"]],[17445,17445],[17441,17441]]],[1553011898289,["KotlinD@DESKTOP-JV8VAO0",[[1,17441,"发送广播将主调"]],[17441,17441],[17448,17448]]],[1553011898974,["KotlinD@DESKTOP-JV8VAO0",[[-1,17445,"将主调"]],[17448,17448],[17445,17445]]],[1553011908709,["KotlinD@DESKTOP-JV8VAO0",[[1,17445,"将调用者context"]],[17445,17445],[17456,17456]]],[1553011908783,["KotlinD@DESKTOP-JV8VAO0",[[1,17449," "]],[17456,17456],[17457,17457]]],[1553011912051,["KotlinD@DESKTOP-JV8VAO0",[[1,17457,"改为"]],[17457,17457],[17459,17459]]],[1553011912115,["KotlinD@DESKTOP-JV8VAO0",[[1,17457," "]],[17459,17459],[17460,17460]]],[1553011921654,["KotlinD@DESKTOP-JV8VAO0",[[1,17460,"了LocalBroadcastManager"]],[17460,17460],[17482,17482]]],[1553011921716,["KotlinD@DESKTOP-JV8VAO0",[[1,17461," "]],[17482,17482],[17483,17483]]],[1553011923240,["KotlinD@DESKTOP-JV8VAO0",[[1,17483,"的"]],[17483,17483],[17484,17484]]],[1553011923301,["KotlinD@DESKTOP-JV8VAO0",[[1,17483," "]],[17484,17484],[17485,17485]]],[1553011926518,["KotlinD@DESKTOP-JV8VAO0",[[1,17485,"单一实例。"]],[17485,17485],[17490,17490]]],[1553011946003,[null,[[-1,17100,"一"],[1,17101,"\n"]],[17100,17100],[17102,17102]]],[1553011946003,[null,[[1,17100,"一"],[-1,17100,"\n"]],[17102,17102],[17100,17100]]],[1553011936777,["KotlinD@DESKTOP-JV8VAO0",[[1,17492,"\n"]],[17491,17491],[17492,17492]]],[1553011938671,["KotlinD@DESKTOP-JV8VAO0",[[1,17491,"···"]],[17491,17491],[17494,17494]]],[1553011939690,["KotlinD@DESKTOP-JV8VAO0",[[-1,17491,"···"]],[17494,17494],[17491,17491]]],[1553011940481,["KotlinD@DESKTOP-JV8VAO0",[[1,17491,"`1``"]],[17491,17491],[17495,17495]]],[1553011941354,["KotlinD@DESKTOP-JV8VAO0",[[-1,17491,"`1``"]],[17495,17495],[17491,17491]]],[1553011942200,["KotlinD@DESKTOP-JV8VAO0",[[1,17491,"```"]],[17491,17491],[17494,17494]]],[1553011942261,["KotlinD@DESKTOP-JV8VAO0",[[1,17494,"language\n```\n"]],[17494,17494],[17494,17502]]],[1553011943117,["KotlinD@DESKTOP-JV8VAO0",[[-1,17494,"language"],[1,17502,"j"]],[17494,17502],[17495,17495]]],[1553011943503,["KotlinD@DESKTOP-JV8VAO0",[[1,17495,"ava"]],[17495,17495],[17498,17498]]],[1553011943823,["KotlinD@DESKTOP-JV8VAO0",[[1,17499,"\n"]],[17498,17498],[17499,17499]]],[1553011944355,["KotlinD@DESKTOP-JV8VAO0",[[1,17499,"//registerReceiver(mBroadcastReceiver, intentFilter);\n//注册应用内广播接收器\nlocalBroadcastManager = LocalBroadcastManager.getInstance(this);\nlocalBroadcastManager.registerReceiver(mBroadcastReceiver, intentFilter);\n        \n//unregisterReceiver(mBroadcastReceiver);\n//取消注册应用内广播接收器\nlocalBroadcastManager.unregisterReceiver(mBroadcastReceiver);\n\nIntent intent = new Intent();\nintent.setAction(BROADCAST_ACTION);\nintent.putExtra(\"name\", \"qqyumidi\");\n//sendBroadcast(intent);\n//发送应用内广播\nlocalBroadcastManager.sendBroadcast(intent);"]],[17499,17499],[18016,18016]]]],null,"KotlinD@DESKTOP-JV8VAO0"],["113dfcdb-cfb1-4e3d-aa71-c3385c2a7255",1553178105909,"# **Java中的集合类有哪些。区别是什么，如何保证安全性。**\n## **Collection、Map:**\n- Collection ：List、Set，区别是 List 有序&可重复，而 Set 无序&不可重复。\n- Map 为key-value的对应关系，key不可以重复\n\n## **List**\n- List 接口是有序可重复的 Collection 接口实现，可以通过索引来访问 List 中的元素；\n- 实现类 LinkedList、ArrayList、Vector；\n\n### **LinkedList** \n- ==不是线程安全的==，可以使用 ==List list = Collections.synchronizedList(new LinkedList());== 保证线程安全\n- 有序、素可重复、允许 null\n- 提供了 get、remove、insert、方法在 LinedList 首部或尾部操作数据，所以可以作为：堆栈（stack）、队列（queue）、双向队列（deque）\n- 内部实现使用的是链表数据结构，元素之间使用指针引用关联\n\n### **ArrayList** \n- ==不是线程安全的==，可以使用 ==List list = Collections.synchronizedList(new LinkedList());== 保证线程安全\n- 有序、元素可重复、允许 null\n- 内部实现使用的是数组，初始容量为 10，扩容增长为原来的 1.5 倍，grow 方法中数据转移使用==Arrays.copyof(elementData,newCapacity)==\n\n### **Vector** \n- ==是线程安全的==，内部的操作方法都是用 synchronized 进行修饰来\n- 如果 Vector 创建的 Iterator 被使用的时候，另一个线程改变 Vector 状态，会抛出 ==ConcurrentModificationException== ，因此必须捕获这个异常。\n- 内部实现使用的是数组，初始默认容量为 10，扩容增长为原来的 2 倍，数据转移使用==Arrays.copyof(elementData,newCapacity)==\n\n### **使用场景：**\n- 当需要快速插入、删除元素，应该使用 LinkedList，如果需要快速随机访问元素，应该使用 ArrayList。\n- 如果是单个线程使用，需要效率更更高。使用 ArrayList\n- 如果是多线程同时操作，应该使用线程安全的类。LinkedList\n- 使用的时候尽量的使用接口类声明，例如：List。目的是考虑到以后业务变成，由ArrayList 替换成了LinkedList，减少代码的修改。\n\n### **总结 ArrayList & LinkedList**\n- ArrayList 是基于动态数组的数据结构，LinkedList是基于链表的数据结构；\n- 随机访问数据，get和set，ArrayList更优于 LinkedList ，因为 LinkedList 是链表结构，需要移动指针，效率更低；\n- 对于新增和删除操作：\n    - 如果只是对单条数据插入或删除，ArrayList 速度更快些。\n    - 如果是批量随机的插入或删除数据，LinkedList 速度更快些。\n    - 原因是 ArrayList 每插入一条数据就要移动插入点及后面的所有数据，效率更低，而 LinkedList 只需要替换插入点的前后指针引用即可完成操作；\n\n### **总结 Vector 和 ArrayList**\n- Vector 是线程同步的，所以是线程安全的，而 ArrayList 是线程异步的，不是线程安全的。通过源码看到，Vector 在操作的方法前使用 synchronized 进行同步操作\n- 默认情况下，在进行添加元素操作的时候，如果元素数目大于当前的集合数组的长度时，Vector 增长率为目前数组的 100% ，而 ArrayList 为 50%，同时 Vector 在创建时支持指定增长容量\n- 如果查找一个指定位置的数据， Vector 和 ArrayList 的使用时间是相同的O(1)。但移动一个指定未知的数据使用的时间是 O(n-1),n为总长度，这个时候就会考虑使用 LinkedList ，因为它使用的时间为O(1),而查询指定位置数据使用的时间为O(i)\n- ArrayList 和 Vector 都是采用数组的方式进行存储的，且数组元素数量大于实际存储的数据，以便增加或插入，可以直接通过索引访问元素。\n- Vector 由于使用了 synchronized 方法所以性能上会比 ArrayList 差一些，LinkedList 使用的是双链表实现的存储，按照序号索引数据可以进行向前或向后遍历，但是插入数据时只需要记录当前元素的前后项即可，所以插入速度更快些。\n\n## **Set**\n- Set 接口是无序不可重复 Collection 接口实现，\n- 实现类有，HashSet、TreeSet\n\n### **HashSet** \n- ==不是线程安全的==，可以使用 ==Set set = Collections.synchronizedSet(new HashSet());== 保证线程安全\n- 无序、不可重复、可以存储 null\n- 通过哈希算法实现防止重复\n- 存放元素使用 key-value 形式\n- 基于 HashMap 实现的\n\n### **TreeSet** \n- ==不是线程安全的==，可以使用 ==Set set = Collections.synchronizedSet(new TreeSet());== 保证线程安全\n- 有序、不可重复、不可存储 null\n- 与 HashSet 相比较，多了排序算法，默认使用元素的自然数序，也可以根据创建 set 时设置的 Comparator 进行排序。\n- 是基于 TreeMap 的 NavigableSet 实现的。底层数据结构是二叉树。\n\n## **Map**\n- key-value 形式存在，key不能重复。\n- 实现类有，HashMap、TreeMap、LinkedHashMap、Hashtable\n\n### **HashMap** \n- ==不是线程安全的==，可以使用 ==Map map = Collections.synchronizedMap(new HashMap());== 保证线程安全\n- 无序、key 不可重复（会覆盖）、可以存储一条 key 为 null 的数据\n- 内部使用 Node 数组+链表+红黑树的数据结构实现的，默认数量为 16 的数组，扩容时，容量*载入因子(默认 0.75)，扩大后的新空间一定是原来的 2 倍，这也导致比较消耗内存，所以 Android 中做了优化，使用 [SparseArray](#sparsearray)\n- 如果 key 是自定义类，需要实现 hashCode() 和 equals() 方法\n\n### **Hashtable** \n- ==是线程安全的==，操作方法使用 ==synchronized== 进行了修饰\n- 继承自 Dictionary\n- ==key 或 value 不能为 null==\n- 无序、key 不可重复（会覆盖）\n- 内部使用 Node 数组+链表+红黑树的数据结构实现的\n- 如果 key 是自定义类，需要实现 hashCode() 和 equals() 方法\n\n### **LinkedHashMap** \n- ==不是线程安全的==，可以使用 ==Map map = Collections.synchronizedMap(new HashMap());== 保证线程安全\n- key 不可重复（会覆盖）、可以存储一条 key 为 null 的数据\n- 内部使用 Node 数组+链表+红黑树的数据结构实现的\n- 如果 key 是自定义类，需要实现 hashCode() 和 equals() 方法\n- 有序的，记录了插入数据的顺序，使用 Iterator 遍历时先得到的记录是先插入的，所以查询速度比 HashMap 慢\n\n### **TreeMap** \n- ==不是线程安全的==\n- key 不可以重复（会覆盖）、不可以存储 key 为 null 的数据\n- 实现了 SortMap 接口，默认是按键升序排列\n- 存入的数据需要实现  ==Comparator== 接口或者 ==Comparable== 接口，会按照排序后的顺序迭代，所以两个要比较的 kye 不能抛出 ClassCaseException。\n- 基于红黑二叉树的NavigableMap的实现\n\n### **ConcurrentHashMap** \n- 使用锁分离思想，只锁住一个node，而锁住的Node之前的操作是基于在 volatile 和 CAS算法 之上无锁并且线程安全的；\n- CAS 是一种算法，基本思想就是不断的去比较当前内存中的变量值与指定的一个变量值是否相等，如果相等则接受，否则拒绝。\n\n### **总结**\n- 当在Map中插入、删除、定位元素，HashMap 速度比较快，因为是无序的，通过 HashCode 定位；\n- 如果需要自然然排序或自定义排序，TreeMap 是最好的选择，因为它实现了 SortMap 默认按照key升序排序；\n- 如果需要输出数据与输入时候相同，LinkedHashMap 是比较好的选择。\n\n# **Android的集合类有哪些？【性能优化】**\n\n## **ArrayMap**\n- 不是线程安全的\n- 基于两个数组，int[] mHashes; Object[] mArray;目的减少内存占用\n- 使用方式跟 HashMap 一样，实现 Map 接口\n- key-value 存储数据\n- 数据量小时可以用，数据量增大性能会下降 50%左右\n\n## **SparseArray**\n- 不是线程安全的\n- 基于两个数组，int[] mKeys; Object[] mValue;目的减少内存占用，默认初始容量为 10，\n- 用来代替 java 中的 HashMap<Integer,E>\n- 节省内存，使用 key-value 存储\n- 存储和读取数据使用的时二分查找法\n- 数据量不大，在千级以内\n- key 必须为 int 类型\n\n# **Java 中的线程池 Executor** \n\n## **为什么使用线程池？**\n- 因为频繁地为每一个任务创建一个线程，缺乏统一管理，降低性能，并且容易出现问题。\n- 线程池可以对多个线程统一管理 ，避免资源竞争出现问题；\n- 线程池对线程进行复用，线程执行完任务后不会立刻销毁，而会等待另外的任务，这样可以减少创建、销毁、以及GC调用。\n- 线程的创建和销毁由线程池维护，一个线程执行完成之后不会立即销毁，而是由后续的任务复用这个线程，从而减少线程的创建和销毁，节约系统的开销\n- 在执行大量异步任务的时候提高性能\n- Java 提供了 ExecutorService 线程池的 API，可以创建多种功能不一样的线程池，使用方便。\n\n\n\n## **如果超出了线程池最大数（maximumPoolSize）会发什么？**\n-  如果线程池中的线程超过了这个数值，则拒绝执行该任务，并抛出异常 ==RejectedExecutionException== \n\n## 常见的线程池有哪些？ 线程池关键参数？\n### **1、ThreadPoolExecutor 基本线程**\n使用这个类创建线程池，构造方法参数如下\n```java\npublic ThreadPoolExecutor(\n              int corePoolSize,    // 核心线程数,允许同时执行任务的最大线程数\n              int maximumPoolSize, // 最大线程数，允许同时处理任务的最大线程数\n              long keepAliveTime,  // 超出核心线程数的空闲线程的最大存活时间\n              TimeUnit unit,       // 空闲线程存活时间单位\n              BlockingQueue<Runnable> workQueue, // 阻塞任务队列，存储待执行的任务\n              ThreadFactory threadFactory, // 线程工厂，用于创建线程，可指定线程命名规则\n              RejectedExecutionHandler handler // 饱和策略(拒绝策略），当线程池阻塞队列已满时对新任务的处理\n        ) {\n        ...\n    }\n```\n- corePoolSize：核心线程的数量，在创建了线程池之后，默认情况下，线程池中并没有任何线程，而是等待有任务到来时才创建线程去执行任务，当线程池中的线程数目达到 corePoolSize 之后，就会把达到的任务放到缓存队列 BlockingQuequ 中，只有当工作队列满了的情况下才会创建超出这个数量的线程。如果某个线程的空闲时间超过了活动时间，那么将标记为可回收，并且只有当线程吃的当前大小超过，corePoolSize 时该线程才会被终止。用户可以调用 ==prestarAllCoreThreads()== 或者 ==prestartCoreThread()==方法预先创建线程，即在没有任务到来之前就创建 corePoolSize 个线程或者一个线程。\n- maximumPoolSize：线程池最大线程数，这个数大于等于 corePoolSize 否则会抛出 ==IllegalArgumentException==，它表示在线程池中最多能创建多少线程，当大于这个值就会拒绝任务，并抛出 ==RejectedExcutionException==\n- keepAliveTime：表示线程没有任务执行时最多保持多久时间会终止。默认情况下，只有当线程池中的线程数大于 corePoolSize 时，keepAliveTime 才会起作用，直到线程池中的线程数不大于 corePoolSize，如果调用了 allowCoreThreadTimeOutA(true)方法，在线程池中的线程数不大于 corePoolSize 时，keepAliceTime 参数也会起作用，直到线程池中的线程数为 0\n- unit：keepAliveTime 的时间单位\n- workQueue：一个阻塞队列，用来存储等待执行的任务，当线程池中的线程数目达到 corePoolSize 后，就会把到达的任务放到任务缓存队列中\n- threadFactory：线程工厂，主要用来创建线程\n- handler：处理拒绝处理任务时的策略，也就是参数 maximumPoolSize 达到后丢弃处理的方法:\n  - ThreadPoolExecutor.AbortPolicy:丢弃任务并抛出 RejectedExecutionException 异常\n  - ThreadPoolExecutor.DiscardPolicy:丢弃任务，不抛异常\n  - ThreadPoolExecutor.DiscardOldestPolicy:丢弃任务队列最前面的任务，然后重新尝试执行任务（重复此过程）\n  - ThreadPoolExecutor.CallerRunsPolicy:由调用线程处理该任务\n  - 也可以实现接口 RejectedExecutionHandler 定制自己的策略\n\n### **2、FixedThreadPool 可重用固定线程数**\n- Executors 中的创建方法\n- 特点：参数为核心线程数，只有核心线程，没有非核心线程，并且阻塞队列没有边界限制\n```java\n public static ExecutorService newFixedThreadPool(int nThreads, ThreadFactory threadFactory) {\n        return new ThreadPoolExecutor(nThreads, nThreads,\n                                      0L, TimeUnit.MILLISECONDS,\n                                      new LinkedBlockingQueue<Runnable>(),\n                                      threadFactory);\n    }\n```\n\n#### **3、CachedThreadPool 按需创建**\n- Executors 中的创建方法\n- 特点：没有核心线程，只有非核心线程，并且每个非核心线程空闲等待的时间为60秒，采用SynchronousQueue队列；\n- 由于没有设置最大线程数限制，如果提交速度大于执行速度，则会一直创建新的线程，需要注意，应该采取措施调整两边的速度，因为太多的线程会影响性能；\n\n```java\npublic static ExecutorService newCachedThreadPool() {\n        return new ThreadPoolExecutor(0, Integer.MAX_VALUE,\n                                      60L, TimeUnit.SECONDS,\n                                      new SynchronousQueue<Runnable>());\n    }\n```\n\n# **能否使用 Applaction 启动一个 Activity ？**\n- 可以在 Application 启动 Activity，但是需要注意的是，如果原来的任务栈已经销毁会抛出错误 ，需要判断添加标志，开启新的任务栈 ==addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)==\n- 因为都是继承实现 ==ContextWrapper==\n\n# **App 间通讯的方式有哪些？有什么区别？**\n- 数据访问: ContentProvicer、文件共享、网络共享、本地数据库、sp\n- 消息传递：AIDL、BroadcastReceiver、Messenger\n## **ContentProvider**\n- 将数据操作进行封装，提供标准 URI 进行操作\n- 存储形式可以为：SQLite、xml、文件或网络等\n- ContentProvider 共享数据\n- ContentResolver 操作数据\n\n## **BroadcastReceiver**\n- 广播接收者 BroadcastReceiver 通过 Binder 机制向 AMS(AcvitityManagerService)进行注册\n- 广播发送者通过 Binder 机制向 AMS 发送广播\n- AMS 查找符合相应条件的（IntentFilter|Permission）的 BroadcastReceiver，将广播发送到 BroadcastReceiver 相应的消息队列中\n- 消息队列拿到此广播，回调 BroadcastReceiver 中的 onReceive(Context，Intent) 方法，Intent 中会携带消息\n\n## **AIDL**\n- 不是线程安全的，支持多线程处理\n### **服务端**\n- 定义 AIDL 文件，生成 java 文件\n```java\ninterface MyAIDL {  \n  int plus(int a, int b);  \n}\n```\n- 定义服务类，AIDL 就是用来在多个 APP 之间访问同一个 Service 的，在这个服务类中定义对于你个的 stub 对象，在该 stub 对象中实现，上述的 AIDL 文件定义的抽象方法，在服务的 onBind(Intent)中返回 stub 对象。AndroidManifest.xml 配置相关属性。\n```java\npublic class MyService extends Service {  \n  ......  \n  @Override  \n  public IBinder onBind(Intent intent) { \n    //在onBind中返回该stub对象   \n    return mBinder;\n  }  \n\n  //在服务类中定义对应的stub对象，实现aidl中定义的抽象方法  \n  DemoAIDL.Stub mBinder = new Stub() {\n    @Override  \n    public int plus(int a, int b) throws RemoteException {  \n      return a + b;  \n    }  \n  };  \n}\n```\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.example.servicetest\"\n    android:versionCode=\"1\"\n    android:versionName=\"1.0\" >\n    ......\n\n    <service\n        android:name=\"com.example.servicetest.MyService\"\n        android:process=\":remote\" >\n        <intent-filter>\n            //注意action的android:name属性，该属性在客户端bindService中将会用到\n            <action android:name=\"com.example.servicetest.MyAIDLService\"/>\n        </intent-filter>\n    </service>\n```\n\n### **客户端**\n- 把服务端的 aidl 文件拷贝到相应的目录中，IDE 会生成 java 文件，这个是和服务端相同的，这样服务端和客户端通信协议上保证了一致\n- 在客户端的 Activity 与 Service 通信，在客户端 Activity 中定义 ServiceConnection 类，复写 onServiceConnected(ComponentName name,IBinder service)方法，通过 XX.Stub.asInterface(service);获取定义的 AIDL 文件生成的 java 类 ，使用 bindeService(intent,conn,Context.BIND_AUTO_CREATE);绑定远程服务，注意此时的 intent 需要指定为在服务端创建的 service 的 name 属性【==com.example.servicetest.MyAIDLService==】。\n```java\npublic class MainActivity extends Activity implements OnClickListener {\n\t...\n\tprivate MyAIDL myAIDL;\n\n\tprivate ServiceConnection connection = new ServiceConnection() {\n\n\t\t@Override\n\t\tpublic void onServiceDisconnected(ComponentName name) {\n\t\t}\n\n\t\t@Override\n\t\tpublic void onServiceConnected(ComponentName name, IBinder service) {\n\t\t    //在onServiceConnected中将IBinder转换为aidl对应的java类\n\t\t\tmyAIDL = MyAIDL.Stub.asInterface(service);\n\t\t\ttry {\n\t\t\t\tint result = myAIDL.plus(3, 5);\n\t\t\t\tLog.d(\"TAG\", \"result is \" + result);\n\t\t\t} catch (RemoteException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t};\n\t\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        \n        Button bindService = (Button) findViewById(R.id.bind_service);\n        \n        bindService.setOnClickListener(new OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            //intent指定为我们在服务端创建的service的intent-filter中action的android:name属性。\n            Intent intent = new Intent(\"com.example.servicetest.MyAIDLService\");\n            bindService(intent, connection, BIND_AUTO_CREATE);\n          }\n      });\n    }\n}\n```\n\n## **Messager**\n- 实现 IPC 通信，底层使用的也是 AIDL 方式\n- 不同点，Messager 利用了 Handler 形式处理，因此是线程安全的\n- 不支持多线程处理\n\n### **使用步骤**\n- 客户端绑定服务点，在 ServiceConnection 类的 onServiceConnection 方法中将远程服务穿过来的 binder 对象转换为 Messager 对象，调用 Messager 的 send 函数，将 Message 发送至服务点的 Handler，同时，需要服务端回调客户端（向 Handler 发消息），则可以在 send 的 Message 中设置 replyTo，服务端就可以向客户端发消息。\n- 服务端通过 Message 的 replyTo 取出客户端传递过来的 Messager，这样就可以通过该 Messager 与客户端通信。\n- 服务端通过 Messager 的 getBinder 方法将 IBinder 对象返给客户端，用于共享服务端的 Messager。\n\n### **客户端代码**\n```java\npublic class MainActivity extends Activity {\n  \n    protected static final String TAG = \"MainActivity\";\n    Messenger messenger;\n    Messenger reply;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        reply = new Messenger(handler);\n        Intent intent = new Intent(\"<span style=\"line-height: 25.2px; font-family: Verdana, Arial, Helvetica, sans-serif;\">test.messenger.MessengerTestService</span><span style=\"line-height: 25.2px; font-family: Verdana, Arial, Helvetica, sans-serif;\">\");</span>\n        // 绑定服务\n        bindService(intent, new ServiceConnection() {\n            @Override\n            public void onServiceDisconnected(ComponentName name) {\n            }\n            @Override\n            public void onServiceConnected(ComponentName name, IBinder service) {\n                Toast.makeText(MainActivity.this, \"bind success\", 0).show();\n                messenger = new Messenger(service);//将远程服务端中返回的IBinder对象转换为Messenger对象\n            }\n        }, Context.BIND_AUTO_CREATE);      \n    }\n    public void sendMessage(View v) {\n        Message msg = Message.obtain(null, 1);\n        // 设置回调用的Messenger\n        msg.replyTo = reply;//<span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;font-size:12px; line-height: 25.2px;\">如果需要服务端回调客户端，<span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;font-size:12px; line-height: 25.2px;\">则可以在send的Message中设置replyTo，将客户端的Messenger传递给服务端</span></span>\n        try {\n            messenger.send(msg);\n        } catch (RemoteException e) {\n            e.printStackTrace();\n        }\n    }\n    private Handler handler = new Handler() {//回调Messenger处理的Handler\n        @Override\n        public void handleMessage(Message msg) {\n            Log.d(TAG, \"回调成功\");\n        }\n    };\n}\n\n```\n\n### **服务端代码**\n```java\npublic class MessengerTestService extends Service {\n    protected static final String TAG = \"MessengerTestService\";\n    private Handler mHandler = new Handler() {\n        @Override\n        public void handleMessage(Message msg) {\n            switch (msg.what) {\n            case 1:\n                Log.d(TAG, \"收到消息\");\n                 //获取客户端message中的Messenger，用于回调\n                final Messenger callback = msg.replyTo;\n                try {\n                    // 回调\n                    callback.send(Message.obtain(null, 0));\n                } catch (RemoteException e) {\n                    // TODO Auto-generated catch block\n                    e.printStackTrace();\n                }\n                break;\n            }\n        }\n    };\n    @Override\n    public IBinder onBind(Intent intent) {\n        return new Messenger(mHandler).getBinder();//在onBind（Intent intent）方法中返回Messenger对应的binder对象。\n    }\n}\n```\n- 可以看到该方式与用AIDL方式整体大的框架基本相同，都是在远程服务端的Service中的onBind(Intent intent)中返回Ibinder对象，在客户端的ServiceConnection类的onServiceConnectioned（ComponentName name, IBinder service）中奖Ibinder转换为对应的对象，在AIDL中通过xxx.Stub.asInterface(service);转换为对应的aidl的java类，在Messenger中通过messenger = new Messenger(service);转换为Messenger对象，然后利用这个对象就可相互通信。\n\n# Java 中的 Lock 与 synchronized\n\n\n# App 启动流程\n- 点击桌面应用图标，Launcher 进程将启动 Activity 的请求以 Binder 的方式发送给 AMS\n- AMS 接收到启动请求后，交付 ActivityStarter 处理 Intent 和 Flag 等信息，然后再交给 ActivityStackSupervisior | ActivityStack 处理 Activity 进行栈相关的流程。同时以 Socket 方式请求 Zygote 进程，fork 新的进程\n- Zygote 接收到新进程创建请求后 fork 出新进程\n- 在新进程里创建 ActivityThread 对象，新创建的进程就是应用的主线程，在主线程里开启 Looper 消息循环，开始处理创建 Activity\n- ActivityThread 利用 ClassLoader 去加载 Activity、创建 Activity 实例，并回调 Activity 的 onCreate()方法，这样便完成了 Activity 的启动（performLaunchActivity 方法，Instrumentation.newActivity）\n\n# 应用程序安装到手机上的过程\n- 安装 APK-->拷贝 APK-->/data/app/pkg-->资源管理器加载资源-->机械 AndroidManifes.xml-->/data/data/pkg-->dexopt-->注册四大组件-->安装完毕发送广播\n- 复制 Apk 到/data/app 目录下，解压并扫描安装包\n- 资源管理器解析 Apk 里的资源文件\n- 解析 AndroidManifest 文件，并在/data/data 目录下创建对应的应用数据目录\n- 然后对 dex 文件进行优化，并保存在 dalvik-cache 目录下\n- 将 AndroidManifest 文件解析出的自打组建信息注册到 PackageManagerService 中\n- 安装完成，发送广播\n\n# OkHttp 实现原理\n- 网络配置层：利用 Builder 模式配置各充参数，例如：超时时间、拦截器等\n- 重定向层：负责重定向\n- Header 拼接层：负责把用户构造的请求转换为发送给服务器的请求，把服务器放回的相应转换为对用户友好的响应\n- HTTP 缓存层：负责读取缓存以及更新缓存\n- 连接层：实现网络协议、内部的拦截器、安全性认证、连接与连接池等\n- 数据相应层：负责从服务器读取响应的数据\n\n### Okhttp 中关键的类\n- OkHttpClient：通信的客户端，用来统一管理发起请求与解析相应；\n- Call：是一个接口，她是 Http 请求的抽象描述，具体实现是 RealCall 它由 CallFactory 创建。\n- Request：请求，封装请求的具体信息，例如:url、header 等\n- RequestBody：请求体、用来提交流、表等请求信息\n- Response：HTTP 请求的响应，获取响应信息，例如：响应 header 等\n- ==ResponseBody==：HTTP 请求的响应体，==被读取一次以后就会关闭==，所以我们重复调用 responseBody.string()获取请求结果会报错\n- Interceptor：Interceptor 是请求拦截器，负责拦截并处理请求，它将网络请求、缓存、透明压缩等功能都统一起来，每个功能都是一个 Interceptor，所有的 Interceptor 最终炼成一个 Interceptor.Chain 责任链模式实现，\n- StreamAllocation：用来控制 Connections 与 Streas 的资源分配与释放\n- RouteSelector：选择路线与自动重连\n- RouteDatabase：记录连接失败的 Route 黑名单\n\n# 安卓广播机制有哪些，区别是什么。\n- Normal Broadcast：普通广播\n  - 普通广播会被注册了响应的 intent-filter 接收，且顺序是无序的，如果发送广播时有相应的权限要求，BroadCastReceiver 如果要接收次广播也需要有响应的权限。\n- System Broadcast：系统广播\n  - 只要涉及到手机的基本操作，基本上都会发出响应的系统广播，每个系统广播具有特定的 intent-filter，其中主要包括具体的 action，系统广播发出后，将被响应的 BroadcastReceiver 接收，系统广播在系统内部当特定事件发生时，由系统发出。\n- Ordered Broadcast：有序广播\n  - 有序广播的有序针对的接收者而言，指定的是发送出去的广播被 BroadcastReceiver 按照先后顺序接收，有序广播的定义过程与普通广播没有区别，发送方式变为：sendOrderBroadcast(intent,receiverPermission,...)\n- Sticky Broadcast：粘性广播\n  - 5.0 之后弃用了\n- Local Broadcast：App 应用内广播（App 进程为界）\n  - Android 中的广播可以跨进程，甚至是跨 App 直接通信，且注册是 exported 对于有 intent-filter 的轻卡U那个下默认值是 true，由此将可能出现安全隐患：\n    - 其他 App 可能针对性的发出与当前 App intent-filter 相匹配的广播，由此导致当前 App 不断接收到广播并处理。\n    - 其他 App 可以注册与当前 App 一致的 intent-filter 用于接收广播，获取广播具体信息；\n  - 为了增加安全性，可以按照下面的方式：\n    - 对于同一 App 内部发送和接收广播，将 exported 属性设置为 false ，使得非本 App 内部发出的此广播不被接收；\n    - 在广播发送和接收时，增加相应的 permission，用于权限验证；\n    - 发送广播时，指定特定广播接收器所在的包名，具体是通过 intent.setPackage(packageName)指定，这样此广播将只会发送到此包中的 App 内与之相匹配的有效广播接收器中；\n      - 安全性更高\n      - 更加高效\n     -  LocalBroadcastManager 用于统一处理 App 应用内的广播，使用方式与普通的一样，只是注册\\取消注册广播接收器和发送广播将调用者 context 改为了 LocalBroadcastManager 的单一实例。\n```java\n//registerReceiver(mBroadcastReceiver, intentFilter);\n//注册应用内广播接收器\nlocalBroadcastManager = LocalBroadcastManager.getInstance(this);\nlocalBroadcastManager.registerReceiver(mBroadcastReceiver, intentFilter);\n        \n//unregisterReceiver(mBroadcastReceiver);\n//取消注册应用内广播接收器\nlocalBroadcastManager.unregisterReceiver(mBroadcastReceiver);\n\nIntent intent = new Intent();\nintent.setAction(BROADCAST_ACTION);\nintent.putExtra(\"name\", \"qqyumidi\");\n//sendBroadcast(intent);\n//发送应用内广播\nlocalBroadcastManager.sendBroadcast(intent);\n```\n\n\n做过哪些安卓性能优化？\n\n如何检测应用卡顿，如何优化？\n\n造成安卓oom的原因有哪些？如何处理。\n\nRxJava的实现机制，如何处理背压。\n\nRetureFate实现原理\n\n对现在存在的Glide还有哪些优化方案？\n\n安卓中的内存泄漏如何解决，为什么会造成内存泄漏？\n\n如何检测内存泄漏？\n\n点击桌面应用图标之后发什么什么，回调了哪些方法。\n\njava中的lock相关。\n\nActivity  与 Fragment 相关生命周期对照\n\n能不能试用Applaction启动一个Activity为什么不能？\n\nAMS，PMS，WMS\n\n文件存储，分别使用的场景，SP是线程安全的么？是进程安全的么？如何保证安全性",[[1553178104105,["KotlinD@DESKTOP-JV8VAO0",[[1,18036,"\n"]],[18034,18034],[18035,18035]]]],null,"KotlinD@DESKTOP-JV8VAO0"]]}