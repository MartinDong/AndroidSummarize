{"compress":true,"commitItems":[["9a5c1255-5e07-409d-92eb-5c020a92d69c",1519450064554,"",[[1519450060619,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,0,"#### 一、下载最新的Runner\n\n```\n# For RHEL/CentOS/Fedora\ncurl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh | sudo bash\n\n```\n\n#### [](#二-安装最新版本的gitlab-runner或跳到下一步安装特定版本)二、安装最新版本的GitLab Runner，或跳到下一步安装特定版本：\n\n```\n# For RHEL/CentOS/Fedora\nsudo yum install gitlab-runner\n\n```\n\n#### [](#三-要安装特定版本的gitlab-runner请执行以下操作)三、要安装特定版本的GitLab Runner，请执行以下操作：\n\n```\n# for RPM based systems\nyum list gitlab-runner --showduplicates | sort -r\nsudo yum install gitlab-runner-10.0.0-1\n\n```\n\n========================================================\n\n### [](#绑定要监听的gitlab)绑定要监听的GitLab\n\n#### [](#一-运行下面的命令开始注册)一、运行下面的命令开始注册\n\n```\nsudo gitlab-runner register\n\n```\n\n#### [](#二-输入你的gitlab实例url)二、输入你的GitLab实例URL\n\n```\nPlease enter the gitlab-ci coordinator URL (e.g. https://gitlab.com )\nhttps://gitlab.com\n\n```\n\n#### [](#三-输入您获得的注册runner的令牌)三、输入您获得的注册Runner的令牌：\n\n```\nPlease enter the gitlab-ci token for this runner\nxxx\n\n```\n\n#### [](#四-输入runner的描述你可以稍后在gitlab的ui中进行更改)四、输入Runner的描述，你可以稍后在GitLab的UI中进行更改\n\n```\nPlease enter the gitlab-ci description for this runner\n[hostame] my-runner\n\n```\n\n#### [](#五-输入与runner关联的标签稍后可以在gitlab的ui中进行更改)五、输入与Runner关联的标签，稍后可以在GitLab的UI中进行更改\n\n```\nPlease enter the gitlab-ci tags for this runner (comma separated):\nmy-tag,another-tag\n\n```\n\n#### [](#六-选择runner是否应该选择没有标签的作业可以稍后在gitlab的ui中进行更改默认为false)六、选择Runner是否应该选择没有标签的作业，可以稍后在GitLab的UI中进行更改（默认为false）\n\n```\nWhether to run untagged jobs [true/false]:\n[false]: true\n\n```\n\n#### [](#七-选择是否将runner锁定到当前项目稍后可以在gitlab的ui中进行更改-runner特定时有用默认为true)七、选择是否将Runner锁定到当前项目，稍后可以在GitLab的UI中进行更改。 Runner特定时有用（默认为true）\n\n```\nWhether to lock Runner to current project [true/false]:\n[true]: true\n\n```\n\n#### [](#八-输入runner执行者)八、输入Runner执行者\n\n```\nPlease enter the executor: ssh, docker+machine, docker-ssh+machine, kubernetes, docker, parallels, virtualbox, docker-ssh, shell:\ndocker\nshell\n\n```\n\n#### [](#九-如果您选择docker作为您的执行程序则会要求您为默认图像用于未在gitlab-ciyml中定义一个的项目)九、如果您选择Docker作为您的执行程序，则会要求您为默认图像用于未在.gitlab-ci.yml中定义一个的项目\n\n```\nPlease enter the Docker image (eg. ruby:2.1):\nalpine:latest\n```"]],[0,0],[2052,2052]]],[1519450070382,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,0,"#### 一、下载最新的Runner\n\n```\n# For RHEL/CentOS/Fedora\ncurl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh | sudo bash\n\n```\n\n#### [](#二-安装最新版本的gitlab-runner或跳到下一步安装特定版本)二、安装最新版本的GitLab Runner，或跳到下一步安装特定版本：\n\n```\n# For RHEL/CentOS/Fedora\nsudo yum install gitlab-runner\n\n```\n\n#### [](#三-要安装特定版本的gitlab-runner请执行以下操作)三、要安装特定版本的GitLab Runner，请执行以下操作：\n\n```\n# for RPM based systems\nyum list gitlab-runner --showduplicates | sort -r\nsudo yum install gitlab-runner-10.0.0-1\n\n```\n\n========================================================\n\n### [](#绑定要监听的gitlab)绑定要监听的GitLab\n\n#### [](#一-运行下面的命令开始注册)一、运行下面的命令开始注册\n\n```\nsudo gitlab-runner register\n\n```\n\n#### [](#二-输入你的gitlab实例url)二、输入你的GitLab实例URL\n\n```\nPlease enter the gitlab-ci coordinator URL (e.g. https://gitlab.com )\nhttps://gitlab.com\n\n```\n\n#### [](#三-输入您获得的注册runner的令牌)三、输入您获得的注册Runner的令牌：\n\n```\nPlease enter the gitlab-ci token for this runner\nxxx\n\n```\n\n#### [](#四-输入runner的描述你可以稍后在gitlab的ui中进行更改)四、输入Runner的描述，你可以稍后在GitLab的UI中进行更改\n\n```\nPlease enter the gitlab-ci description for this runner\n[hostame] my-runner\n\n```\n\n#### [](#五-输入与runner关联的标签稍后可以在gitlab的ui中进行更改)五、输入与Runner关联的标签，稍后可以在GitLab的UI中进行更改\n\n```\nPlease enter the gitlab-ci tags for this runner (comma separated):\nmy-tag,another-tag\n\n```\n\n#### [](#六-选择runner是否应该选择没有标签的作业可以稍后在gitlab的ui中进行更改默认为false)六、选择Runner是否应该选择没有标签的作业，可以稍后在GitLab的UI中进行更改（默认为false）\n\n```\nWhether to run untagged jobs [true/false]:\n[false]: true\n\n```\n\n#### [](#七-选择是否将runner锁定到当前项目稍后可以在gitlab的ui中进行更改-runner特定时有用默认为true)七、选择是否将Runner锁定到当前项目，稍后可以在GitLab的UI中进行更改。 Runner特定时有用（默认为true）\n\n```\nWhether to lock Runner to current project [true/false]:\n[true]: true\n\n```\n\n#### [](#八-输入runner执行者)八、输入Runner执行者\n\n```\nPlease enter the executor: ssh, docker+machine, docker-ssh+machine, kubernetes, docker, parallels, virtualbox, docker-ssh, shell:\ndocker\nshell\n\n```\n\n#### [](#九-如果您选择docker作为您的执行程序则会要求您为默认图像用于未在gitlab-ciyml中定义一个的项目)九、如果您选择Docker作为您的执行程序，则会要求您为默认图像用于未在.gitlab-ci.yml中定义一个的项目\n\n```\nPlease enter the Docker image (eg. ruby:2.1):\nalpine:latest\n```"]],[2052,2052],[0,0]]],[1519450074499,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,0,"#### 一、下载最新的Runner\n\n```\n# For RHEL/CentOS/Fedora\ncurl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh | sudo bash\n\n```\n\n#### [](#二-安装最新版本的gitlab-runner或跳到下一步安装特定版本)二、安装最新版本的GitLab Runner，或跳到下一步安装特定版本：\n\n```\n# For RHEL/CentOS/Fedora\nsudo yum install gitlab-runner\n\n```\n\n#### [](#三-要安装特定版本的gitlab-runner请执行以下操作)三、要安装特定版本的GitLab Runner，请执行以下操作：\n\n```\n# for RPM based systems\nyum list gitlab-runner --showduplicates | sort -r\nsudo yum install gitlab-runner-10.0.0-1\n\n```\n\n========================================================\n\n### [](#绑定要监听的gitlab)绑定要监听的GitLab\n\n#### [](#一-运行下面的命令开始注册)一、运行下面的命令开始注册\n\n```\nsudo gitlab-runner register\n\n```\n\n#### [](#二-输入你的gitlab实例url)二、输入你的GitLab实例URL\n\n```\nPlease enter the gitlab-ci coordinator URL (e.g. https://gitlab.com )\nhttps://gitlab.com\n\n```\n\n#### [](#三-输入您获得的注册runner的令牌)三、输入您获得的注册Runner的令牌：\n\n```\nPlease enter the gitlab-ci token for this runner\nxxx\n\n```\n\n#### [](#四-输入runner的描述你可以稍后在gitlab的ui中进行更改)四、输入Runner的描述，你可以稍后在GitLab的UI中进行更改\n\n```\nPlease enter the gitlab-ci description for this runner\n[hostame] my-runner\n\n```\n\n#### [](#五-输入与runner关联的标签稍后可以在gitlab的ui中进行更改)五、输入与Runner关联的标签，稍后可以在GitLab的UI中进行更改\n\n```\nPlease enter the gitlab-ci tags for this runner (comma separated):\nmy-tag,another-tag\n\n```\n\n#### [](#六-选择runner是否应该选择没有标签的作业可以稍后在gitlab的ui中进行更改默认为false)六、选择Runner是否应该选择没有标签的作业，可以稍后在GitLab的UI中进行更改（默认为false）\n\n```\nWhether to run untagged jobs [true/false]:\n[false]: true\n\n```\n\n#### [](#七-选择是否将runner锁定到当前项目稍后可以在gitlab的ui中进行更改-runner特定时有用默认为true)七、选择是否将Runner锁定到当前项目，稍后可以在GitLab的UI中进行更改。 Runner特定时有用（默认为true）\n\n```\nWhether to lock Runner to current project [true/false]:\n[true]: true\n\n```\n\n#### [](#八-输入runner执行者)八、输入Runner执行者\n\n```\nPlease enter the executor: ssh, docker+machine, docker-ssh+machine, kubernetes, docker, parallels, virtualbox, docker-ssh, shell:\ndocker\nshell\n\n```\n\n#### [](#九-如果您选择docker作为您的执行程序则会要求您为默认图像用于未在gitlab-ciyml中定义一个的项目)九、如果您选择Docker作为您的执行程序，则会要求您为默认图像用于未在.gitlab-ci.yml中定义一个的项目\n\n```\nPlease enter the Docker image (eg. ruby:2.1):\nalpine:latest\n```"]],[0,0],[2052,2052]]]]]]}