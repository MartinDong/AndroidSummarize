{"compress":true,"commitItems":[["88072d26-be20-41eb-8de9-2ed2f0afb989",1519366519391,"",[[1519366517920,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,0,"学无止境，精益求精！\n\n十年河东，十年河西，莫欺少年穷！\n\n学历代表你的过去，能力代表你的现在，学习代表你的将来！\n\n本篇博客是转发的别人的，原文地址：[http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html](http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html)\n\n很久没写博客了，都是工作太忙闹的，索性今儿转发一篇！省的博客园太冷清了...\n\nGit图形化界面我用的还可以，但是命令就不太会了，索性和大家一起学习下Git命令的用法...\n\n一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。\n\n![](http://www.ruanyifeng.com/blogimg/asset/2015/bg2015120901.png)\n\n下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。\n\n> *   Workspace：工作区\n> *   Index / Stage：暂存区\n> *   Repository：仓库区（或本地仓库）\n> *   Remote：远程仓库\n\n## 一、新建代码库\n\n> ```bash\n> \n> # 在当前目录新建一个Git代码库\n> $ git init\n> \n> # 新建一个目录，将其初始化为Git代码库\n> $ git init [project-name]\n> \n> # 下载一个项目和它的整个代码历史\n> $ git clone [url]\n> \n> ```\n\n## 二、配置\n\nGit的设置文件为`.gitconfig`，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。\n\n> ```bash\n> \n> # 显示当前的Git配置\n> $ git config --list\n> \n> # 编辑Git配置文件\n> $ git config -e [--global]\n> \n> # 设置提交代码时的用户信息\n> $ git config [--global] user.name \"[name]\"\n> $ git config [--global] user.email \"[email address]\"\n> \n> ```\n\n## 三、增加/删除文件\n\n> ```bash\n> \n> # 添加指定文件到暂存区\n> $ git add [file1] [file2] ...\n> \n> # 添加指定目录到暂存区，包括子目录\n> $ git add [dir]\n> \n> # 添加当前目录的所有文件到暂存区\n> $ git add .\n> \n> # 添加每个变化前，都会要求确认\n> # 对于同一个文件的多处变化，可以实现分次提交\n> $ git add -p\n> \n> # 删除工作区文件，并且将这次删除放入暂存区\n> $ git rm [file1] [file2] ...\n> \n> # 停止追踪指定文件，但该文件会保留在工作区\n> $ git rm --cached [file]\n> \n> # 改名文件，并且将这个改名放入暂存区\n> $ git mv [file-original] [file-renamed]\n> \n> ```\n\n## 四、代码提交\n\n> ```bash\n> \n> # 提交暂存区到仓库区\n> $ git commit -m [message]\n> \n> # 提交暂存区的指定文件到仓库区\n> $ git commit [file1] [file2] ... -m [message]\n> \n> # 提交工作区自上次commit之后的变化，直接到仓库区\n> $ git commit -a\n> \n> # 提交时显示所有diff信息\n> $ git commit -v\n> \n> # 使用一次新的commit，替代上一次提交\n> # 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n> $ git commit --amend -m [message]\n> \n> # 重做上一次commit，并包括指定文件的新变化\n> $ git commit --amend [file1] [file2] ...\n> \n> ```\n\n## 五、分支\n\n> ```bash\n> \n> # 列出所有本地分支\n> $ git branch\n> \n> # 列出所有远程分支\n> $ git branch -r\n> \n> # 列出所有本地分支和远程分支\n> $ git branch -a\n> \n> # 新建一个分支，但依然停留在当前分支\n> $ git branch [branch-name]\n> \n> # 新建一个分支，并切换到该分支\n> $ git checkout -b [branch]\n> \n> # 新建一个分支，指向指定commit\n> $ git branch [branch] [commit]\n> \n> # 新建一个分支，与指定的远程分支建立追踪关系\n> $ git branch --track [branch] [remote-branch]\n> \n> # 切换到指定分支，并更新工作区\n> $ git checkout [branch-name]\n> \n> # 切换到上一个分支\n> $ git checkout -\n> \n> # 建立追踪关系，在现有分支与指定的远程分支之间\n> $ git branch --set-upstream [branch] [remote-branch]\n> \n> # 合并指定分支到当前分支\n> $ git merge [branch]\n> \n> # 选择一个commit，合并进当前分支\n> $ git cherry-pick [commit]\n> \n> # 删除分支\n> $ git branch -d [branch-name]\n> \n> # 删除远程分支\n> $ git push origin --delete [branch-name]\n> $ git branch -dr [remote/branch]\n> \n> ```\n\n## 六、标签\n\n> ```bash\n> \n> # 列出所有tag\n> $ git tag\n> \n> # 新建一个tag在当前commit\n> $ git tag [tag]\n> \n> # 新建一个tag在指定commit\n> $ git tag [tag] [commit]\n> \n> # 删除本地tag\n> $ git tag -d [tag]\n> \n> # 删除远程tag\n> $ git push origin :refs/tags/[tagName]\n> \n> # 查看tag信息\n> $ git show [tag]\n> \n> # 提交指定tag\n> $ git push [remote] [tag]\n> \n> # 提交所有tag\n> $ git push [remote] --tags\n> \n> # 新建一个分支，指向某个tag\n> $ git checkout -b [branch] [tag]\n> \n> ```\n\n## 七、查看信息\n\n> ```bash\n> \n> # 显示有变更的文件\n> $ git status\n> \n> # 显示当前分支的版本历史\n> $ git log\n> \n> # 显示commit历史，以及每次commit发生变更的文件\n> $ git log --stat\n> \n> # 搜索提交历史，根据关键词\n> $ git log -S [keyword]\n> \n> # 显示某个commit之后的所有变动，每个commit占据一行\n> $ git log [tag] HEAD --pretty=format:%s\n> \n> # 显示某个commit之后的所有变动，其\"提交说明\"必须符合搜索条件\n> $ git log [tag] HEAD --grep feature\n> \n> # 显示某个文件的版本历史，包括文件改名\n> $ git log --follow [file]\n> $ git whatchanged [file]\n> \n> # 显示指定文件相关的每一次diff\n> $ git log -p [file]\n> \n> # 显示过去5次提交\n> $ git log -5 --pretty --oneline\n> \n> # 显示所有提交过的用户，按提交次数排序\n> $ git shortlog -sn\n> \n> # 显示指定文件是什么人在什么时间修改过\n> $ git blame [file]\n> \n> # 显示暂存区和工作区的代码差异\n> $ git diff\n> \n> # 显示暂存区和上一个commit的差异\n> $ git diff --cached [file]\n> \n> # 显示工作区与当前分支最新commit之间的差异\n> $ git diff HEAD\n> \n> # 显示两次提交之间的差异\n> $ git diff [first-branch]...[second-branch]\n> \n> # 显示今天你写了多少行代码\n> $ git diff --shortstat \"@{0 day ago}\"\n> \n> # 显示某次提交的元数据和内容变化\n> $ git show [commit]\n> \n> # 显示某次提交发生变化的文件\n> $ git show --name-only [commit]\n> \n> # 显示某次提交时，某个文件的内容\n> $ git show [commit]:[filename]\n> \n> # 显示当前分支的最近几次提交\n> $ git reflog# 从本地master拉取代码更新当前分支：branch 一般为master$ git rebase [branch]\n> ```\n\n## 八、远程同步\n\n> ```bash\n> \n> # 下载远程仓库的所有变动\n> $ git fetch [remote]\n> \n> # 显示所有远程仓库\n> $ git remote -v\n> \n> # 显示某个远程仓库的信息\n> $ git remote show [remote]\n> \n> # 增加一个新的远程仓库，并命名\n> $ git remote add [shortname] [url]\n> \n> # 取回远程仓库的变化，并与本地分支合并\n> $ git pull [remote] [branch]\n> \n> # 上传本地指定分支到远程仓库\n> $ git push [remote] [branch]\n> \n> # 强行推送当前分支到远程仓库，即使有冲突\n> $ git push [remote] --force\n> \n> # 推送所有分支到远程仓库\n> $ git push [remote] --all\n> \n> ```\n\n## 九、撤销\n\n> ```bash\n> \n> # 恢复暂存区的指定文件到工作区\n> $ git checkout [file]\n> \n> # 恢复某个commit的指定文件到暂存区和工作区\n> $ git checkout [commit] [file]\n> \n> # 恢复暂存区的所有文件到工作区\n> $ git checkout .\n> \n> # 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n> $ git reset [file]\n> \n> # 重置暂存区与工作区，与上一次commit保持一致\n> $ git reset --hard\n> \n> # 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n> $ git reset [commit]\n> \n> # 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\n> $ git reset --hard [commit]\n> \n> # 重置当前HEAD为指定commit，但保持暂存区和工作区不变\n> $ git reset --keep [commit]\n> \n> # 新建一个commit，用来撤销指定commit\n> # 后者的所有变化都将被前者抵消，并且应用到当前分支\n> $ git revert [commit]\n> \n> # 暂时将未提交的变化移除，稍后再移入\n> $ git stash\n> $ git stash pop\n> \n> ```\n\n## 十、其他\n\n> ```bash\n> \n> # 生成一个可供发布的压缩包\n> $ git archive\n> ```"]],[0,0],[5274,5274]]]]],["6f33e65b-6277-4c02-9cb3-4296fdc11e05",1524533846139,"学无止境，精益求精！\n\n十年河东，十年河西，莫欺少年穷！\n\n学历代表你的过去，能力代表你的现在，学习代表你的将来！\n\n本篇博客是转发的别人的，原文地址：[http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html](http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html)\n\n很久没写博客了，都是工作太忙闹的，索性今儿转发一篇！省的博客园太冷清了...\n\nGit图形化界面我用的还可以，但是命令就不太会了，索性和大家一起学习下Git命令的用法...\n\n一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。\n\n![](http://www.ruanyifeng.com/blogimg/asset/2015/bg2015120901.png)\n\n下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。\n\n> *   Workspace：工作区\n> *   Index / Stage：暂存区\n> *   Repository：仓库区（或本地仓库）\n> *   Remote：远程仓库\n\n## 一、新建代码库\n\n> ```bash\n> \n> # 在当前目录新建一个Git代码库\n> $ git init\n> \n> # 新建一个目录，将其初始化为Git代码库\n> $ git init [project-name]\n> \n> # 下载一个项目和它的整个代码历史\n> $ git clone [url]\n> \n> ```\n\n## 二、配置\n\nGit的设置文件为`.gitconfig`，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。\n\n> ```bash\n> \n> # 显示当前的Git配置\n> $ git config --list\n> \n> # 编辑Git配置文件\n> $ git config -e [--global]\n> \n> # 设置提交代码时的用户信息\n> $ git config [--global] user.name \"[name]\"\n> $ git config [--global] user.email \"[email address]\"\n> \n> ```\n\n## 三、增加/删除文件\n\n> ```bash\n> \n> # 添加指定文件到暂存区\n> $ git add [file1] [file2] ...\n> \n> # 添加指定目录到暂存区，包括子目录\n> $ git add [dir]\n> \n> # 添加当前目录的所有文件到暂存区\n> $ git add .\n> \n> # 添加每个变化前，都会要求确认\n> # 对于同一个文件的多处变化，可以实现分次提交\n> $ git add -p\n> \n> # 删除工作区文件，并且将这次删除放入暂存区\n> $ git rm [file1] [file2] ...\n> \n> # 停止追踪指定文件，但该文件会保留在工作区\n> $ git rm --cached [file]\n> \n> # 改名文件，并且将这个改名放入暂存区\n> $ git mv [file-original] [file-renamed]\n> \n> ```\n\n## 四、代码提交\n\n> ```bash\n> \n> # 提交暂存区到仓库区\n> $ git commit -m [message]\n> \n> # 提交暂存区的指定文件到仓库区\n> $ git commit [file1] [file2] ... -m [message]\n> \n> # 提交工作区自上次commit之后的变化，直接到仓库区\n> $ git commit -a\n> \n> # 提交时显示所有diff信息\n> $ git commit -v\n> \n> # 使用一次新的commit，替代上一次提交\n> # 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n> $ git commit --amend -m [message]\n> \n> # 重做上一次commit，并包括指定文件的新变化\n> $ git commit --amend [file1] [file2] ...\n> \n> ```\n\n## 五、分支\n\n> ```bash\n> \n> # 列出所有本地分支\n> $ git branch\n> \n> # 列出所有远程分支\n> $ git branch -r\n> \n> # 列出所有本地分支和远程分支\n> $ git branch -a\n> \n> # 新建一个分支，但依然停留在当前分支\n> $ git branch [branch-name]\n> \n> # 新建一个分支，并切换到该分支\n> $ git checkout -b [branch]\n> \n> # 新建一个分支，指向指定commit\n> $ git branch [branch] [commit]\n> \n> # 新建一个分支，与指定的远程分支建立追踪关系\n> $ git branch --track [branch] [remote-branch]\n> \n> # 切换到指定分支，并更新工作区\n> $ git checkout [branch-name]\n> \n> # 切换到上一个分支\n> $ git checkout -\n> \n> # 建立追踪关系，在现有分支与指定的远程分支之间\n> $ git branch --set-upstream [branch] [remote-branch]\n> \n> # 合并指定分支到当前分支\n> $ git merge [branch]\n> \n> # 选择一个commit，合并进当前分支\n> $ git cherry-pick [commit]\n> \n> # 删除分支\n> $ git branch -d [branch-name]\n> \n> # 删除远程分支\n> $ git push origin --delete [branch-name]\n> $ git branch -dr [remote/branch]\n> \n> ```\n\n## 六、标签\n\n> ```bash\n> \n> # 列出所有tag\n> $ git tag\n> \n> # 新建一个tag在当前commit\n> $ git tag [tag]\n> \n> # 新建一个tag在指定commit\n> $ git tag [tag] [commit]\n> \n> # 删除本地tag\n> $ git tag -d [tag]\n> \n> # 删除远程tag\n> $ git push origin :refs/tags/[tagName]\n> \n> # 查看tag信息\n> $ git show [tag]\n> \n> # 提交指定tag\n> $ git push [remote] [tag]\n> \n> # 提交所有tag\n> $ git push [remote] --tags\n> \n> # 新建一个分支，指向某个tag\n> $ git checkout -b [branch] [tag]\n> \n> ```\n\n## 七、查看信息\n\n> ```bash\n> \n> # 显示有变更的文件\n> $ git status\n> \n> # 显示当前分支的版本历史\n> $ git log\n> \n> # 显示commit历史，以及每次commit发生变更的文件\n> $ git log --stat\n> \n> # 搜索提交历史，根据关键词\n> $ git log -S [keyword]\n> \n> # 显示某个commit之后的所有变动，每个commit占据一行\n> $ git log [tag] HEAD --pretty=format:%s\n> \n> # 显示某个commit之后的所有变动，其\"提交说明\"必须符合搜索条件\n> $ git log [tag] HEAD --grep feature\n> \n> # 显示某个文件的版本历史，包括文件改名\n> $ git log --follow [file]\n> $ git whatchanged [file]\n> \n> # 显示指定文件相关的每一次diff\n> $ git log -p [file]\n> \n> # 显示过去5次提交\n> $ git log -5 --pretty --oneline\n> \n> # 显示所有提交过的用户，按提交次数排序\n> $ git shortlog -sn\n> \n> # 显示指定文件是什么人在什么时间修改过\n> $ git blame [file]\n> \n> # 显示暂存区和工作区的代码差异\n> $ git diff\n> \n> # 显示暂存区和上一个commit的差异\n> $ git diff --cached [file]\n> \n> # 显示工作区与当前分支最新commit之间的差异\n> $ git diff HEAD\n> \n> # 显示两次提交之间的差异\n> $ git diff [first-branch]...[second-branch]\n> \n> # 显示今天你写了多少行代码\n> $ git diff --shortstat \"@{0 day ago}\"\n> \n> # 显示某次提交的元数据和内容变化\n> $ git show [commit]\n> \n> # 显示某次提交发生变化的文件\n> $ git show --name-only [commit]\n> \n> # 显示某次提交时，某个文件的内容\n> $ git show [commit]:[filename]\n> \n> # 显示当前分支的最近几次提交\n> $ git reflog# 从本地master拉取代码更新当前分支：branch 一般为master$ git rebase [branch]\n> ```\n\n## 八、远程同步\n\n> ```bash\n> \n> # 下载远程仓库的所有变动\n> $ git fetch [remote]\n> \n> # 显示所有远程仓库\n> $ git remote -v\n> \n> # 显示某个远程仓库的信息\n> $ git remote show [remote]\n> \n> # 增加一个新的远程仓库，并命名\n> $ git remote add [shortname] [url]\n> \n> # 取回远程仓库的变化，并与本地分支合并\n> $ git pull [remote] [branch]\n> \n> # 上传本地指定分支到远程仓库\n> $ git push [remote] [branch]\n> \n> # 强行推送当前分支到远程仓库，即使有冲突\n> $ git push [remote] --force\n> \n> # 推送所有分支到远程仓库\n> $ git push [remote] --all\n> \n> ```\n\n## 九、撤销\n\n> ```bash\n> \n> # 恢复暂存区的指定文件到工作区\n> $ git checkout [file]\n> \n> # 恢复某个commit的指定文件到暂存区和工作区\n> $ git checkout [commit] [file]\n> \n> # 恢复暂存区的所有文件到工作区\n> $ git checkout .\n> \n> # 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n> $ git reset [file]\n> \n> # 重置暂存区与工作区，与上一次commit保持一致\n> $ git reset --hard\n> \n> # 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n> $ git reset [commit]\n> \n> # 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\n> $ git reset --hard [commit]\n> \n> # 重置当前HEAD为指定commit，但保持暂存区和工作区不变\n> $ git reset --keep [commit]\n> \n> # 新建一个commit，用来撤销指定commit\n> # 后者的所有变化都将被前者抵消，并且应用到当前分支\n> $ git revert [commit]\n> \n> # 暂时将未提交的变化移除，稍后再移入\n> $ git stash\n> $ git stash pop\n> \n> ```\n\n## 十、其他\n\n> ```bash\n> \n> # 生成一个可供发布的压缩包\n> $ git archive\n> ```",[[1524533833134,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5223,">"]],[5223,5224],[5223,5223]]],[1524533835420,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5232,"> \n> "]],[5232,5237],[5232,5232]]],[1524533837107,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5247,">"]],[5247,5248],[5247,5247]]],[1524533838795,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5262,">"]],[5262,5263],[5262,5262]]],[1524533843644,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5231,"\n"]],[5232,5232],[5231,5231]]],[1524533844347,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5231,"\n"]],[5231,5231],[5232,5232]]],[1524533869211,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4574,"> "],[-1,4583,"\n> \n> "],[1,4589,"\r\n\r\n"],[1,4605,"\r"],[-1,4606,"> "],[-1,4629,"\n> \n> "],[1,4635,"\r\n\r\n"],[1,4660,"\r"],[-1,4661,"> "],[-1,4693,"\n> \n> "],[1,4699,"\r\n\r\n"],[1,4715,"\r"],[-1,4716,"> "],[-1,4734,"\n> \n> "],[1,4740,"\r\n\r\n"],[1,4774,"\r"],[-1,4775,"> "],[-1,4795,"\n> \n> "],[1,4801,"\r\n\r\n"],[1,4827,"\r"],[-1,4828,"> "],[-1,4848,"\n> \n> "],[1,4854,"\r\n\r\n"],[1,4889,"\r"],[-1,4890,"> "],[-1,4912,"\n> \n> "],[1,4918,"\r\n\r\n"],[1,4964,"\r"],[-1,4965,"> "],[-1,4994,"\n> \n> "],[1,5000,"\r\n\r\n"],[1,5032,"\r"],[-1,5033,"> "],[-1,5062,"\n> \n> "],[1,5068,"\r\n\r\n"],[1,5093,"\r"],[-1,5094,"> "],[1,5122,"\r"],[-1,5123,"> "],[-1,5146,"\n> \n> "],[1,5152,"\r\n\r\n"],[1,5171,"\r"],[-1,5172,"> "],[1,5185,"\r"],[-1,5186,"> "],[-1,5203,"\n> \n> "],[1,5209,"\r\n\r\n"]],[4574,5212],[5176,5176]]],[1524533906937,[null,[[-1,4581,"\r\n\r"],[1,4584,"\n\n\n"],[-1,4601,"\r"],[1,4602,"\n"],[-1,4624,"\r\n\r"],[1,4627,"\n\n\n"],[-1,4653,"\r"],[1,4654,"\n"],[-1,4685,"\r\n\r"],[1,4688,"\n\n\n"],[-1,4705,"\r"],[1,4706,"\n"],[-1,4723,"\r\n\r"],[1,4726,"\n\n\n"],[-1,4761,"\r"],[1,4762,"\n"],[-1,4781,"\r\n\r"],[1,4784,"\n\n\n"],[-1,4811,"\r"],[1,4812,"\n"],[-1,4831,"\r\n\r"],[1,4834,"\n\n\n"],[-1,4870,"\r"],[1,4871,"\n"],[-1,4892,"\r\n\r"],[1,4895,"\n\n\n"],[-1,4942,"\r"],[1,4943,"\n"],[-1,4971,"\r\n\r"],[1,4974,"\n\n\n"],[-1,5007,"\r"],[1,5008,"\n"],[-1,5036,"\r\n\r"],[1,5039,"\n\n\n"],[-1,5065,"\r"],[1,5066,"\n"],[-1,5093,"\r"],[1,5094,"\n"],[-1,5116,"\r\n\r"],[1,5119,"\n\n\n"],[-1,5139,"\r"],[1,5140,"\n"],[-1,5152,"\r"],[1,5153,"\n"],[-1,5169,"\r\n\r"],[1,5172,"\n\n\n"]],[4581,4581],[5175,5175]]],[1524533906938,[null,[[1,4581,"\r\n\r"],[-1,4581,"\n\n\n"],[1,4601,"\r"],[-1,4601,"\n"],[1,4624,"\r\n\r"],[-1,4624,"\n\n\n"],[1,4653,"\r"],[-1,4653,"\n"],[1,4685,"\r\n\r"],[-1,4685,"\n\n\n"],[1,4705,"\r"],[-1,4705,"\n"],[1,4723,"\r\n\r"],[-1,4723,"\n\n\n"],[1,4761,"\r"],[-1,4761,"\n"],[1,4781,"\r\n\r"],[-1,4781,"\n\n\n"],[1,4811,"\r"],[-1,4811,"\n"],[1,4831,"\r\n\r"],[-1,4831,"\n\n\n"],[1,4870,"\r"],[-1,4870,"\n"],[1,4892,"\r\n\r"],[-1,4892,"\n\n\n"],[1,4942,"\r"],[-1,4942,"\n"],[1,4971,"\r\n\r"],[-1,4971,"\n\n\n"],[1,5007,"\r"],[-1,5007,"\n"],[1,5036,"\r\n\r"],[-1,5036,"\n\n\n"],[1,5065,"\r"],[-1,5065,"\n"],[1,5093,"\r"],[-1,5093,"\n"],[1,5116,"\r\n\r"],[-1,5116,"\n\n\n"],[1,5139,"\r"],[-1,5139,"\n"],[1,5152,"\r"],[-1,5152,"\n"],[1,5169,"\r\n\r"],[-1,5169,"\n\n\n"]],[5175,5175],[4581,4581]]],[1524533905616,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4149,"> "],[-1,4158,"\n> \n> "],[1,4164,"\r\n\r\n"],[1,4177,"\r"],[-1,4178,"> "],[-1,4200,"\n> \n> "],[1,4206,"\r\n\r\n"],[1,4216,"\r"],[-1,4217,"> "],[-1,4234,"\n> \n> "],[1,4240,"\r\n\r\n"],[1,4253,"\r"],[-1,4254,"> "],[-1,4282,"\n> \n> "],[1,4288,"\r\n\r\n"],[1,4304,"\r"],[-1,4305,"> "],[-1,4341,"\n> \n> "],[1,4347,"\r\n\r\n"],[1,4367,"\r"],[-1,4368,"> "],[-1,4398,"\n> \n> "],[1,4404,"\r\n\r\n"],[1,4419,"\r"],[-1,4420,"> "],[-1,4450,"\n> \n> "],[1,4456,"\r\n\r\n"],[1,4477,"\r"],[-1,4478,"> "],[-1,4507,"\n> \n> "],[1,4513,"\r\n\r\n"],[1,4526,"\r"],[-1,4527,"> "],[-1,4554,"\n> \n> "],[1,4560,"\r\n\r\n"],[-1,4581,"\r"],[-1,4583,"\r"],[-1,4601,"\r"],[-1,4624,"\r"],[-1,4626,"\r"],[-1,4653,"\r"],[-1,4685,"\r"],[-1,4687,"\r"],[-1,4705,"\r"],[-1,4723,"\r"],[-1,4725,"\r"],[-1,4761,"\r"],[-1,4781,"\r"],[-1,4783,"\r"],[-1,4811,"\r"],[-1,4831,"\r"],[-1,4833,"\r"],[-1,4870,"\r"],[-1,4892,"\r"],[-1,4894,"\r"],[-1,4942,"\r"],[-1,4971,"\r"],[-1,4973,"\r"],[-1,5007,"\r"],[-1,5036,"\r"],[-1,5038,"\r"],[-1,5065,"\r"],[-1,5093,"\r"],[-1,5116,"\r"],[-1,5118,"\r"],[-1,5139,"\r"],[-1,5152,"\r"],[-1,5169,"\r"],[-1,5171,"\r"]],[4149,4563],[4535,4535]]],[1524533966932,[null,[[-1,4156,"\r\n\r"],[1,4159,"\n\n\n"],[-1,4173,"\r"],[1,4174,"\n"],[-1,4195,"\r\n\r"],[1,4198,"\n\n\n"],[-1,4209,"\r"],[1,4210,"\n"],[-1,4226,"\r\n\r"],[1,4229,"\n\n\n"],[-1,4243,"\r"],[1,4244,"\n"],[-1,4271,"\r\n\r"],[1,4274,"\n\n\n"],[-1,4291,"\r"],[1,4292,"\n"],[-1,4327,"\r\n\r"],[1,4330,"\n\n\n"],[-1,4351,"\r"],[1,4352,"\n"],[-1,4381,"\r\n\r"],[1,4384,"\n\n\n"],[-1,4400,"\r"],[1,4401,"\n"],[-1,4430,"\r\n\r"],[1,4433,"\n\n\n"],[-1,4455,"\r"],[1,4456,"\n"],[-1,4484,"\r\n\r"],[1,4487,"\n\n\n"],[-1,4501,"\r"],[1,4502,"\n"],[-1,4528,"\r\n\r"],[1,4531,"\n\n\n"]],[4156,4156],[4534,4534]]],[1524533966932,[null,[[1,4156,"\r\n\r"],[-1,4156,"\n\n\n"],[1,4173,"\r"],[-1,4173,"\n"],[1,4195,"\r\n\r"],[-1,4195,"\n\n\n"],[1,4209,"\r"],[-1,4209,"\n"],[1,4226,"\r\n\r"],[-1,4226,"\n\n\n"],[1,4243,"\r"],[-1,4243,"\n"],[1,4271,"\r\n\r"],[-1,4271,"\n\n\n"],[1,4291,"\r"],[-1,4291,"\n"],[1,4327,"\r\n\r"],[-1,4327,"\n\n\n"],[1,4351,"\r"],[-1,4351,"\n"],[1,4381,"\r\n\r"],[-1,4381,"\n\n\n"],[1,4400,"\r"],[-1,4400,"\n"],[1,4430,"\r\n\r"],[-1,4430,"\n\n\n"],[1,4455,"\r"],[-1,4455,"\n"],[1,4484,"\r\n\r"],[-1,4484,"\n\n\n"],[1,4501,"\r"],[-1,4501,"\n"],[1,4528,"\r\n\r"],[-1,4528,"\n\n\n"]],[4534,4534],[4156,4156]]],[1524533936875,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4156,"\r"],[-1,4158,"\r"],[-1,4173,"\r"],[-1,4195,"\r"],[-1,4197,"\r"],[-1,4209,"\r"],[-1,4226,"\r"],[-1,4228,"\r"],[-1,4243,"\r"],[-1,4271,"\r"],[-1,4273,"\r"],[-1,4291,"\r"],[-1,4327,"\r"],[-1,4329,"\r"],[-1,4351,"\r"],[-1,4381,"\r"],[-1,4383,"\r"],[-1,4400,"\r"],[-1,4430,"\r"],[-1,4432,"\r"],[-1,4455,"\r"],[-1,4484,"\r"],[-1,4486,"\r"],[-1,4501,"\r"],[-1,4528,"\r"],[-1,4530,"\r"],[1,4546,""],[-1,4553,"\n"]],[4528,4528],[4527,4527]]],[1524533963738,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4157,"\n"]],[4157,4157],[4156,4156]]],[1524533974965,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5105,"\n"]],[5105,5105],[5105,5105]]],[1524533976717,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5105,"\n"]],[5105,5105],[5106,5106]]],[1524533978660,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5136," "]],[5137,5137],[5136,5136]]],[1524533978931,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5136,"\n"]],[5136,5136],[5137,5137]]],[1524533979668,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5136,"\n"]],[5137,5137],[5136,5136]]],[1524533979924,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5135,"\n"]],[5136,5136],[5135,5135]]],[1524533980395,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5135,"\n"]],[5135,5135],[5136,5136]]],[1524534045605,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,3014,"> ```bash\n> \n> # 显示有变更的文件\n> $ git status\n> \n> # 显示当前分支的版本历史\n> $ git log\n> \n> # 显示commit历史，以及每次commit发生变更的文件\n> $ git log --stat\n> \n> # 搜索提交历史，根据关键词\n> $ git log -S [keyword]\n> \n> # 显示某个commit之后的所有变动，每个commit占据一行\n> $ git log [tag] HEAD --pretty=format:%s\n> \n> # 显示某个commit之后的所有变动，其\"提交说明\"必须符合搜索条件\n> $ git log [tag] HEAD --grep feature\n> \n> # 显示某个文件的版本历史，包括文件改名\n> $ git log --follow [file]\n> $ git whatchanged [file]\n> \n> # 显示指定文件相关的每一次diff\n> $ git log -p [file]\n> \n> # 显示过去5次提交\n> $ git log -5 --pretty --oneline\n> \n> # 显示所有提交过的用户，按提交次数排序\n> $ git shortlog -sn\n> \n> # 显示指定文件是什么人在什么时间修改过\n> $ git blame [file]\n> \n> # 显示暂存区和工作区的代码差异\n> $ git diff\n> \n> # 显示暂存区和上一个commit的差异\n> $ git diff --cached [file]\n> \n> # 显示工作区与当前分支最新commit之间的差异\n> $ git diff HEAD\n> \n> # 显示两次提交之间的差异\n> $ git diff [first-branch]...[second-branch]\n> \n> # 显示今天你写了多少行代码\n> $ git diff --shortstat \"@{0 day ago}\"\n> \n> # 显示某次提交的元数据和内容变化\n> $ git show [commit]\n> \n> # 显示某次提交发生变化的文件\n> $ git show --name-only [commit]\n> \n> # 显示某次提交时，某个文件的内容\n> $ git show [commit]:[filename]\n> \n> # 显示当前分支的最近几次提交\n> $ git reflog# 从本地master拉取代码更新当前分支：branch 一般为master$ git rebase [branch]\n> ```"]],[3014,4136],[3014,3014]]],[1524534090010,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,3014,"```bash\r\n\r\n# 显示有变更的文件\r\n$ git status\r\n\r\n# 显示当前分支的版本历史\r\n$ git log\r\n\r\n# 显示commit历史，以及每次commit发生变更的文件\r\n$ git log --stat\r\n\r\n# 搜索提交历史，根据关键词\r\n$ git log -S [keyword]\r\n\r\n# 显示某个commit之后的所有变动，每个commit占据一行\r\n$ git log [tag] HEAD --pretty=format:%s\r\n\r\n# 显示某个commit之后的所有变动，其\"提交说明\"必须符合搜索条件\r\n$ git log [tag] HEAD --grep feature\r\n\r\n# 显示某个文件的版本历史，包括文件改名\r\n$ git log --follow [file]\r\n$ git whatchanged [file]\r\n\r\n# 显示指定文件相关的每一次diff\r\n$ git log -p [file]\r\n\r\n# 显示过去5次提交\r\n$ git log -5 --pretty --oneline\r\n\r\n# 显示所有提交过的用户，按提交次数排序\r\n$ git shortlog -sn\r\n\r\n# 显示指定文件是什么人在什么时间修改过\r\n$ git blame [file]\r\n\r\n# 显示暂存区和工作区的代码差异\r\n$ git diff\r\n\r\n# 显示暂存区和上一个commit的差异\r\n$ git diff --cached [file]\r\n\r\n# 显示工作区与当前分支最新commit之间的差异\r\n$ git diff HEAD\r\n\r\n# 显示两次提交之间的差异\r\n$ git diff [first-branch]...[second-branch]\r\n\r\n# 显示今天你写了多少行代码\r\n$ git diff --shortstat \"@{0 day ago}\"\r\n\r\n# 显示某次提交的元数据和内容变化\r\n$ git show [commit]\r\n\r\n# 显示某次提交发生变化的文件\r\n$ git show --name-only [commit]\r\n\r\n# 显示某次提交时，某个文件的内容\r\n$ git show [commit]:[filename]\r\n\r\n# 显示当前分支的最近几次提交\r\n$ git reflog# 从本地master拉取代码更新当前分支：branch 一般为master$ git rebase [branch]\r\n```"]],[3014,3014],[4072,4072]]],[1524534091613,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,3021,"\r\n\r"],[-1,3035,"\r"],[-1,3049,"\r"],[-1,3051,"\r"],[-1,3066,"\r"],[-1,3077,"\r"],[-1,3079,"\r"],[-1,3111,"\r"],[-1,3129,"\r"],[-1,3131,"\r"],[-1,3147,"\r"],[-1,3171,"\r"],[-1,3173,"\r"],[-1,3207,"\r"],[-1,3248,"\r"],[-1,3250,"\r"],[-1,3287,"\r"],[-1,3324,"\r"],[-1,3326,"\r"],[-1,3348,"\r"],[-1,3375,"\r"],[-1,3401,"\r"],[-1,3403,"\r"],[-1,3423,"\r"],[-1,3444,"\r"],[-1,3446,"\r"],[-1,3458,"\r"],[-1,3491,"\r"],[-1,3493,"\r"],[-1,3515,"\r"],[-1,3535,"\r"],[-1,3537,"\r"],[-1,3559,"\r"],[-1,3579,"\r"],[-1,3581,"\r"],[-1,3599,"\r"],[-1,3611,"\r"],[-1,3613,"\r"],[-1,3635,"\r"],[-1,3663,"\r"],[-1,3665,"\r"],[-1,3692,"\r"],[-1,3709,"\r"],[-1,3711,"\r"],[-1,3726,"\r"],[-1,3771,"\r"],[-1,3773,"\r"],[-1,3789,"\r"],[-1,3828,"\r"],[-1,3830,"\r"],[-1,3849,"\r"],[-1,3870,"\r"],[-1,3872,"\r"],[-1,3889,"\r"],[-1,3922,"\r"],[-1,3924,"\r"],[-1,3943,"\r"],[-1,3975,"\r"],[-1,3977,"\r"],[-1,3994,"\r"],[-1,4067,"\r"]],[3022,3022],[3021,3021]]],[1524534117314,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,2593,"> ```bash\n> \n> # 列出所有tag\n> $ git tag\n> \n> # 新建一个tag在当前commit\n> $ git tag [tag]\n> \n> # 新建一个tag在指定commit\n> $ git tag [tag] [commit]\n> \n> # 删除本地tag\n> $ git tag -d [tag]\n> \n> # 删除远程tag\n> $ git push origin :refs/tags/[tagName]\n> \n> # 查看tag信息\n> $ git show [tag]\n> \n> # 提交指定tag\n> $ git push [remote] [tag]\n> \n> # 提交所有tag\n> $ git push [remote] --tags\n> \n> # 新建一个分支，指向某个tag\n> $ git checkout -b [branch] [tag]\n> \n> ```"]],[2593,3001],[2593,2593]]],[1524534150730,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,2593,"```bash\r\n# 列出所有tag\r\n$ git tag\r\n\r\n# 新建一个tag在当前commit\r\n$ git tag [tag]\r\n\r\n# 新建一个tag在指定commit\r\n$ git tag [tag] [commit]\r\n\r\n# 删除本地tag\r\n$ git tag -d [tag]\r\n\r\n# 删除远程tag\r\n$ git push origin :refs/tags/[tagName]\r\n\r\n# 查看tag信息\r\n$ git show [tag]\r\n\r\n# 提交指定tag\r\n$ git push [remote] [tag]\r\n\r\n# 提交所有tag\r\n$ git push [remote] --tags\r\n\r\n# 新建一个分支，指向某个tag\r\n$ git checkout -b [branch] [tag]\r\n\r\n```"]],[2593,2593],[2968,2968]]],[1524534161134,[null,[[-1,2600,"\r"],[1,2601,"\n"],[-1,2611,"\r"],[1,2612,"\n"],[-1,2622,"\r\n\r"],[1,2625,"\n\n\n"],[-1,2644,"\r"],[1,2645,"\n"],[-1,2661,"\r\n\r"],[1,2664,"\n\n\n"],[-1,2683,"\r"],[1,2684,"\n"],[-1,2709,"\r\n\r"],[1,2712,"\n\n\n"],[-1,2722,"\r"],[1,2723,"\n"],[-1,2742,"\r\n\r"],[1,2745,"\n\n\n"],[-1,2755,"\r"],[1,2756,"\n"],[-1,2795,"\r\n\r"],[1,2798,"\n\n\n"],[-1,2808,"\r"],[1,2809,"\n"],[-1,2826,"\r\n\r"],[1,2829,"\n\n\n"],[-1,2839,"\r"],[1,2840,"\n"],[-1,2866,"\r\n\r"],[1,2869,"\n\n\n"],[-1,2879,"\r"],[1,2880,"\n"],[-1,2907,"\r\n\r"],[1,2910,"\n\n\n"],[-1,2927,"\r"],[1,2928,"\n"],[-1,2961,"\r\n\r"],[1,2964,"\n\n\n"]],[2600,2600],[2967,2967]]],[1524534161134,[null,[[1,2600,"\r"],[-1,2600,"\n"],[1,2611,"\r"],[-1,2611,"\n"],[1,2622,"\r\n\r"],[-1,2622,"\n\n\n"],[1,2644,"\r"],[-1,2644,"\n"],[1,2661,"\r\n\r"],[-1,2661,"\n\n\n"],[1,2683,"\r"],[-1,2683,"\n"],[1,2709,"\r\n\r"],[-1,2709,"\n\n\n"],[1,2722,"\r"],[-1,2722,"\n"],[1,2742,"\r\n\r"],[-1,2742,"\n\n\n"],[1,2755,"\r"],[-1,2755,"\n"],[1,2795,"\r\n\r"],[-1,2795,"\n\n\n"],[1,2808,"\r"],[-1,2808,"\n"],[1,2826,"\r\n\r"],[-1,2826,"\n\n\n"],[1,2839,"\r"],[-1,2839,"\n"],[1,2866,"\r\n\r"],[-1,2866,"\n\n\n"],[1,2879,"\r"],[-1,2879,"\n"],[1,2907,"\r\n\r"],[-1,2907,"\n\n\n"],[1,2927,"\r"],[-1,2927,"\n"],[1,2961,"\r\n\r"],[-1,2961,"\n\n\n"]],[2967,2967],[2600,2600]]],[1524534153597,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,2593,"```bash\r\n# 列出所有tag\r\n$ git tag\r\n\r\n# 新建一个tag在当前commit\r\n$ git tag [tag]\r\n\r\n# 新建一个tag在指定commit\r\n$ git tag [tag] [commit]\r\n\r\n# 删除本地tag\r\n$ git tag -d [tag]\r\n\r\n# 删除远程tag\r\n$ git push origin :refs/tags/[tagName]\r\n\r\n# 查看tag信息\r\n$ git show [tag]\r\n\r\n# 提交指定tag\r\n$ git push [remote] [tag]\r\n\r\n# 提交所有tag\r\n$ git push [remote] --tags\r\n\r\n# 新建一个分支，指向某个tag\r\n$ git checkout -b [branch] [tag]\r\n\r\n```"]],[2968,2968],[2593,2593]]],[1524534154200,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,2593,"> ```bash\n> \n> # 列出所有tag\n> $ git tag\n> \n> # 新建一个tag在当前commit\n> $ git tag [tag]\n> \n> # 新建一个tag在指定commit\n> $ git tag [tag] [commit]\n> \n> # 删除本地tag\n> $ git tag -d [tag]\n> \n> # 删除远程tag\n> $ git push origin :refs/tags/[tagName]\n> \n> # 查看tag信息\n> $ git show [tag]\n> \n> # 提交指定tag\n> $ git push [remote] [tag]\n> \n> # 提交所有tag\n> $ git push [remote] --tags\n> \n> # 新建一个分支，指向某个tag\n> $ git checkout -b [branch] [tag]\n> \n> ```"]],[2593,2593],[2593,3001]]],[1524534158836,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,2593,"> "],[-1,2602,"\n> \n> "],[1,2608,"\r\n\r\n"],[1,2617,"\r"],[-1,2618,"> "],[-1,2629,"\n> \n> "],[1,2635,"\r\n\r\n"],[1,2653,"\r"],[-1,2654,"> "],[-1,2671,"\n> \n> "],[1,2677,"\r\n\r\n"],[1,2695,"\r"],[-1,2696,"> "],[-1,2722,"\n> \n> "],[1,2728,"\r\n\r\n"],[1,2737,"\r"],[-1,2738,"> "],[-1,2758,"\n> \n> "],[1,2764,"\r\n\r\n"],[1,2773,"\r"],[-1,2774,"> "],[-1,2814,"\n> \n> "],[1,2820,"\r\n\r\n"],[1,2829,"\r"],[-1,2830,"> "],[-1,2848,"\n> \n> "],[1,2854,"\r\n\r\n"],[1,2863,"\r"],[-1,2864,"> "],[-1,2891,"\n> \n> "],[1,2897,"\r\n\r\n"],[1,2906,"\r"],[-1,2907,"> "],[-1,2935,"\n> \n> "],[1,2941,"\r\n\r\n"],[1,2957,"\r"],[-1,2958,"> "],[-1,2992,"\n> \n> "],[1,2998,"\r\n\r\n"]],[2593,3001],[2970,2970]]],[1524534160516,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,2600,"\r\n\r"],[-1,2613,"\r"],[-1,2624,"\r"],[-1,2626,"\r"],[-1,2646,"\r"],[-1,2663,"\r"],[-1,2665,"\r"],[-1,2685,"\r"],[-1,2711,"\r"],[-1,2713,"\r"],[-1,2724,"\r"],[-1,2744,"\r"],[-1,2746,"\r"],[-1,2757,"\r"],[-1,2797,"\r"],[-1,2799,"\r"],[-1,2810,"\r"],[-1,2828,"\r"],[-1,2830,"\r"],[-1,2841,"\r"],[-1,2868,"\r"],[-1,2870,"\r"],[-1,2881,"\r"],[-1,2909,"\r"],[-1,2911,"\r"],[-1,2929,"\r"],[-1,2963,"\r"],[-1,2965,"\r"]],[2601,2601],[2600,2600]]],[1524534165284,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4918,"\n"]],[4917,4917],[4918,4918]]],[1524534165891,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4918,"\n"]],[4918,4918],[4917,4917]]],[1524534167099,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4918,"\n"]],[4917,4917],[4918,4918]]],[1524534167764,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4918,"\n"]],[4918,4918],[4917,4917]]],[1524534170987,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4909," "]],[4909,4909],[4909,4909]]],[1524534194282,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,1814,"> ```bash\n> \n> # 列出所有本地分支\n> $ git branch\n> \n> # 列出所有远程分支\n> $ git branch -r\n> \n> # 列出所有本地分支和远程分支\n> $ git branch -a\n> \n> # 新建一个分支，但依然停留在当前分支\n> $ git branch [branch-name]\n> \n> # 新建一个分支，并切换到该分支\n> $ git checkout -b [branch]\n> \n> # 新建一个分支，指向指定commit\n> $ git branch [branch] [commit]\n> \n> # 新建一个分支，与指定的远程分支建立追踪关系\n> $ git branch --track [branch] [remote-branch]\n> \n> # 切换到指定分支，并更新工作区\n> $ git checkout [branch-name]\n> \n> # 切换到上一个分支\n> $ git checkout -\n> \n> # 建立追踪关系，在现有分支与指定的远程分支之间\n> $ git branch --set-upstream [branch] [remote-branch]\n> \n> # 合并指定分支到当前分支\n> $ git merge [branch]\n> \n> # 选择一个commit，合并进当前分支\n> $ git cherry-pick [commit]\n> \n> # 删除分支\n> $ git branch -d [branch-name]\n> \n> # 删除远程分支\n> $ git push origin --delete [branch-name]\n> $ git branch -dr [remote/branch]\n> \n> ```"]],[1814,2582],[1814,1814]]],[1524534204330,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,1814,"```bash\r\n\r\n# 列出所有本地分支\r\n$ git branch\r\n\r\n# 列出所有远程分支\r\n$ git branch -r\r\n\r\n# 列出所有本地分支和远程分支\r\n$ git branch -a\r\n\r\n# 新建一个分支，但依然停留在当前分支\r\n$ git branch [branch-name]\r\n\r\n# 新建一个分支，并切换到该分支\r\n$ git checkout -b [branch]\r\n\r\n# 新建一个分支，指向指定commit\r\n$ git branch [branch] [commit]\r\n\r\n# 新建一个分支，与指定的远程分支建立追踪关系\r\n$ git branch --track [branch] [remote-branch]\r\n\r\n# 切换到指定分支，并更新工作区\r\n$ git checkout [branch-name]\r\n\r\n# 切换到上一个分支\r\n$ git checkout -\r\n\r\n# 建立追踪关系，在现有分支与指定的远程分支之间\r\n$ git branch --set-upstream [branch] [remote-branch]\r\n\r\n# 合并指定分支到当前分支\r\n$ git merge [branch]\r\n\r\n# 选择一个commit，合并进当前分支\r\n$ git cherry-pick [commit]\r\n\r\n# 删除分支\r\n$ git branch -d [branch-name]\r\n\r\n# 删除远程分支\r\n$ git push origin --delete [branch-name]\r\n$ git branch -dr [remote/branch]\r\n\r\n```"]],[1814,1814],[2535,2535]]],[1524534206421,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,1821,"\r\n\r"],[-1,1835,"\r"],[-1,1849,"\r"],[-1,1851,"\r"],[-1,1863,"\r"],[-1,1880,"\r"],[-1,1882,"\r"],[-1,1899,"\r"],[-1,1916,"\r"],[-1,1918,"\r"],[-1,1939,"\r"],[-1,1967,"\r"],[-1,1969,"\r"],[-1,1987,"\r"],[-1,2015,"\r"],[-1,2017,"\r"],[-1,2038,"\r"],[-1,2070,"\r"],[-1,2072,"\r"],[-1,2097,"\r"],[-1,2144,"\r"],[-1,2146,"\r"],[-1,2164,"\r"],[-1,2194,"\r"],[-1,2196,"\r"],[-1,2208,"\r"],[-1,2226,"\r"],[-1,2228,"\r"],[-1,2254,"\r"],[-1,2308,"\r"],[-1,2310,"\r"],[-1,2325,"\r"],[-1,2347,"\r"],[-1,2349,"\r"],[-1,2371,"\r"],[-1,2399,"\r"],[-1,2401,"\r"],[-1,2409,"\r"],[-1,2440,"\r"],[-1,2442,"\r"],[-1,2452,"\r"],[-1,2494,"\r"],[-1,2528,"\r"],[-1,2530,"\r"]],[1822,1822],[1821,1821]]],[1524534223309,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,1405,"> "],[-1,1414,"\n> \n> "],[1,1420,"\r\n\r\n"],[1,1431,"\r"],[-1,1432,"> "],[-1,1459,"\n> \n> "],[1,1465,"\r\n\r\n"],[1,1481,"\r"],[-1,1482,"> "],[-1,1529,"\n> \n> "],[1,1535,"\r\n\r\n"],[1,1563,"\r"],[-1,1564,"> "],[-1,1581,"\n> \n> "],[1,1587,"\r\n\r\n"],[1,1602,"\r"],[-1,1603,"> "],[-1,1620,"\n> \n> "],[1,1626,"\r\n\r\n"],[1,1648,"\r"],[-1,1649,"> "],[1,1684,"\r"],[-1,1685,"> "],[-1,1720,"\n> \n> "],[1,1726,"\r\n\r\n"],[1,1751,"\r"],[-1,1752,"> "],[-1,1794,"\n> \n> "],[1,1800,"\r\n\r\n"]],[1405,1803],[1780,1780]]],[1524534225997,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,1405,"> "],[1,1412,"\n> \n> "],[-1,1412,"\r\n\r\n"],[-1,1427,"\r"],[1,1429,"> "],[1,1454,"\n> \n> "],[-1,1454,"\r\n\r\n"],[-1,1474,"\r"],[1,1476,"> "],[1,1521,"\n> \n> "],[-1,1521,"\r\n\r\n"],[-1,1553,"\r"],[1,1555,"> "],[1,1570,"\n> \n> "],[-1,1570,"\r\n\r\n"],[-1,1589,"\r"],[1,1591,"> "],[1,1606,"\n> \n> "],[-1,1606,"\r\n\r\n"],[-1,1632,"\r"],[1,1634,"> "],[-1,1667,"\r"],[1,1669,"> "],[1,1702,"\n> \n> "],[-1,1702,"\r\n\r\n"],[-1,1731,"\r"],[1,1733,"> "],[1,1773,"\n> \n> "],[-1,1773,"\r\n\r\n"]],[1780,1780],[1405,1803]]],[1524534244635,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,1405,"> "],[-1,1414,"\n> \n> "],[1,1420,"\r\n\r\n"],[1,1431,"\r"],[-1,1432,"> "],[-1,1459,"\n> \n> "],[1,1465,"\r\n\r\n"],[1,1481,"\r"],[-1,1482,"> "],[-1,1529,"\n> \n> "],[1,1535,"\r\n\r\n"],[1,1563,"\r"],[-1,1564,"> "],[-1,1581,"\n> \n> "],[1,1587,"\r\n\r\n"],[1,1602,"\r"],[-1,1603,"> "],[-1,1620,"\n> \n> "],[1,1626,"\r\n\r\n"],[1,1648,"\r"],[-1,1649,"> "],[1,1684,"\r"],[-1,1685,"> "],[-1,1720,"\n> \n> "],[1,1726,"\r\n\r\n"],[1,1751,"\r"],[-1,1752,"> "],[-1,1794,"\n> \n> "],[1,1800,"\r\n\r\n"],[-1,1803,"\n"]],[1405,1804],[1780,1780]]],[1524534246812,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,1412,"\r\n\r"],[-1,1427,"\r"],[-1,1454,"\r"],[-1,1456,"\r"],[-1,1474,"\r"],[-1,1521,"\r"],[-1,1523,"\r"],[-1,1553,"\r"],[-1,1570,"\r"],[-1,1572,"\r"],[-1,1589,"\r"],[-1,1606,"\r"],[-1,1608,"\r"],[-1,1632,"\r"],[-1,1667,"\r"],[-1,1702,"\r"],[-1,1704,"\r"],[-1,1731,"\r"],[-1,1773,"\r"],[-1,1775,"\r"]],[1413,1413],[1412,1412]]],[1524534253891,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,1001,"> ```bash\n> \n> # 添加指定文件到暂存区\n> $ git add [file1] [file2] ...\n> \n> # 添加指定目录到暂存区，包括子目录\n> $ git add [dir]\n> \n> # 添加当前目录的所有文件到暂存区\n> $ git add .\n> \n> # 添加每个变化前，都会要求确认\n> # 对于同一个文件的多处变化，可以实现分次提交\n> $ git add -p\n> \n> # 删除工作区文件，并且将这次删除放入暂存区\n> $ git rm [file1] [file2] ...\n> \n> # 停止追踪指定文件，但该文件会保留在工作区\n> $ git rm --cached [file]\n> \n> # 改名文件，并且将这个改名放入暂存区\n> $ git mv [file-original] [file-renamed]\n> \n> ```\n"]],[1000,1392],[1000,1000]]],[1524534262762,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,1000,"```bash\r\n\r\n# 添加指定文件到暂存区\r\n$ git add [file1] [file2] ...\r\n\r\n# 添加指定目录到暂存区，包括子目录\r\n$ git add [dir]\r\n\r\n# 添加当前目录的所有文件到暂存区\r\n$ git add .\r\n\r\n# 添加每个变化前，都会要求确认\r\n# 对于同一个文件的多处变化，可以实现分次提交\r\n$ git add -p\r\n\r\n# 删除工作区文件，并且将这次删除放入暂存区\r\n$ git rm [file1] [file2] ...\r\n\r\n# 停止追踪指定文件，但该文件会保留在工作区\r\n$ git rm --cached [file]\r\n\r\n# 改名文件，并且将这个改名放入暂存区\r\n$ git mv [file-original] [file-renamed]\r\n\r\n```"]],[1000,1000],[1365,1365]]],[1524534264340,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,1007,"\r\n\r"],[-1,1023,"\r"],[-1,1054,"\r"],[-1,1056,"\r"],[-1,1076,"\r"],[-1,1093,"\r"],[-1,1095,"\r"],[-1,1114,"\r"],[-1,1127,"\r"],[-1,1129,"\r"],[-1,1147,"\r"],[-1,1172,"\r"],[-1,1186,"\r"],[-1,1188,"\r"],[-1,1212,"\r"],[-1,1242,"\r"],[-1,1244,"\r"],[-1,1268,"\r"],[-1,1294,"\r"],[-1,1296,"\r"],[-1,1317,"\r"],[-1,1358,"\r"],[-1,1360,"\r"]],[1008,1008],[1007,1007]]],[1524534269130,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,761,"> ```bash\n> \n> # 显示当前的Git配置\n> $ git config --list\n> \n> # 编辑Git配置文件\n> $ git config -e [--global]\n> \n> # 设置提交代码时的用户信息\n> $ git config [--global] user.name \"[name]\"\n> $ git config [--global] user.email \"[email address]\"\n> \n> ```"]],[761,985],[761,761]]],[1524534276603,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,761,"```bash\r\n\r\n# 显示当前的Git配置\r\n$ git config --list\r\n\r\n# 编辑Git配置文件\r\n$ git config -e [--global]\r\n\r\n# 设置提交代码时的用户信息\r\n$ git config [--global] user.name \"[name]\"\r\n$ git config [--global] user.email \"[email address]\"\r\n\r\n```"]],[761,761],[971,971]]],[1524534278845,[null,[[-1,768,"\r\n\r"],[1,771,"\n\n\n"],[-1,784,"\r"],[1,785,"\n"],[-1,805,"\r\n\r"],[1,808,"\n\n\n"],[-1,820,"\r"],[1,821,"\n"],[-1,848,"\r\n\r"],[1,851,"\n\n\n"],[-1,866,"\r"],[1,867,"\n"],[-1,910,"\r"],[1,911,"\n"],[-1,964,"\r\n\r"],[1,967,"\n\n\n"]],[768,768],[970,970]]],[1524534278845,[null,[[1,768,"\r\n\r"],[-1,768,"\n\n\n"],[1,784,"\r"],[-1,784,"\n"],[1,805,"\r\n\r"],[-1,805,"\n\n\n"],[1,820,"\r"],[-1,820,"\n"],[1,848,"\r\n\r"],[-1,848,"\n\n\n"],[1,866,"\r"],[-1,866,"\n"],[1,910,"\r"],[-1,910,"\n"],[1,964,"\r\n\r"],[-1,964,"\n\n\n"]],[970,970],[768,768]]],[1524534278211,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,768,"\r\n\r"],[-1,784,"\r"],[-1,805,"\r"],[-1,807,"\r"],[-1,820,"\r"],[-1,848,"\r"],[-1,850,"\r"],[-1,866,"\r"],[-1,910,"\r"],[-1,964,"\r"],[-1,966,"\r"]],[769,769],[768,768]]],[1524534282308,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,541,"> ```bash\n> \n> # 在当前目录新建一个Git代码库\n> $ git init\n> \n> # 新建一个目录，将其初始化为Git代码库\n> $ git init [project-name]\n> \n> # 下载一个项目和它的整个代码历史\n> $ git clone [url]\n> \n> ```"]],[541,693],[541,541]]],[1524534289059,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,541,"```bash\r\n\r\n# 在当前目录新建一个Git代码库\r\n$ git init\r\n\r\n# 新建一个目录，将其初始化为Git代码库\r\n$ git init [project-name]\r\n\r\n# 下载一个项目和它的整个代码历史\r\n$ git clone [url]\r\n\r\n```"]],[541,541],[680,680]]],[1524534291994,[null,[[-1,548,"\r\n\r"],[1,551,"\n\n\n"],[-1,569,"\r"],[1,570,"\n"],[-1,581,"\r\n\r"],[1,584,"\n\n\n"],[-1,606,"\r"],[1,607,"\n"],[-1,633,"\r\n\r"],[1,636,"\n\n\n"],[-1,654,"\r"],[1,655,"\n"],[-1,673,"\r\n\r"],[1,676,"\n\n\n"]],[548,548],[679,679]]],[1524534291994,[null,[[1,548,"\r\n\r"],[-1,548,"\n\n\n"],[1,569,"\r"],[-1,569,"\n"],[1,581,"\r\n\r"],[-1,581,"\n\n\n"],[1,606,"\r"],[-1,606,"\n"],[1,633,"\r\n\r"],[-1,633,"\n\n\n"],[1,654,"\r"],[-1,654,"\n"],[1,673,"\r\n\r"],[-1,673,"\n\n\n"]],[679,679],[548,548]]],[1524534291330,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,548,"\r\n\r"],[-1,569,"\r"],[-1,581,"\r"],[-1,583,"\r"],[-1,606,"\r"],[-1,633,"\r"],[-1,635,"\r"],[-1,654,"\r"],[-1,673,"\r"],[-1,675,"\r"]],[549,549],[548,548]]],[1524534314292,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4707,"\n\n"]],[4707,4707],[4708,4708]]],[1524534314420,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4709,"\n"]],[4708,4708],[4709,4709]]],[1524534318451,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4709,"\n"],[1,4710,"```bash"]],[4709,4709],[4716,4716]]],[1524534318939,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4716,"\n\n"]],[4716,4716],[4717,4717]]],[1524534320405,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4717,"\n"],[1,4718,"```"]],[4717,4717],[4720,4720]]],[1524534321659,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4717,"\n"]],[4717,4717],[4718,4718]]],[1524534326988,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4717,"# shang"]],[4717,4717],[4724,4724]]],[1524534327818,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4719,"shang"]],[4724,4724],[4719,4719]]],[1524534329437,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4719,"商城"]],[4719,4719],[4721,4721]]],[1524534330219,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4719,"商城"]],[4721,4721],[4719,4719]]],[1524534334539,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4657,"## 十、其他\n\n```bash\n# 生成一个可供发布的压缩包\n $ git archive\n```\n"]],[4656,4707],[4656,4656]]],[1524534336300,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4672,"\n\n"]],[4672,4672],[4673,4673]]],[1524534336418,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4674,"\n"]],[4673,4673],[4674,4674]]],[1524534337034,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4675,"## 十、其他\n\n```bash\n# 生成一个可供发布的压缩包\n $ git archive\n```\n"]],[4674,4674],[4725,4725]]],[1524534338563,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4674,"\n"]],[4672,4672],[4672,4672]]],[1524534340994,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4657,"## 十、其他"]],[4657,4657],[4664,4664]]],[1524534344317,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4685,"一"]],[4685,4685],[4686,4686]]],[1524534352189,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4662,"其他"],[1,4664,"# 子模块"]],[4662,4664],[4667,4667]]],[1524534354146,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4662,"# "]],[4662,4664],[4662,4662]]],[1524534366555,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4676,"在现有仓库中增加子模块"]],[4676,4676],[4687,4687]]],[1524534368555,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4688,"\n"]],[4687,4687],[4688,4688]]],[1524535482838,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4688,"￥"]],[4688,4688],[4689,4689]]],[1524535485004,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4688,"￥"]],[4689,4689],[4688,4688]]],[1524535487382,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4688,"$git"]],[4688,4688],[4692,4692]]],[1524535489788,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4689," "]],[4689,4689],[4690,4690]]],[1524535494027,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4693," "]],[4693,4693],[4694,4694]]],[1524535520771,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4694,"submodule add ```\n$ git submodule add https://github.com/chaconinc/DbConnector\n```"]],[4694,4694],[4776,4776]]],[1524535521586,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4693," submodule add ```\n$ git submodule add https://github.com/chaconinc/DbConnector\n```"]],[4776,4776],[4693,4693]]],[1524535524084,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4693," submodule add ```\n$ git submodule add https://github.com/chaconinc/DbConnector\n```"]],[4693,4693],[4776,4776]]],[1524535527426,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4708,"```\n$ git submodule add https://github.com/chaconinc/DbConnector\n```"]],[4708,4776],[4708,4708]]],[1524535533403,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4708,"https://github.com/MartinDong/AndroidModuleDevPro.git"]],[4708,4708],[4761,4761]]],[1524535606670,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4765,"*   查看上面命令执行后现有仓库根目录有哪些变化 ：增加了1个文件和一个目录：.gitmodules和DbConnector文件夹"]],[4765,4765],[4831,4831]]],[1524535607884,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4765,"*   查看上面命令执行后现有仓库根目录有哪些变化 ：增加了1个文件和一个目录：.gitmodules和DbConnector文件夹"]],[4831,4831],[4765,4765]]],[1524535608802,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4767,"\n"]],[4765,4765],[4766,4766]]],[1524535609114,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4766,"*   查看上面命令执行后现有仓库根目录有哪些变化 ：增加了1个文件和一个目录：.gitmodules和DbConnector文件夹"]],[4766,4766],[4832,4832]]],[1524535613098,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4768,"  "]],[4770,4770],[4768,4768]]],[1524535613611,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4768,"  "]],[4768,4768],[4770,4770]]],[1524535616963,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4834,"\n"]],[4832,4832],[4833,4833]]],[1524535617082,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4835,"\n"]],[4833,4833],[4834,4834]]],[1524535623347,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4834,"$ git status On branch master Your branch is up-to-date with 'origin/master'. Changes to be committed: (use \"git reset HEAD <file>...\" to unstage) new file: .gitmodules new file: DbConnector\n\n作者：fanlehai\n链接：https://www.jianshu.com/p/491609b1c426\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[4834,4834],[5120,5120]]],[1524535625491,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4834,"$ git status On branch master Your branch is up-to-date with 'origin/master'. Changes to be committed: (use \"git reset HEAD <file>...\" to unstage) new file: .gitmodules new file: DbConnector\n\n作者：fanlehai\n链接：https://www.jianshu.com/p/491609b1c426\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[5120,5120],[4834,4834]]],[1524535626778,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4834,"$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n    new file:   .gitmodules\n    new file:   DbConnector\n\n作者：fanlehai\n链接：https://www.jianshu.com/p/491609b1c426\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[4834,4834],[5134,5134]]],[1524535629762,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4834,"$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n    new file:   .gitmodules\n    new file:   DbConnector\n\n作者：fanlehai\n链接：https://www.jianshu.com/p/491609b1c426\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[5134,5134],[4834,4834]]],[1524535637098,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4834,"$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n    new file:   .gitmodules\n    new file:   DbConnector\n\n作者：fanlehai\n链接：https://www.jianshu.com/p/491609b1c426\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[4834,4834],[5134,5134]]],[1524535642330,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4834,"$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n    new file:   .gitmodules\n    new file:   DbConnector作者：fanlehai\n链接：https://www.jianshu.com/p/491609b1c426\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\n"]],[5038,5134],[4834,4834]]],[1524535644756,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4834,"···"]],[4834,4834],[4837,4837]]],[1524535645524,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4834,"···"]],[4837,4837],[4834,4834]]],[1524535648699,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4834,"```bash"]],[4834,4834],[4841,4841]]],[1524535649123,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4843,"\n"]],[4841,4841],[4842,4842]]],[1524535649554,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4844,"\n"]],[4842,4842],[4843,4843]]],[1524535650427,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4843,"```"]],[4843,4843],[4846,4846]]],[1524535652002,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4842,"$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n    new file:   .gitmodules\n    new file:   DbConnector"]],[4842,4842],[5046,5046]]],[1524535653083,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,4842,"$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n    new file:   .gitmodules\n    new file:   DbConnector"]],[5046,5046],[4842,4842]]],[1524535653722,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4842,"$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n    new file:   .gitmodules\n    new file:   DbConnector"]],[4842,4842],[5046,5046]]],[1524535666579,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5035,"DbConnector"],[1,5046,"AndroidModuleDevPro"]],[5035,5046],[5054,5054]]],[1524535680027,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5060,"\n"]],[5058,5058],[5059,5059]]],[1524535680315,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5059,"*   查看[.gitmodules]文件"]],[5059,5059],[5080,5080]]],[1524535681330,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5082,"\n"]],[5080,5080],[5081,5081]]],[1524535687554,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5082,"$ cat .gitmodules\r\n[submodule \"DbConnector\"]\r\n    path = DbConnector\r\n    url = https://github.com/chaconinc/DbConnector"]],[5082,5082],[5202,5202]]],[1524535691725,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5082,"$ cat .gitmodules\r\n[submodule \"DbConnector\"]\r\n    path = DbConnector\r\n    url = https://github.com/chaconinc/DbConnector"]],[5202,5202],[5082,5082]]],[1524535693363,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5083,"\n"]],[5081,5081],[5082,5082]]],[1524535694364,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5082,"···"]],[5082,5082],[5085,5085]]],[1524535695141,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5082,"···"]],[5085,5085],[5082,5082]]],[1524535697811,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5082,"```bash"]],[5082,5082],[5089,5089]]],[1524535698146,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5091,"\n"]],[5089,5089],[5090,5090]]],[1524535699398,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5090,"```"]],[5090,5090],[5093,5093]]],[1524535700810,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5090,"\n"]],[5090,5090],[5091,5091]]],[1524535702411,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5090,"```\n$ cat .gitmodules\n[submodule \"DbConnector\"]\n    path = DbConnector\n    url = https://github.com/chaconinc/DbConnector\n```"]],[5090,5090],[5215,5215]]],[1524535704340,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5090,"```\n$ cat .gitmodules\n[submodule \"DbConnector\"]\n    path = DbConnector\n    url = https://github.com/chaconinc/DbConnector\n```"]],[5215,5215],[5090,5090]]],[1524535710434,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5090,"$ cat .gitmodules\r\n[submodule \"DbConnector\"]\r\n    path = DbConnector\r\n    url = https://github.com/chaconinc/DbConnector"]],[5090,5090],[5210,5210]]],[1524536634408,[null,[[-1,5107,"\r"],[1,5108,"\n"],[-1,5134,"\r"],[1,5135,"\n"],[-1,5158,"\r"],[1,5159,"\n"]],[5107,5107],[5160,5160]]],[1524536634408,[null,[[1,5107,"\r"],[-1,5107,"\n"],[1,5134,"\r"],[-1,5134,"\n"],[1,5158,"\r"],[-1,5158,"\n"]],[5160,5160],[5107,5107]]],[1524536631838,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5107,"\r"],[-1,5134,"\r"],[-1,5158,"\r"],[-1,5211,""],[1,5214,"*   查看子模块信息"]],[5211,5211],[5222,5222]]],[1524536632876,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5107,"\r"],[1,5133,"\r"],[1,5156,"\r"],[1,5208,""],[-1,5211,"*   查看子模块信息"]],[5222,5222],[5211,5211]]],[1524536633675,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5107,"\r"],[-1,5134,"\r"],[-1,5158,"\r"],[1,5214,"\n"]],[5211,5211],[5212,5212]]],[1524536633923,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5212,"*   查看子模块信息"]],[5212,5212],[5223,5223]]],[1524536635267,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5225,"\n"]],[5223,5223],[5224,5224]]],[1524536672581,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5224,"··"]],[5224,5224],[5226,5226]]],[1524536673124,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5224,"··"]],[5226,5226],[5224,5224]]],[1524536676170,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5224,"```bash"]],[5224,5224],[5231,5231]]],[1524536676579,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5233,"\n"]],[5231,5231],[5232,5232]]],[1524536677297,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5234,"\n"]],[5232,5232],[5233,5233]]],[1524536678085,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5233,"```"]],[5233,5233],[5236,5236]]],[1524536679689,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5232,"$ git diff --cached --submodule\n      diff --git a/.gitmodules b/.gitmodules\n      new file mode 100644\n      index 0000000..71fc376\n      ---/dev/null\n      +++b/.gitmodules\n      @@ -0,0 +1,3 @@\n      +[submodule \"DbConnector\"]\n      +path = DbConnector\n      +url = https://github.com/chaconinc/DbConnector\n      Submodule DbConnector 0000000...c3f01dc (new submodule)\n\n作者：fanlehai\n链接：https://www.jianshu.com/p/491609b1c426\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[5232,5232],[5699,5699]]],[1524536684714,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5605,"作者：fanlehai\n链接：https://www.jianshu.com/p/491609b1c426\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n"]],[5604,5699],[5604,5604]]],[1524536685883,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5604,"\n"]],[5604,5604],[5603,5603]]],[1524536688794,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5609,"\n"]],[5607,5607],[5608,5608]]],[1524536694418,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5610,"\n"]],[5607,5607],[5608,5608]]],[1524536694749,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5608,"*   提交增加的子模块到现有仓库的远程仓库"]],[5608,5608],[5630,5630]]],[1524536695378,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5633,"\n"]],[5630,5630],[5631,5631]]],[1524536701795,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5631,"···"]],[5631,5631],[5634,5634]]],[1524536702404,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5631,"···"]],[5634,5634],[5631,5631]]],[1524536705786,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5631,"```bash"]],[5631,5631],[5638,5638]]],[1524536706099,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5641,"\n"]],[5638,5638],[5639,5639]]],[1524536706490,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5642,"\n"]],[5639,5639],[5640,5640]]],[1524536707243,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5640,"```"]],[5640,5640],[5643,5643]]],[1524536708529,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5639,"$ git commit -am 'added DbConnector module'\n      [master fb9093c] added DbConnector module\n       2 files changed, 4 insertions(+)\n       create mode 100644 .gitmodules\n       create mode 160000 DbConnector\n#这里160000表示DbConnector是以目录记录，而不是子目录记录或文件\n\n作者：fanlehai\n链接：https://www.jianshu.com/p/491609b1c426\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[5639,5639],[5983,5983]]],[1524536710722,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,5888,"\n作者：fanlehai\n链接：https://www.jianshu.com/p/491609b1c426\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n"]],[5887,5983],[5887,5887]]],[1524536780300,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4666,"\n"]],[4665,4665],[4666,4666]]],[1524536780843,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,4666,"**【第一步】：在现有仓库中加入子模块**"]],[4666,4666],[4687,4687]]],[1524536845340,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5914,"**【第二步】：克隆包含子模块的仓库**"]],[5914,5914],[5934,5934]]],[1524536846533,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5936,"\n"]],[5934,5934],[5935,5935]]],[1524536860405,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5936,"1.  克隆项目，并且初始化子模块，更新子模块代码\n\n```\n【方法一】\n        1.克隆项目，子模块目录默认被克隆，但是是空的\n          $ git clone https://github.com/chaconinc/MainProject\n        2.初始化子模块：初始化本地配置文件\n          $ git submodule init\n        3.该项目中抓取所有数据并检出父项目中列出的合适的提交\n          $ git submodule update\n【方法二：】用--recursive命令，跟方法一样达到效果\n          $ git clone --recursive https://github.com/chaconinc/MainProject\n\n```\n\n1.  更新子模块代码(需要进入子项目目录)\n\n```\n【方法一】\n          $ cd DbConnector\n          $ git fetch\n          $ git merge origin/master\n【方法二】\n          $ git submodule update --remote DbConnector\n        # 这里默认更新master分支，如果更新其他分支\n         $ git config -f .gitmodules submodule.DbConnector.branch stable\n         $ git submodule update --remote\n        $ git merge origin/master\n\n```\n\n1.  查看子模块的信息\n\n```\n$ git config status.submodulesummary 1\n$ git status\n# 查看子模块提交信息\n$ git log -p --submodule\n\n```\n\n* * *\n\n**【第三步】：修改子模块**\n\n1.  切换到要修改代码的子模块分支;\n\n```\n$ cd DbConnector\n$ git checkout stable\n\n```\n\n1.  拉取服务器代码，并且合并到本地分支stable;\n\n```\n$ git submodule update --remote --merge\n\n```\n\n1.  进行相关文件修改;\n2.  推送本次修改;\n\n```\n$ git push\n\n```\n\n* * *\n\n**【第四步】：主仓库推送相关注意点**\n\n1.  主仓库推送时，确保子模块的修改已经推送，下面命令会检查子模块修改的内容是否推送，如果没有，主仓库推送也会失败\n\n```\n$ git push --recurse-submodules=check\n\n```\n\n1.  上面推送，如果子模块没有推送，命令即失败；可以用on-demand代理check，Git会检查到子模块没有推送，会自动推送子模块，然后再推送主模块（如果子模块推送失败，那么主模块也推送失败）\n\n```\n$ git push --recurse-submodules=on-demand\n\n```\n\n* * *\n\n**【第五步】：主仓库包含多个子模块**\n\n1.  foreach可以遍历所有子模块，下面是把子模块存储起来\n\n```\n$ git submodule foreach 'git stash'\n\n```\n\n*   移动刚刚储藏的子模块到新分支，然后开始新的bug修复等开发\n\n```\n$ git submodule foreach 'git checkout -b featureA'\n\n```\n\n*   显示主项目和子模块的所有改动\n\n```\n$ git diff; git submodule foreach 'git diff'\n\n```\n\n* * *\n\n**【第六步】：主仓库包含多个子模块**\n\n1.  一个分支包含子模块一个分支没有子模块，在这两个分支之间切换时，要注意子模块目录，如下详细说明：\n\n```\n1.新建一个分支\n        $ git checkout -b add-crypto\n        Switched to a new branch 'add-crypto'\n2.创建一个子模块\n        $ git submodule add https://github.com/chaconinc/CryptoLibrary\n3.修改子模块代码，并提交\n        $ git commit -am 'adding crypto library'\n4.切换到master分支\n        $ git checkout master\n5.查看状态：\n        $ git status\n        On branch master\n        Your branch is up-to-date with 'origin/master'.\n        Untracked files:\n            (use \"git add <file>...\" to include in what will be committed)\n            CryptoLibrary/\n            nothing added to commit but untracked files present (use \"git add\" to track)\n# 这里可以看到CryptoLibrary是没有被跟踪的，这是add-crypto分支下增加的子模块的目录，特别要注意这点\n\n```\n\n```\n6.清除未跟踪文件\n        $ git clean -fdx\n        Removing CryptoLibrary/\n7.切换回有子模块的分支add-crypto\n        $ git checkout add-crypto\n        Switched to branch 'add-crypto'\n8.会发现子模块的文件夹是没有的，必须重新更新\n        $ ls CryptoLibrary/\n        $ git submodule update --init\n          Submodule path 'CryptoLibrary': checked out       'b8dda6aa182ea4464f3f3264b11e0268545172af'\n        $ ls CryptoLibrary/\n          Makefile  includes    scripts     src\n\n```\n\n* * *\n\n**【别名】一些命令太长了可以设置为别名，方便调用**\n\n1.  显示主项目和子模块的所有改动\n\n```\n$ git config alias.sdiff '!'\"git diff && git submodule foreach 'git diff'\"\n\n```\n\n*   推送主仓库，同时检查子模块，如果没有推送，结束此命令提示用户推送子模块先\n\n```\n$ git config alias.spush 'push --recurse-submodules=on-demand'\n\n```\n\n*   推送主仓库，同时检查子模块，如果没有推送先推送子模块\n\n```\n$ git config alias.spush 'push --recurse-submodules=on-demand'\n\n```\n\n*   更新子模块，并且合并代码到本地\n\n```\n$ git config alias.supdate 'submodule update --remote --merge'\n```\n\n作者：fanlehai\n链接：https://www.jianshu.com/p/491609b1c426\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[5936,5936],[9330,9330]]],[1524536868539,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,5966,"bash"]],[5966,5966],[5970,5970]]],[1524536870763,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,6338,"bash"]],[6338,6338],[6342,6342]]],[1524536873035,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,6699,"bash"]],[6699,6699],[6703,6703]]],[1524536874986,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,6847,"bash"]],[6847,6847],[6851,6851]]],[1524536876898,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,6930,"bash"]],[6930,6930],[6934,6934]]],[1524536878003,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,7011,"bash"]],[7011,7011],[7015,7015]]],[1524536880187,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,7125,"bash"]],[7125,7125],[7129,7129]]],[1524536882363,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,7278,"bash"]],[7278,7278],[7282,7282]]],[1524536884132,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,7168,"\n"]],[7168,7168],[7167,7167]]],[1524536885260,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,7324,"\n"]],[7324,7324],[7323,7323]]],[1524536887508,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,7432,"\n"]],[7432,7432],[7431,7431]]],[1524536888642,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,7395,"bash"]],[7395,7395],[7399,7399]]],[1524536933058,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,7697,"bash"]],[7399,7399],[7701,7701]]],[1524536934858,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,7560,"bash"]],[7560,7560],[7564,7564]]],[1524536935891,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,7479,"bash"]],[7479,7479],[7483,7483]]],[1524536940147,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,8387,"bash"]],[8387,8387],[8391,8391]]],[1524536941939,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,8890,"bash"]],[8890,8890],[8894,8894]]],[1524536943347,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,9021,"bash"]],[9021,9021],[9025,9025]]],[1524536944794,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,9130,"bash"]],[9130,9130],[9134,9134]]],[1524536945858,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,9228,"bash"]],[9228,9228],[9232,9232]]],[1524536948771,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,9300,"\n作者：fanlehai\n链接：https://www.jianshu.com/p/491609b1c426\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n"]],[9299,9395],[9299,9299]]]]]]}