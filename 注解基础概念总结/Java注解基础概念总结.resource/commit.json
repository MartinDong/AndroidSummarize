{"compress":true,"commitItems":[["31480e73-bb4f-444c-80a4-1f8efb8c254c",1519702422436,"",[[1519702416446,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,0,"Java注解基础概念总结\n===\n\n\n"]],[0,0],[19,19]]],[1519702423295,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,0,"**注解的概念**\n\n注解（Annotation），也叫元数据（Metadata），是"],[1,4,"5的新特性，JDK5引入了Metadata很容易的就能够调用Annotations。"],[-1,6,"基础概念总结\n===\n"],[1,17,"与类、接口、枚举在同一个层次，并可以应用于包、类型、构造方法、方法、成员变量、参数、本地变量的声明中，用来对这些元素进行说明注释。\n\n**注解的语法与定义形式**\n\n（1）以@interface关键字定义\n（2）注解包含成员，成员以无参数的方法的形式被声明。其方法名和返回值定义了该成员的名字和类型。\n（3）成员赋值是通过@Annotation(name=value)的形式。\n（4）注解需要标明注解的生命周期，注解的修饰目标等信息，这些信息是通过元注解实现。\n\n以 **java.lang.annotation** 中定义的 **Target **注解来说明：\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Retention(value = RetentionPolicy.RUNTIME)  \n2.  @Target(value = { ElementType.ANNOTATION_TYPE } )  \n3.  public @interface Target {  \n4.  ElementType[] value();  \n5.  }  "],[1,19,"源码分析如下：\n第一：元注解@Retention，成员value的值为RetentionPolicy.RUNTIME。\n第二：元注解@Target，成员value是个数组，用{}形式赋值，值为ElementType.ANNOTATION_TYPE\n第三：成员名称为value，类型为ElementType[]\n另外，需要注意一下，如果成员名称是value，在赋值过程中可以简写。如果成员类型为数组，但是只赋值一个元素，则也可以简写。如上面的简写形式为：\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Retention(RetentionPolicy.RUNTIME)  \n2.  @Target(ElementType.ANNOTATION_TYPE)  \n3.  public @interface Target {  \n4.  ElementType[] value();  \n5.  }  \n\n**注解的分类**\n\n注解的分类有两种分法：\n\n**第一种分法**\n\n1、基本内置注解，是指Java自带的几个Annotation，如@Override、Deprecated、@SuppressWarnings等；\n\n2、元注解（meta-annotation），是指负责注解其他注解的注解，JDK 1.5及以后版本定义了4个标准的元注解类型，如下：\n\n*   @Target \n*   @Retention \n*   @Documented \n*   @Inherited \n\n3、自定义注解，根据需要可以自定义注解，自定义注解需要用到上面的meta-annotation\n\n**第二种分法**\n\n注解需要标明注解的生命周期，这些信息是通过元注解 **@Retention** 实现，注解的值是 **enum **类型的 **RetentionPolicy**，包括以下几种情况：\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  public enum RetentionPolicy {  \n2.  /** \n3.  * 注解只保留在源文件，当Java文件编译成class文件的时候，注解被遗弃. \n4.  * 这意味着：Annotation仅存在于编译器处理期间，编译器处理完之后，该Annotation就没用了 \n5.  */  \n6.  SOURCE,  \n\n8.  /** \n9.  * 注解被保留到class文件，但jvm加载class文件时候被遗弃，这是默认的生命周期. \n10.  */  \n11.  CLASS,  \n\n13.  /** \n14.  * 注解不仅被保存到class文件中，jvm加载class文件之后，仍然存在， \n15.  * 保存到class对象中，可以通过反射来获取 \n16.  */  \n17.  RUNTIME  \n18.  }  \n\n**元注解**\n\n如上所介绍的Java定义了4个标准的元注解：\n\n@Documented：标记注解，用于描述其它类型的注解应该被作为被标注的程序成员的公共API，因此可以被例如javadoc此类的工具文档化。\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Documented {  \n5.  }  \n\n@Inherited：标记注解，允许子类继承父类的注解\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Inherited {  \n5.  }  \n\n@Retention：指Annotation被保留的时间长短，标明注解的生命周期，3种**RetentionPolicy**取值含义上面以说明\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Retention {  \n5.  RetentionPolicy value();  \n6.  }  \n\n@Target：标明注解的修饰目标，共有\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Target {  \n5.  ElementType[] value();  \n6.  }  \n\n8.  // ElementType取值  \n9.  public enum ElementType {  \n10.  /** 类、接口（包括注解类型）或枚举 */  \n11.  TYPE,  \n12.  /** field属性，也包括enum常量使用的注解 */  \n13.  FIELD,  \n14.  /** 方法 */  \n15.  METHOD,  \n16.  /** 参数 */  \n17.  PARAMETER,  \n18.  /** 构造函数 */  \n19.  CONSTRUCTOR,  \n20.  /** 局部变量 */  \n21.  LOCAL_VARIABLE,  \n22.  /** 注解上使用的元注解 */  \n23.  ANNOTATION_TYPE,  \n24.  /** 包 */  \n25.  PACKAGE  \n26.  }"]],[0,19],[4229,4229]]],[1519702453391,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,0,"**注解的概念**\n\n注解（Annotation），也叫元数据（Metadata），是Java5的新特性，JDK5引入了Metadata很容易的就能够调用Annotations。注解与类、接口、枚举在同一个层次，并可以应用于包、类型、构造方法、方法、成员变量、参数、本地变量的声明中，用来对这些元素进行说明注释。\n\n**注解的语法与定义形式**\n\n（1）以@interface关键字定义\n（2）注解包含成员，成员以无参数的方法的形式被声明。其方法名和返回值定义了该成员的名字和类型。\n（3）成员赋值是通过@Annotation(name=value)的形式。\n（4）注解需要标明注解的生命周期，注解的修饰目标等信息，这些信息是通过元注解实现。\n\n以 **java.lang.annotation** 中定义的 **Target **注解来说明：\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n"],[1,4229,"\n\n源码分析如下：\n第一：元注解@Retention，成员value的值为RetentionPolicy.RUNTIME。\n第二：元注解@Target，成员value是个数组，用{}形式赋值，值为ElementType.ANNOTATION_TYPE\n第三：成员名称为value，类型为ElementType[]\n另外，需要注意一下，如果成员名称是value，在赋值过程中可以简写。如果成员类型为数组，但是只赋值一个元素，则也可以简写。如上面的简写形式为：\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Retention(RetentionPolicy.RUNTIME)  \n2.  @Target(ElementType.ANNOTATION_TYPE)  \n3.  public @interface Target {  \n4.  ElementType[] value();  \n5.  }  \n\n**注解的分类**\n\n注解的分类有两种分法：\n\n**第一种分法**\n\n1、基本内置注解，是指Java自带的几个Annotation，如@Override、Deprecated、@SuppressWarnings等；\n\n2、元注解（meta-annotation），是指负责注解其他注解的注解，JDK 1.5及以后版本定义了4个标准的元注解类型，如下：\n\n*   @Target \n*   @Retention \n*   @Documented \n*   @Inherited \n\n3、自定义注解，根据需要可以自定义注解，自定义注解需要用到上面的meta-annotation\n\n**第二种分法**\n\n注解需要标明注解的生命周期，这些信息是通过元注解 **@Retention** 实现，注解的值是 **enum **类型的 **RetentionPolicy**，包括以下几种情况：\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  public enum RetentionPolicy {  \n2.  /** \n3.  * 注解只保留在源文件，当Java文件编译成class文件的时候，注解被遗弃. \n4.  * 这意味着：Annotation仅存在于编译器处理期间，编译器处理完之后，该Annotation就没用了 \n5.  */  \n6.  SOURCE,  \n\n8.  /** \n9.  * 注解被保留到class文件，但jvm加载class文件时候被遗弃，这是默认的生命周期. \n10.  */  \n11.  CLASS,  \n\n13.  /** \n14.  * 注解不仅被保存到class文件中，jvm加载class文件之后，仍然存在， \n15.  * 保存到class对象中，可以通过反射来获取 \n16.  */  \n17.  RUNTIME  \n18.  }  \n\n**元注解**\n\n如上所介绍的Java定义了4个标准的元注解：\n\n@Documented：标记注解，用于描述其它类型的注解应该被作为被标注的程序成员的公共API，因此可以被例如javadoc此类的工具文档化。\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Documented {  \n5.  }  \n\n@Inherited：标记注解，允许子类继承父类的注解\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Inherited {  \n5.  }  \n\n@Retention：指Annotation被保留的时间长短，标明注解的生命周期，3种**RetentionPolicy**取值含义上面以说明\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Retention {  \n5.  RetentionPolicy value();  \n6.  }  \n\n@Target：标明注解的修饰目标，共有\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Target {  \n5.  ElementType[] value();  \n6.  }  \n\n8.  // ElementType取值  \n9.  public enum ElementType {  \n10.  /** 类、接口（包括注解类型）或枚举 */  \n11.  TYPE,  \n12.  /** field属性，也包括enum常量使用的注解 */  \n13.  FIELD,  \n14.  /** 方法 */  \n15.  METHOD,  \n16.  /** 参数 */  \n17.  PARAMETER,  \n18.  /** 构造函数 */  \n19.  CONSTRUCTOR,  \n20.  /** 局部变量 */  \n21.  LOCAL_VARIABLE,  \n22.  /** 注解上使用的元注解 */  \n23.  ANNOTATION_TYPE,  \n24.  /** 包 */  \n25.  PACKAGE  \n26.  }"]],[554,729],[4783,4783]]],[1519702454376,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,0,"**注解的概念**\n\n注解（Annotation），也叫元数据（Metadata），是Java5的新特性，JDK5引入了Metadata很容易的就能够调用Annotations。注解与类、接口、枚举在同一个层次，并可以应用于包、类型、构造方法、方法、成员变量、参数、本地变量的声明中，用来对这些元素进行说明注释。\n\n**注解的语法与定义形式**\n\n（1）以@interface关键字定义\n（2）注解包含成员，成员以无参数的方法的形式被声明。其方法名和返回值定义了该成员的名字和类型。\n（3）成员赋值是通过@Annotation(name=value)的形式。\n（4）注解需要标明注解的生命周期，注解的修饰目标等信息，这些信息是通过元注解实现。\n\n以 **java.lang.annotation** 中定义的 **Target **注解来说明：\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n"],[-1,4783,"\n\n源码分析如下：\n第一：元注解@Retention，成员value的值为RetentionPolicy.RUNTIME。\n第二：元注解@Target，成员value是个数组，用{}形式赋值，值为ElementType.ANNOTATION_TYPE\n第三：成员名称为value，类型为ElementType[]\n另外，需要注意一下，如果成员名称是value，在赋值过程中可以简写。如果成员类型为数组，但是只赋值一个元素，则也可以简写。如上面的简写形式为：\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Retention(RetentionPolicy.RUNTIME)  \n2.  @Target(ElementType.ANNOTATION_TYPE)  \n3.  public @interface Target {  \n4.  ElementType[] value();  \n5.  }  \n\n**注解的分类**\n\n注解的分类有两种分法：\n\n**第一种分法**\n\n1、基本内置注解，是指Java自带的几个Annotation，如@Override、Deprecated、@SuppressWarnings等；\n\n2、元注解（meta-annotation），是指负责注解其他注解的注解，JDK 1.5及以后版本定义了4个标准的元注解类型，如下：\n\n*   @Target \n*   @Retention \n*   @Documented \n*   @Inherited \n\n3、自定义注解，根据需要可以自定义注解，自定义注解需要用到上面的meta-annotation\n\n**第二种分法**\n\n注解需要标明注解的生命周期，这些信息是通过元注解 **@Retention** 实现，注解的值是 **enum **类型的 **RetentionPolicy**，包括以下几种情况：\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  public enum RetentionPolicy {  \n2.  /** \n3.  * 注解只保留在源文件，当Java文件编译成class文件的时候，注解被遗弃. \n4.  * 这意味着：Annotation仅存在于编译器处理期间，编译器处理完之后，该Annotation就没用了 \n5.  */  \n6.  SOURCE,  \n\n8.  /** \n9.  * 注解被保留到class文件，但jvm加载class文件时候被遗弃，这是默认的生命周期. \n10.  */  \n11.  CLASS,  \n\n13.  /** \n14.  * 注解不仅被保存到class文件中，jvm加载class文件之后，仍然存在， \n15.  * 保存到class对象中，可以通过反射来获取 \n16.  */  \n17.  RUNTIME  \n18.  }  \n\n**元注解**\n\n如上所介绍的Java定义了4个标准的元注解：\n\n@Documented：标记注解，用于描述其它类型的注解应该被作为被标注的程序成员的公共API，因此可以被例如javadoc此类的工具文档化。\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Documented {  \n5.  }  \n\n@Inherited：标记注解，允许子类继承父类的注解\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Inherited {  \n5.  }  \n\n@Retention：指Annotation被保留的时间长短，标明注解的生命周期，3种**RetentionPolicy**取值含义上面以说明\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Retention {  \n5.  RetentionPolicy value();  \n6.  }  \n\n@Target：标明注解的修饰目标，共有\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Target {  \n5.  ElementType[] value();  \n6.  }  \n\n8.  // ElementType取值  \n9.  public enum ElementType {  \n10.  /** 类、接口（包括注解类型）或枚举 */  \n11.  TYPE,  \n12.  /** field属性，也包括enum常量使用的注解 */  \n13.  FIELD,  \n14.  /** 方法 */  \n15.  METHOD,  \n16.  /** 参数 */  \n17.  PARAMETER,  \n18.  /** 构造函数 */  \n19.  CONSTRUCTOR,  \n20.  /** 局部变量 */  \n21.  LOCAL_VARIABLE,  \n22.  /** 注解上使用的元注解 */  \n23.  ANNOTATION_TYPE,  \n24.  /** 包 */  \n25.  PACKAGE  \n26.  }"]],[4783,4783],[554,729]]],[1519702462279,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,0,"**注解的概念**\n\n注解（Annotation），也叫元数据（Metadata），是Java5的新特性，JDK5引入了Metadata很容易的就能够调用Annotations。注解与类、接口、枚举在同一个层次，并可以应用于包、类型、构造方法、方法、成员变量、参数、本地变量的声明中，用来对这些元素进行说明注释。\n\n**注解的语法与定义形式**\n\n（1）以@interface关键字定义\n（2）注解包含成员，成员以无参数的方法的形式被声明。其方法名和返回值定义了该成员的名字和类型。\n（3）成员赋值是通过@Annotation(name=value)的形式。\n（4）注解需要标明注解的生命周期，注解的修饰目标等信息，这些信息是通过元注解实现。\n\n以 **java.lang.annotation** 中定义的 **Target **注解来说明：\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n"],[1,4229,"\n\n源码分析如下：\n第一：元注解@Retention，成员value的值为RetentionPolicy.RUNTIME。\n第二：元注解@Target，成员value是个数组，用{}形式赋值，值为ElementType.ANNOTATION_TYPE\n第三：成员名称为value，类型为ElementType[]\n另外，需要注意一下，如果成员名称是value，在赋值过程中可以简写。如果成员类型为数组，但是只赋值一个元素，则也可以简写。如上面的简写形式为：\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Retention(RetentionPolicy.RUNTIME)  \n2.  @Target(ElementType.ANNOTATION_TYPE)  \n3.  public @interface Target {  \n4.  ElementType[] value();  \n5.  }  \n\n**注解的分类**\n\n注解的分类有两种分法：\n\n**第一种分法**\n\n1、基本内置注解，是指Java自带的几个Annotation，如@Override、Deprecated、@SuppressWarnings等；\n\n2、元注解（meta-annotation），是指负责注解其他注解的注解，JDK 1.5及以后版本定义了4个标准的元注解类型，如下：\n\n*   @Target \n*   @Retention \n*   @Documented \n*   @Inherited \n\n3、自定义注解，根据需要可以自定义注解，自定义注解需要用到上面的meta-annotation\n\n**第二种分法**\n\n注解需要标明注解的生命周期，这些信息是通过元注解 **@Retention** 实现，注解的值是 **enum **类型的 **RetentionPolicy**，包括以下几种情况：\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  public enum RetentionPolicy {  \n2.  /** \n3.  * 注解只保留在源文件，当Java文件编译成class文件的时候，注解被遗弃. \n4.  * 这意味着：Annotation仅存在于编译器处理期间，编译器处理完之后，该Annotation就没用了 \n5.  */  \n6.  SOURCE,  \n\n8.  /** \n9.  * 注解被保留到class文件，但jvm加载class文件时候被遗弃，这是默认的生命周期. \n10.  */  \n11.  CLASS,  \n\n13.  /** \n14.  * 注解不仅被保存到class文件中，jvm加载class文件之后，仍然存在， \n15.  * 保存到class对象中，可以通过反射来获取 \n16.  */  \n17.  RUNTIME  \n18.  }  \n\n**元注解**\n\n如上所介绍的Java定义了4个标准的元注解：\n\n@Documented：标记注解，用于描述其它类型的注解应该被作为被标注的程序成员的公共API，因此可以被例如javadoc此类的工具文档化。\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Documented {  \n5.  }  \n\n@Inherited：标记注解，允许子类继承父类的注解\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Inherited {  \n5.  }  \n\n@Retention：指Annotation被保留的时间长短，标明注解的生命周期，3种**RetentionPolicy**取值含义上面以说明\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Retention {  \n5.  RetentionPolicy value();  \n6.  }  \n\n@Target：标明注解的修饰目标，共有\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Target {  \n5.  ElementType[] value();  \n6.  }  \n\n8.  // ElementType取值  \n9.  public enum ElementType {  \n10.  /** 类、接口（包括注解类型）或枚举 */  \n11.  TYPE,  \n12.  /** field属性，也包括enum常量使用的注解 */  \n13.  FIELD,  \n14.  /** 方法 */  \n15.  METHOD,  \n16.  /** 参数 */  \n17.  PARAMETER,  \n18.  /** 构造函数 */  \n19.  CONSTRUCTOR,  \n20.  /** 局部变量 */  \n21.  LOCAL_VARIABLE,  \n22.  /** 注解上使用的元注解 */  \n23.  ANNOTATION_TYPE,  \n24.  /** 包 */  \n25.  PACKAGE  \n26.  }"]],[554,729],[4783,4783]]],[1519702462770,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,0,"**注解的概念**\n\n注解（Annotation），也叫元数据（Metadata），是Java5的新特性，JDK5引入了Metadata很容易的就能够调用Annotations。注解与类、接口、枚举在同一个层次，并可以应用于包、类型、构造方法、方法、成员变量、参数、本地变量的声明中，用来对这些元素进行说明注释。\n\n**注解的语法与定义形式**\n\n（1）以@interface关键字定义\n（2）注解包含成员，成员以无参数的方法的形式被声明。其方法名和返回值定义了该成员的名字和类型。\n（3）成员赋值是通过@Annotation(name=value)的形式。\n（4）注解需要标明注解的生命周期，注解的修饰目标等信息，这些信息是通过元注解实现。\n\n以 **java.lang.annotation** 中定义的 **Target **注解来说明：\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n"],[-1,4783,"\n\n源码分析如下：\n第一：元注解@Retention，成员value的值为RetentionPolicy.RUNTIME。\n第二：元注解@Target，成员value是个数组，用{}形式赋值，值为ElementType.ANNOTATION_TYPE\n第三：成员名称为value，类型为ElementType[]\n另外，需要注意一下，如果成员名称是value，在赋值过程中可以简写。如果成员类型为数组，但是只赋值一个元素，则也可以简写。如上面的简写形式为：\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Retention(RetentionPolicy.RUNTIME)  \n2.  @Target(ElementType.ANNOTATION_TYPE)  \n3.  public @interface Target {  \n4.  ElementType[] value();  \n5.  }  \n\n**注解的分类**\n\n注解的分类有两种分法：\n\n**第一种分法**\n\n1、基本内置注解，是指Java自带的几个Annotation，如@Override、Deprecated、@SuppressWarnings等；\n\n2、元注解（meta-annotation），是指负责注解其他注解的注解，JDK 1.5及以后版本定义了4个标准的元注解类型，如下：\n\n*   @Target \n*   @Retention \n*   @Documented \n*   @Inherited \n\n3、自定义注解，根据需要可以自定义注解，自定义注解需要用到上面的meta-annotation\n\n**第二种分法**\n\n注解需要标明注解的生命周期，这些信息是通过元注解 **@Retention** 实现，注解的值是 **enum **类型的 **RetentionPolicy**，包括以下几种情况：\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  public enum RetentionPolicy {  \n2.  /** \n3.  * 注解只保留在源文件，当Java文件编译成class文件的时候，注解被遗弃. \n4.  * 这意味着：Annotation仅存在于编译器处理期间，编译器处理完之后，该Annotation就没用了 \n5.  */  \n6.  SOURCE,  \n\n8.  /** \n9.  * 注解被保留到class文件，但jvm加载class文件时候被遗弃，这是默认的生命周期. \n10.  */  \n11.  CLASS,  \n\n13.  /** \n14.  * 注解不仅被保存到class文件中，jvm加载class文件之后，仍然存在， \n15.  * 保存到class对象中，可以通过反射来获取 \n16.  */  \n17.  RUNTIME  \n18.  }  \n\n**元注解**\n\n如上所介绍的Java定义了4个标准的元注解：\n\n@Documented：标记注解，用于描述其它类型的注解应该被作为被标注的程序成员的公共API，因此可以被例如javadoc此类的工具文档化。\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Documented {  \n5.  }  \n\n@Inherited：标记注解，允许子类继承父类的注解\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Inherited {  \n5.  }  \n\n@Retention：指Annotation被保留的时间长短，标明注解的生命周期，3种**RetentionPolicy**取值含义上面以说明\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Retention {  \n5.  RetentionPolicy value();  \n6.  }  \n\n@Target：标明注解的修饰目标，共有\n\n**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Target {  \n5.  ElementType[] value();  \n6.  }  \n\n8.  // ElementType取值  \n9.  public enum ElementType {  \n10.  /** 类、接口（包括注解类型）或枚举 */  \n11.  TYPE,  \n12.  /** field属性，也包括enum常量使用的注解 */  \n13.  FIELD,  \n14.  /** 方法 */  \n15.  METHOD,  \n16.  /** 参数 */  \n17.  PARAMETER,  \n18.  /** 构造函数 */  \n19.  CONSTRUCTOR,  \n20.  /** 局部变量 */  \n21.  LOCAL_VARIABLE,  \n22.  /** 注解上使用的元注解 */  \n23.  ANNOTATION_TYPE,  \n24.  /** 包 */  \n25.  PACKAGE  \n26.  }"]],[4783,4783],[554,729]]],[1519702468288,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,324," "],[1,325," "],[-1,349," "],[1,350," "],[-1,354," "],[1,355," "],[-1,363," "],[1,364," "],[-1,384," "],[1,385," "],[-1,474," "],[1,475," "],[-1,727,"  "],[1,729,""],[-1,969," "],[1,970," "],[-1,1059," "],[1,1060," "],[-1,1178,"  "],[1,1180,"  "],[-1,1221,"  "],[1,1223,"  "],[-1,1234," "],[1,1235," "],[-1,1245," "],[1,1246," "],[-1,1252," {  "],[1,1256," {  "],[-1,1274," "],[1,1275," "],[-1,1283,"  "],[1,1285,"  "],[-1,1291,"  "],[1,1293,"  "],[-1,1619," "],[1,1620," "],[-1,1634," "],[1,1635," "],[-1,1643," "],[1,1644," "],[-1,1650," "],[1,1651," "],[-1,1656," "],[1,1657," "],[-1,1698," "],[1,1699," "],[-1,1788," "],[1,1789," "],[-1,1878," "],[1,1879," "],[-1,1883," "],[1,1884," "],[-1,1899," {  "],[1,1903," {  "],[-1,1911," "],[1,1912," "],[-1,1918," "],[1,1919," "],[-1,1956," "],[1,1957," "],[-1,1963," "],[1,1964," "],[-1,2015," "],[1,2016," "],[-1,2023,"  "],[1,2025,"  "],[-1,2037,"  "],[1,2039,"  "],[-1,2048," "],[1,2049," "],[-1,2055," "],[1,2056," "],[-1,2099," "],[1,2100," "],[-1,2108,"  "],[1,2110,"  "],[-1,2122,"  "],[1,2124,"  "],[-1,2134," "],[1,2135," "],[-1,2142," "],[1,2143," "],[-1,2180," "],[1,2181," "],[-1,2188," "],[1,2189," "],[-1,2210," "],[1,2211," "],[-1,2219,"  "],[1,2221,"  "],[-1,2234,"  "],[1,2236,"  "],[-1,2243,"  "],[1,2245,"  "],[-1,2363," "],[1,2364," "],[-1,2453," "],[1,2454," "],[-1,2548,"  "],[1,2550,"  "],[-1,2590,"  "],[1,2592,"  "],[-1,2633,"  "],[1,2635,"  "],[-1,2646," "],[1,2647," "],[-1,2657," "],[1,2658," "],[-1,2668," {  "],[1,2672," {  "],[-1,2678,"  "],[1,2680,"  "],[-1,2721," "],[1,2722," "],[-1,2811," "],[1,2812," "],[-1,2906,"  "],[1,2908,"  "],[-1,2948,"  "],[1,2950,"  "],[-1,2991,"  "],[1,2993,"  "],[-1,3004," "],[1,3005," "],[-1,3015," "],[1,3016," "],[-1,3025," {  "],[1,3029," {  "],[-1,3035,"  "],[1,3037,"  "],[-1,3122," "],[1,3123," "],[-1,3212," "],[1,3213," "],[-1,3307,"  "],[1,3309,"  "],[-1,3349,"  "],[1,3351,"  "],[-1,3392,"  "],[1,3394,"  "],[-1,3405," "],[1,3406," "],[-1,3416," "],[1,3417," "],[-1,3426," {  "],[1,3430," {  "],[-1,3450," "],[1,3451," "],[-1,3459,"  "],[1,3461,"  "],[-1,3467,"  "],[1,3469,"  "],[-1,3503," "],[1,3504," "],[-1,3593," "],[1,3594," "],[-1,3688,"  "],[1,3690,"  "],[-1,3730,"  "],[1,3732,"  "],[-1,3773,"  "],[1,3775,"  "],[-1,3786," "],[1,3787," "],[-1,3797," "],[1,3798," "],[-1,3804," {  "],[1,3808," {  "],[-1,3826," "],[1,3827," "],[-1,3835,"  "],[1,3837,"  "],[-1,3843,"  "],[1,3845,"  "],[-1,3853," "],[1,3854," "],[-1,3867,"  "],[1,3869,"  "],[-1,3880," "],[1,3881," "],[-1,3885," "],[1,3886," "],[-1,3897," {  "],[1,3901," {  "],[-1,3910," "],[1,3911," "],[-1,3926," */  "],[1,3931," */  "],[-1,3942,"  "],[1,3944,"  "],[-1,3953," "],[1,3954," "],[-1,3976," */  "],[1,3981," */  "],[-1,3993,"  "],[1,3995,"  "],[-1,4004," 方法 */  "],[1,4012," 方法 */  "],[-1,4025,"  "],[1,4027,"  "],[-1,4036," 参数 */  "],[1,4044," 参数 */  "],[-1,4060,"  "],[1,4062,"  "],[-1,4071," "],[1,4072," "],[-1,4076," */  "],[1,4081," */  "],[-1,4099,"  "],[1,4101,"  "],[-1,4110," "],[1,4111," "],[-1,4115," */  "],[1,4120," */  "],[-1,4141,"  "],[1,4143,"  "],[-1,4152," "],[1,4153," "],[-1,4162," */  "],[1,4167," */  "],[-1,4189,"  "],[1,4191,"  "],[-1,4200," 包 */  "],[1,4207," 包 */  "],[-1,4220,"  "],[1,4222,"  "]],[554,729],[727,727]]],[1519702468983,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,324," "],[-1,324," "],[1,349," "],[-1,349," "],[1,354," "],[-1,354," "],[1,363," "],[-1,363," "],[1,384," "],[-1,384," "],[1,474," "],[-1,474," "],[1,727,"  "],[-1,727,""],[1,967," "],[-1,967," "],[1,1057," "],[-1,1057," "],[1,1176,"  "],[-1,1176,"  "],[1,1219,"  "],[-1,1219,"  "],[1,1232," "],[-1,1232," "],[1,1243," "],[-1,1243," "],[1,1250," {  "],[-1,1250," {  "],[1,1272," "],[-1,1272," "],[1,1281,"  "],[-1,1281,"  "],[1,1289,"  "],[-1,1289,"  "],[1,1617," "],[-1,1617," "],[1,1632," "],[-1,1632," "],[1,1641," "],[-1,1641," "],[1,1648," "],[-1,1648," "],[1,1654," "],[-1,1654," "],[1,1696," "],[-1,1696," "],[1,1786," "],[-1,1786," "],[1,1876," "],[-1,1876," "],[1,1881," "],[-1,1881," "],[1,1897," {  "],[-1,1897," {  "],[1,1909," "],[-1,1909," "],[1,1916," "],[-1,1916," "],[1,1954," "],[-1,1954," "],[1,1961," "],[-1,1961," "],[1,2013," "],[-1,2013," "],[1,2021,"  "],[-1,2021,"  "],[1,2035,"  "],[-1,2035,"  "],[1,2046," "],[-1,2046," "],[1,2053," "],[-1,2053," "],[1,2097," "],[-1,2097," "],[1,2106,"  "],[-1,2106,"  "],[1,2120,"  "],[-1,2120,"  "],[1,2132," "],[-1,2132," "],[1,2140," "],[-1,2140," "],[1,2178," "],[-1,2178," "],[1,2186," "],[-1,2186," "],[1,2208," "],[-1,2208," "],[1,2217,"  "],[-1,2217,"  "],[1,2232,"  "],[-1,2232,"  "],[1,2241,"  "],[-1,2241,"  "],[1,2361," "],[-1,2361," "],[1,2451," "],[-1,2451," "],[1,2546,"  "],[-1,2546,"  "],[1,2588,"  "],[-1,2588,"  "],[1,2631,"  "],[-1,2631,"  "],[1,2644," "],[-1,2644," "],[1,2655," "],[-1,2655," "],[1,2666," {  "],[-1,2666," {  "],[1,2676,"  "],[-1,2676,"  "],[1,2719," "],[-1,2719," "],[1,2809," "],[-1,2809," "],[1,2904,"  "],[-1,2904,"  "],[1,2946,"  "],[-1,2946,"  "],[1,2989,"  "],[-1,2989,"  "],[1,3002," "],[-1,3002," "],[1,3013," "],[-1,3013," "],[1,3023," {  "],[-1,3023," {  "],[1,3033,"  "],[-1,3033,"  "],[1,3120," "],[-1,3120," "],[1,3210," "],[-1,3210," "],[1,3305,"  "],[-1,3305,"  "],[1,3347,"  "],[-1,3347,"  "],[1,3390,"  "],[-1,3390,"  "],[1,3403," "],[-1,3403," "],[1,3414," "],[-1,3414," "],[1,3424," {  "],[-1,3424," {  "],[1,3448," "],[-1,3448," "],[1,3457,"  "],[-1,3457,"  "],[1,3465,"  "],[-1,3465,"  "],[1,3501," "],[-1,3501," "],[1,3591," "],[-1,3591," "],[1,3686,"  "],[-1,3686,"  "],[1,3728,"  "],[-1,3728,"  "],[1,3771,"  "],[-1,3771,"  "],[1,3784," "],[-1,3784," "],[1,3795," "],[-1,3795," "],[1,3802," {  "],[-1,3802," {  "],[1,3824," "],[-1,3824," "],[1,3833,"  "],[-1,3833,"  "],[1,3841,"  "],[-1,3841,"  "],[1,3851," "],[-1,3851," "],[1,3865,"  "],[-1,3865,"  "],[1,3878," "],[-1,3878," "],[1,3883," "],[-1,3883," "],[1,3895," {  "],[-1,3895," {  "],[1,3908," "],[-1,3908," "],[1,3924," */  "],[-1,3924," */  "],[1,3940,"  "],[-1,3940,"  "],[1,3951," "],[-1,3951," "],[1,3974," */  "],[-1,3974," */  "],[1,3991,"  "],[-1,3991,"  "],[1,4002," 方法 */  "],[-1,4002," 方法 */  "],[1,4023,"  "],[-1,4023,"  "],[1,4034," 参数 */  "],[-1,4034," 参数 */  "],[1,4058,"  "],[-1,4058,"  "],[1,4069," "],[-1,4069," "],[1,4074," */  "],[-1,4074," */  "],[1,4097,"  "],[-1,4097,"  "],[1,4108," "],[-1,4108," "],[1,4113," */  "],[-1,4113," */  "],[1,4139,"  "],[-1,4139,"  "],[1,4150," "],[-1,4150," "],[1,4160," */  "],[-1,4160," */  "],[1,4187,"  "],[-1,4187,"  "],[1,4198," 包 */  "],[-1,4198," 包 */  "],[1,4218,"  "],[-1,4218,"  "]],[727,727],[554,729]]],[1519702470898,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,324," "],[1,325," "],[-1,349," "],[1,350," "],[-1,354," "],[1,355," "],[-1,363," "],[1,364," "],[-1,384," "],[1,385," "],[-1,474," "],[1,475," "],[-1,554,"1.  "],[-1,574," = "],[1,577," = "],[-1,601,"  \n2."],[1,608,"\r\n"],[-1,621," = { "],[1,626," = { "],[-1,653," } )  \n3."],[1,662," } )"],[1,664,"\r\n"],[-1,670," "],[1,671," "],[-1,681," "],[1,682," "],[-1,688," {  \n4."],[1,695," {  \r\n  "],[-1,710," "],[1,711," "],[-1,719,"  \n5."],[-1,726,"}  "],[1,729,"\r\n} "],[-1,969," "],[1,970," "],[-1,1059," "],[1,1060," "],[-1,1178,"  "],[1,1180,"  "],[-1,1221,"  "],[1,1223,"  "],[-1,1234," "],[1,1235," "],[-1,1245," "],[1,1246," "],[-1,1252," {  "],[1,1256," {  "],[-1,1274," "],[1,1275," "],[-1,1283,"  "],[1,1285,"  "],[-1,1291,"  "],[1,1293,"  "],[-1,1619," "],[1,1620," "],[-1,1634," "],[1,1635," "],[-1,1643," "],[1,1644," "],[-1,1650," "],[1,1651," "],[-1,1656," "],[1,1657," "],[-1,1698," "],[1,1699," "],[-1,1788," "],[1,1789," "],[-1,1878," "],[1,1879," "],[-1,1883," "],[1,1884," "],[-1,1899," {  "],[1,1903," {  "],[-1,1911," "],[1,1912," "],[-1,1918," "],[1,1919," "],[-1,1956," "],[1,1957," "],[-1,1963," "],[1,1964," "],[-1,2015," "],[1,2016," "],[-1,2023,"  "],[1,2025,"  "],[-1,2037,"  "],[1,2039,"  "],[-1,2048," "],[1,2049," "],[-1,2055," "],[1,2056," "],[-1,2099," "],[1,2100," "],[-1,2108,"  "],[1,2110,"  "],[-1,2122,"  "],[1,2124,"  "],[-1,2134," "],[1,2135," "],[-1,2142," "],[1,2143," "],[-1,2180," "],[1,2181," "],[-1,2188," "],[1,2189," "],[-1,2210," "],[1,2211," "],[-1,2219,"  "],[1,2221,"  "],[-1,2234,"  "],[1,2236,"  "],[-1,2243,"  "],[1,2245,"  "],[-1,2363," "],[1,2364," "],[-1,2453," "],[1,2454," "],[-1,2548,"  "],[1,2550,"  "],[-1,2590,"  "],[1,2592,"  "],[-1,2633,"  "],[1,2635,"  "],[-1,2646," "],[1,2647," "],[-1,2657," "],[1,2658," "],[-1,2668," {  "],[1,2672," {  "],[-1,2678,"  "],[1,2680,"  "],[-1,2721," "],[1,2722," "],[-1,2811," "],[1,2812," "],[-1,2906,"  "],[1,2908,"  "],[-1,2948,"  "],[1,2950,"  "],[-1,2991,"  "],[1,2993,"  "],[-1,3004," "],[1,3005," "],[-1,3015," "],[1,3016," "],[-1,3025," {  "],[1,3029," {  "],[-1,3035,"  "],[1,3037,"  "],[-1,3122," "],[1,3123," "],[-1,3212," "],[1,3213," "],[-1,3307,"  "],[1,3309,"  "],[-1,3349,"  "],[1,3351,"  "],[-1,3392,"  "],[1,3394,"  "],[-1,3405," "],[1,3406," "],[-1,3416," "],[1,3417," "],[-1,3426," {  "],[1,3430," {  "],[-1,3450," "],[1,3451," "],[-1,3459,"  "],[1,3461,"  "],[-1,3467,"  "],[1,3469,"  "],[-1,3503," "],[1,3504," "],[-1,3593," "],[1,3594," "],[-1,3688,"  "],[1,3690,"  "],[-1,3730,"  "],[1,3732,"  "],[-1,3773,"  "],[1,3775,"  "],[-1,3786," "],[1,3787," "],[-1,3797," "],[1,3798," "],[-1,3804," {  "],[1,3808," {  "],[-1,3826," "],[1,3827," "],[-1,3835,"  "],[1,3837,"  "],[-1,3843,"  "],[1,3845,"  "],[-1,3853," "],[1,3854," "],[-1,3867,"  "],[1,3869,"  "],[-1,3880," "],[1,3881," "],[-1,3885," "],[1,3886," "],[-1,3897," {  "],[1,3901," {  "],[-1,3910," "],[1,3911," "],[-1,3926," */  "],[1,3931," */  "],[-1,3942,"  "],[1,3944,"  "],[-1,3953," "],[1,3954," "],[-1,3976," */  "],[1,3981," */  "],[-1,3993,"  "],[1,3995,"  "],[-1,4004," 方法 */  "],[1,4012," 方法 */  "],[-1,4025,"  "],[1,4027,"  "],[-1,4036," 参数 */  "],[1,4044," 参数 */  "],[-1,4060,"  "],[1,4062,"  "],[-1,4071," "],[1,4072," "],[-1,4076," */  "],[1,4081," */  "],[-1,4099,"  "],[1,4101,"  "],[-1,4110," "],[1,4111," "],[-1,4115," */  "],[1,4120," */  "],[-1,4141,"  "],[1,4143,"  "],[-1,4152," "],[1,4153," "],[-1,4162," */  "],[1,4167," */  "],[-1,4189,"  "],[1,4191,"  "],[-1,4200," 包 */  "],[1,4207," 包 */  "],[-1,4220,"  "],[1,4222,"  "]],[554,729],[716,716]]],[1519702472324,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,324," "],[-1,324," "],[1,349," "],[-1,349," "],[1,354," "],[-1,354," "],[1,363," "],[-1,363," "],[1,384," "],[-1,384," "],[1,474," "],[-1,474," "],[1,554,"1.  "],[1,570," = "],[-1,570," = "],[1,597,"  \n2."],[-1,599,"\r\n"],[1,614," = { "],[-1,614," = { "],[1,646," } )  \n3."],[-1,646," } )"],[-1,652,"\r\n"],[1,660," "],[-1,660," "],[1,671," "],[-1,671," "],[1,678," {  \n4."],[-1,678," {  \r\n  "],[1,701," "],[-1,701," "],[1,710,"  \n5."],[1,712,"}  "],[-1,712,"\r\n} "],[1,956," "],[-1,956," "],[1,1046," "],[-1,1046," "],[1,1165,"  "],[-1,1165,"  "],[1,1208,"  "],[-1,1208,"  "],[1,1221," "],[-1,1221," "],[1,1232," "],[-1,1232," "],[1,1239," {  "],[-1,1239," {  "],[1,1261," "],[-1,1261," "],[1,1270,"  "],[-1,1270,"  "],[1,1278,"  "],[-1,1278,"  "],[1,1606," "],[-1,1606," "],[1,1621," "],[-1,1621," "],[1,1630," "],[-1,1630," "],[1,1637," "],[-1,1637," "],[1,1643," "],[-1,1643," "],[1,1685," "],[-1,1685," "],[1,1775," "],[-1,1775," "],[1,1865," "],[-1,1865," "],[1,1870," "],[-1,1870," "],[1,1886," {  "],[-1,1886," {  "],[1,1898," "],[-1,1898," "],[1,1905," "],[-1,1905," "],[1,1943," "],[-1,1943," "],[1,1950," "],[-1,1950," "],[1,2002," "],[-1,2002," "],[1,2010,"  "],[-1,2010,"  "],[1,2024,"  "],[-1,2024,"  "],[1,2035," "],[-1,2035," "],[1,2042," "],[-1,2042," "],[1,2086," "],[-1,2086," "],[1,2095,"  "],[-1,2095,"  "],[1,2109,"  "],[-1,2109,"  "],[1,2121," "],[-1,2121," "],[1,2129," "],[-1,2129," "],[1,2167," "],[-1,2167," "],[1,2175," "],[-1,2175," "],[1,2197," "],[-1,2197," "],[1,2206,"  "],[-1,2206,"  "],[1,2221,"  "],[-1,2221,"  "],[1,2230,"  "],[-1,2230,"  "],[1,2350," "],[-1,2350," "],[1,2440," "],[-1,2440," "],[1,2535,"  "],[-1,2535,"  "],[1,2577,"  "],[-1,2577,"  "],[1,2620,"  "],[-1,2620,"  "],[1,2633," "],[-1,2633," "],[1,2644," "],[-1,2644," "],[1,2655," {  "],[-1,2655," {  "],[1,2665,"  "],[-1,2665,"  "],[1,2708," "],[-1,2708," "],[1,2798," "],[-1,2798," "],[1,2893,"  "],[-1,2893,"  "],[1,2935,"  "],[-1,2935,"  "],[1,2978,"  "],[-1,2978,"  "],[1,2991," "],[-1,2991," "],[1,3002," "],[-1,3002," "],[1,3012," {  "],[-1,3012," {  "],[1,3022,"  "],[-1,3022,"  "],[1,3109," "],[-1,3109," "],[1,3199," "],[-1,3199," "],[1,3294,"  "],[-1,3294,"  "],[1,3336,"  "],[-1,3336,"  "],[1,3379,"  "],[-1,3379,"  "],[1,3392," "],[-1,3392," "],[1,3403," "],[-1,3403," "],[1,3413," {  "],[-1,3413," {  "],[1,3437," "],[-1,3437," "],[1,3446,"  "],[-1,3446,"  "],[1,3454,"  "],[-1,3454,"  "],[1,3490," "],[-1,3490," "],[1,3580," "],[-1,3580," "],[1,3675,"  "],[-1,3675,"  "],[1,3717,"  "],[-1,3717,"  "],[1,3760,"  "],[-1,3760,"  "],[1,3773," "],[-1,3773," "],[1,3784," "],[-1,3784," "],[1,3791," {  "],[-1,3791," {  "],[1,3813," "],[-1,3813," "],[1,3822,"  "],[-1,3822,"  "],[1,3830,"  "],[-1,3830,"  "],[1,3840," "],[-1,3840," "],[1,3854,"  "],[-1,3854,"  "],[1,3867," "],[-1,3867," "],[1,3872," "],[-1,3872," "],[1,3884," {  "],[-1,3884," {  "],[1,3897," "],[-1,3897," "],[1,3913," */  "],[-1,3913," */  "],[1,3929,"  "],[-1,3929,"  "],[1,3940," "],[-1,3940," "],[1,3963," */  "],[-1,3963," */  "],[1,3980,"  "],[-1,3980,"  "],[1,3991," 方法 */  "],[-1,3991," 方法 */  "],[1,4012,"  "],[-1,4012,"  "],[1,4023," 参数 */  "],[-1,4023," 参数 */  "],[1,4047,"  "],[-1,4047,"  "],[1,4058," "],[-1,4058," "],[1,4063," */  "],[-1,4063," */  "],[1,4086,"  "],[-1,4086,"  "],[1,4097," "],[-1,4097," "],[1,4102," */  "],[-1,4102," */  "],[1,4128,"  "],[-1,4128,"  "],[1,4139," "],[-1,4139," "],[1,4149," */  "],[-1,4149," */  "],[1,4176,"  "],[-1,4176,"  "],[1,4187," 包 */  "],[-1,4187," 包 */  "],[1,4207,"  "],[-1,4207,"  "]],[716,716],[554,729]]],[1519702476741,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,324," "],[1,325," "],[-1,349," "],[1,350," "],[-1,354," "],[1,355," "],[-1,363," "],[1,364," "],[-1,384," "],[1,385," "],[-1,474," "],[1,475," "],[-1,554,"1.  @Retention(value = RetentionPolicy.RUNTIME)  \n2.  @Target(value = { ElementType.ANNOTATION_TYPE } )  \n3.  public @interface Target {  \n4.  ElementType[] value();  \n5.  }  "],[1,729,"·"],[-1,969," "],[1,970," "],[-1,1059," "],[1,1060," "],[-1,1178,"  "],[1,1180,"  "],[-1,1221,"  "],[1,1223,"  "],[-1,1234," "],[1,1235," "],[-1,1245," "],[1,1246," "],[-1,1252," {  "],[1,1256," {  "],[-1,1274," "],[1,1275," "],[-1,1283,"  "],[1,1285,"  "],[-1,1291,"  "],[1,1293,"  "],[-1,1619," "],[1,1620," "],[-1,1634," "],[1,1635," "],[-1,1643," "],[1,1644," "],[-1,1650," "],[1,1651," "],[-1,1656," "],[1,1657," "],[-1,1698," "],[1,1699," "],[-1,1788," "],[1,1789," "],[-1,1878," "],[1,1879," "],[-1,1883," "],[1,1884," "],[-1,1899," {  "],[1,1903," {  "],[-1,1911," "],[1,1912," "],[-1,1918," "],[1,1919," "],[-1,1956," "],[1,1957," "],[-1,1963," "],[1,1964," "],[-1,2015," "],[1,2016," "],[-1,2023,"  "],[1,2025,"  "],[-1,2037,"  "],[1,2039,"  "],[-1,2048," "],[1,2049," "],[-1,2055," "],[1,2056," "],[-1,2099," "],[1,2100," "],[-1,2108,"  "],[1,2110,"  "],[-1,2122,"  "],[1,2124,"  "],[-1,2134," "],[1,2135," "],[-1,2142," "],[1,2143," "],[-1,2180," "],[1,2181," "],[-1,2188," "],[1,2189," "],[-1,2210," "],[1,2211," "],[-1,2219,"  "],[1,2221,"  "],[-1,2234,"  "],[1,2236,"  "],[-1,2243,"  "],[1,2245,"  "],[-1,2363," "],[1,2364," "],[-1,2453," "],[1,2454," "],[-1,2548,"  "],[1,2550,"  "],[-1,2590,"  "],[1,2592,"  "],[-1,2633,"  "],[1,2635,"  "],[-1,2646," "],[1,2647," "],[-1,2657," "],[1,2658," "],[-1,2668," {  "],[1,2672," {  "],[-1,2678,"  "],[1,2680,"  "],[-1,2721," "],[1,2722," "],[-1,2811," "],[1,2812," "],[-1,2906,"  "],[1,2908,"  "],[-1,2948,"  "],[1,2950,"  "],[-1,2991,"  "],[1,2993,"  "],[-1,3004," "],[1,3005," "],[-1,3015," "],[1,3016," "],[-1,3025," {  "],[1,3029," {  "],[-1,3035,"  "],[1,3037,"  "],[-1,3122," "],[1,3123," "],[-1,3212," "],[1,3213," "],[-1,3307,"  "],[1,3309,"  "],[-1,3349,"  "],[1,3351,"  "],[-1,3392,"  "],[1,3394,"  "],[-1,3405," "],[1,3406," "],[-1,3416," "],[1,3417," "],[-1,3426," {  "],[1,3430," {  "],[-1,3450," "],[1,3451," "],[-1,3459,"  "],[1,3461,"  "],[-1,3467,"  "],[1,3469,"  "],[-1,3503," "],[1,3504," "],[-1,3593," "],[1,3594," "],[-1,3688,"  "],[1,3690,"  "],[-1,3730,"  "],[1,3732,"  "],[-1,3773,"  "],[1,3775,"  "],[-1,3786," "],[1,3787," "],[-1,3797," "],[1,3798," "],[-1,3804," {  "],[1,3808," {  "],[-1,3826," "],[1,3827," "],[-1,3835,"  "],[1,3837,"  "],[-1,3843,"  "],[1,3845,"  "],[-1,3853," "],[1,3854," "],[-1,3867,"  "],[1,3869,"  "],[-1,3880," "],[1,3881," "],[-1,3885," "],[1,3886," "],[-1,3897," {  "],[1,3901," {  "],[-1,3910," "],[1,3911," "],[-1,3926," */  "],[1,3931," */  "],[-1,3942,"  "],[1,3944,"  "],[-1,3953," "],[1,3954," "],[-1,3976," */  "],[1,3981," */  "],[-1,3993,"  "],[1,3995,"  "],[-1,4004," 方法 */  "],[1,4012," 方法 */  "],[-1,4025,"  "],[1,4027,"  "],[-1,4036," 参数 */  "],[1,4044," 参数 */  "],[-1,4060,"  "],[1,4062,"  "],[-1,4071," "],[1,4072," "],[-1,4076," */  "],[1,4081," */  "],[-1,4099,"  "],[1,4101,"  "],[-1,4110," "],[1,4111," "],[-1,4115," */  "],[1,4120," */  "],[-1,4141,"  "],[1,4143,"  "],[-1,4152," "],[1,4153," "],[-1,4162," */  "],[1,4167," */  "],[-1,4189,"  "],[1,4191,"  "],[-1,4200," 包 */  "],[1,4207," 包 */  "],[-1,4220,"  "],[1,4222,"  ··"]],[554,729],[557,557]]],[1519702477509,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,554,"···"]],[557,557],[554,554]]],[1519702479434,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,554,"```java"]],[554,554],[561,561]]],[1519702479687,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,563,"\n"]],[561,561],[562,562]]],[1519702480814,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,562,"```"]],[562,562],[565,565]]],[1519702481808,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,562,"\n"]],[562,562],[563,563]]],[1519702482427,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,562,"1.  @Retention(value = RetentionPolicy.RUNTIME)  \n2.  @Target(value = { ElementType.ANNOTATION_TYPE } )  \n3.  public @interface Target {  \n4.  ElementType[] value();  \n5.  }"]],[562,562],[735,735]]],[1519702483497,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,562,"1.  @Retention(value = RetentionPolicy.RUNTIME)  \n2.  @Target(value = { ElementType.ANNOTATION_TYPE } )  \n3.  public @interface Target {  \n4.  ElementType[] value();  \n5.  }"]],[735,735],[562,562]]],[1519702484002,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,562,"@Retention(value = RetentionPolicy.RUNTIME)  \r\n@Target(value = { ElementType.ANNOTATION_TYPE } )  \r\npublic @interface Target {  \r\n    ElementType[] value();  \r\n} "]],[562,562],[724,724]]],[1519702490097,[null,[[-1,561,"源"],[1,562,"\n"],[-1,607,"\r"],[1,608,"\n"],[-1,660,"\r"],[1,661,"\n"],[-1,690,"\r"],[1,691,"\n"],[-1,720,"\r"],[1,721,"\n"],[-1,728,"码\n"],[1,730,"\n\n源码"],[-1,4219,"··"]],[561,561],[4219,4219]]],[1519702490097,[null,[[1,561,"源"],[-1,561,"\n"],[1,607,"\r"],[-1,607,"\n"],[1,660,"\r"],[-1,660,"\n"],[1,690,"\r"],[-1,690,"\n"],[1,720,"\r"],[-1,720,"\n"],[1,728,"码\n"],[-1,728,"\n\n源码"],[1,4221,"··"]],[4219,4219],[561,561]]],[1519702489010,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,607,"\r"],[-1,660,"\r"],[-1,690,"\r"],[-1,720,"\r"],[-1,728,"\n"]],[724,724],[724,724]]],[1519702504268,[null,[[-1,561,"源"],[1,562,"\n"],[1,725,"源码"],[-1,4214,"··"]],[561,561],[4214,4214]]],[1519702504268,[null,[[1,561,"源"],[-1,561,"\n"],[-1,725,"源码"],[1,4216,"··"]],[4214,4214],[561,561]]],[1519702500171,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,1133,"1.  @Retention(RetentionPolicy.RUNTIME)  \n2.  @Target(ElementType.ANNOTATION_TYPE)  \n3.  public @interface Target {  \n4.  ElementType[] value();  \n5.  }  "],[1,1287,"```java"]],[1133,1287],[1140,1140]]],[1519702500333,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,1142,"\n"]],[1140,1140],[1141,1141]]],[1519702501246,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,1141,"```"]],[1141,1141],[1144,1144]]],[1519702502314,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,1141,"\n"]],[1141,1141],[1142,1142]]],[1519702503522,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,1141,"@Retention(RetentionPolicy.RUNTIME)  \r\n@Target(ElementType.ANNOTATION_TYPE)  \r\npublic @interface Target {  \r\n    ElementType[] value();  \r\n}  "]],[1141,1141],[1283,1283]]],[1519702522812,[null,[[-1,561,"源"],[1,562,"\n"],[1,725,"源码"],[-1,1131,"1."],[-1,1140,"*"],[1,1141,"\n"],[-1,1178,"\r"],[1,1179,"\n"],[-1,1218,"\r"],[1,1219,"\n"],[-1,1248,"\r"],[1,1249,"\n"],[-1,1278,"\r"],[1,1279,"\n"],[-1,1287,"*\n"],[1,1289,"\n\n**"],[-1,4214,"··"]],[561,561],[4214,4214]]],[1519702522812,[null,[[1,561,"源"],[-1,561,"\n"],[-1,725,"源码"],[1,1133,"1."],[1,1140,"*"],[-1,1140,"\n"],[1,1178,"\r"],[-1,1178,"\n"],[1,1218,"\r"],[-1,1218,"\n"],[1,1248,"\r"],[-1,1248,"\n"],[1,1278,"\r"],[-1,1278,"\n"],[1,1287,"*\n"],[-1,1287,"\n\n**"],[1,4216,"··"]],[4214,4214],[561,561]]],[1519702518401,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,1178,"\r"],[-1,1218,"\r"],[-1,1248,"\r"],[-1,1278,"\r"],[-1,1862,"1.  public enum RetentionPolicy {  \n2.  /** \n3.  * 注解只保留在源文件，当Java文件编译成class文件的时候，注解被遗弃. \n4.  * 这意味着：Annotation仅存在于编译器处理期间，编译器处理完之后，该Annotation就没用了 \n5.  */  \n6.  SOURCE,  \n\n8.  /** \n9.  * 注解被保留到class文件，但jvm加载class文件时候被遗弃，这是默认的生命周期. \n10.  */  \n11.  CLASS,  \n\n13.  /** \n14.  * 注解不仅被保存到class文件中，jvm加载class文件之后，仍然存在， \n15.  * 保存到class对象中，可以通过反射来获取 \n16.  */  \n17.  RUNTIME  \n18.  }  "],[1,2239,"```java"]],[1858,2235],[1865,1865]]],[1519702518784,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,1867,"\n"]],[1865,1865],[1866,1866]]],[1519702519889,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,1866,"```"]],[1866,1866],[1869,1869]]],[1519702520949,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,1866,"\n"]],[1866,1866],[1867,1867]]],[1519702522056,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,1866,"public enum RetentionPolicy {  \r\n    /** \r\n     * 注解只保留在源文件，当Java文件编译成class文件的时候，注解被遗弃. \r\n     * 这意味着：Annotation仅存在于编译器处理期间，编译器处理完之后，该Annotation就没用了 \r\n     */  \r\n    SOURCE,  \r\n  \r\n    /** \r\n     * 注解被保留到class文件，但jvm加载class文件时候被遗弃，这是默认的生命周期. \r\n     */  \r\n    CLASS,  \r\n  \r\n    /** \r\n     * 注解不仅被保存到class文件中，jvm加载class文件之后，仍然存在， \r\n     * 保存到class对象中，可以通过反射来获取 \r\n     */  \r\n    RUNTIME  \r\n}  "]],[1866,1866],[2256,2256]]],[1519702539627,[null,[[-1,561,"源"],[1,562,"\n"],[-1,725,""],[1,725,"源码"],[-1,1131,"1."],[-1,1140,"*"],[1,1141,"\n"],[-1,1283,"*"],[1,1285,"\n**"],[-1,1856,"1."],[-1,1865,"*"],[1,1866,"\n"],[-1,1897,"\r"],[1,1898,"\n"],[-1,1907,"\r"],[1,1908,"\n"],[-1,1954,"\r"],[1,1955,"\n"],[-1,2015,"\r"],[1,2016,"\n"],[-1,2026,"\r"],[1,2027,"\n"],[-1,2041,"\r\n  \r"],[1,2046,"\n\n  \n"],[-1,2055,"\r"],[1,2056,"\n"],[-1,2108,"\r"],[1,2109,"\n"],[-1,2119,"\r"],[1,2120,"\n"],[-1,2133,"\r\n  \r"],[1,2138,"\n\n  \n"],[-1,2147,"\r"],[1,2148,"\n"],[-1,2194,"\r"],[1,2195,"\n"],[-1,2225,"\r"],[1,2226,"\n"],[-1,2236,"\r"],[1,2237,"\n"],[-1,2251,"\r"],[1,2252,"\n"],[-1,2260,"*\n"],[1,2262,"\n\n**"],[-1,4235,"··"]],[561,561],[4235,4235]]],[1519702539627,[null,[[1,561,"源"],[-1,561,"\n"],[1,725,""],[-1,725,"源码"],[1,1133,"1."],[1,1140,"*"],[-1,1140,"\n"],[1,1283,"*"],[-1,1284,"\n**"],[1,1858,"1."],[1,1865,"*"],[-1,1865,"\n"],[1,1897,"\r"],[-1,1897,"\n"],[1,1907,"\r"],[-1,1907,"\n"],[1,1954,"\r"],[-1,1954,"\n"],[1,2015,"\r"],[-1,2015,"\n"],[1,2026,"\r"],[-1,2026,"\n"],[1,2041,"\r\n  \r"],[-1,2041,"\n\n  \n"],[1,2055,"\r"],[-1,2055,"\n"],[1,2108,"\r"],[-1,2108,"\n"],[1,2119,"\r"],[-1,2119,"\n"],[1,2133,"\r\n  \r"],[-1,2133,"\n\n  \n"],[1,2147,"\r"],[-1,2147,"\n"],[1,2194,"\r"],[-1,2194,"\n"],[1,2225,"\r"],[-1,2225,"\n"],[1,2236,"\r"],[-1,2236,"\n"],[1,2251,"\r"],[-1,2251,"\n"],[1,2260,"*\n"],[-1,2260,"\n\n**"],[1,4237,"··"]],[4235,4235],[561,561]]],[1519702535483,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,1897,"\r"],[-1,1907,"\r"],[-1,1954,"\r"],[-1,2015,"\r"],[-1,2026,"\r"],[-1,2041,"\r"],[-1,2045,"\r"],[-1,2055,"\r"],[-1,2108,"\r"],[-1,2119,"\r"],[-1,2133,"\r"],[-1,2137,"\r"],[-1,2147,"\r"],[-1,2194,"\r"],[-1,2225,"\r"],[-1,2236,"\r"],[-1,2251,"\r"],[-1,2548,"1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Documented {  \n5.  }  \n"],[1,2696,"```java"]],[2531,2679],[2538,2538]]],[1519702535672,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,2539,"\n"]],[2538,2538],[2539,2539]]],[1519702536535,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,2539,"```"]],[2539,2539],[2542,2542]]],[1519702537606,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,2539,"\n"]],[2539,2539],[2540,2540]]],[1519702538787,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,2539,"@Documented  \r\n@Retention(RetentionPolicy.RUNTIME)  \r\n@Target(ElementType.ANNOTATION_TYPE)  \r\npublic @interface Documented {  \r\n} "]],[2539,2539],[2669,2669]]],[1519702563384,[null,[[-1,561,"源"],[1,562,"\n"],[-1,725,""],[1,725,"源码"],[-1,1131,"1."],[-1,1140,"*"],[1,1141,"\n"],[-1,1283,"*"],[1,1285,"\n**"],[-1,1856,"1."],[-1,1865,"*"],[1,1866,"\n"],[-1,2243,"*"],[1,2245,"\n**"],[-1,2529,"1."],[-1,2538,"I"],[1,2539,"\n"],[-1,2552,"\r"],[1,2553,"\n"],[-1,2591,"\r"],[1,2592,"\n"],[-1,2631,"\r"],[1,2632,"\n"],[-1,2665,"\r"],[1,2666,"\n"],[1,2674,"@I"],[-1,4212,"··"],[1,4214,""]],[561,561],[4214,4214]]],[1519702563384,[null,[[1,561,"源"],[-1,561,"\n"],[1,725,""],[-1,725,"源码"],[1,1133,"1."],[1,1140,"*"],[-1,1140,"\n"],[1,1283,"*"],[-1,1284,"\n**"],[1,1858,"1."],[1,1865,"*"],[-1,1865,"\n"],[1,2243,"*"],[-1,2244,"\n**"],[1,2531,"1."],[1,2538,"I"],[-1,2538,"\n"],[1,2552,"\r"],[-1,2552,"\n"],[1,2591,"\r"],[-1,2591,"\n"],[1,2631,"\r"],[-1,2631,"\n"],[1,2665,"\r"],[-1,2665,"\n"],[-1,2674,"@I"],[1,4214,"··"],[-1,4214,""]],[4214,4214],[561,561]]],[1519702552478,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,2351,"**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")"],[-1,2552,"\r"],[-1,2591,"\r"],[-1,2631,"\r"],[-1,2665,"\r"]],[2351,2529],[2351,2351]]],[1519702553980,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,2352,"\n"]],[2351,2351],[2351,2351]]],[1519702554383,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,2351,"\n"]],[2351,2351],[2351,2351]]],[1519702558727,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,374,"**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n"]],[373,553],[373,373]]],[1519702562462,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,773,"**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n"]],[772,952],[772,772]]],[1519702565600,[null,[[-1,381,"源"],[1,382,"\n"],[1,545,"源码"],[-1,551,""],[-1,771,"**"],[-1,780,"*"],[1,781,"\n"],[-1,923,"*\n"],[1,925,"\n\n**"],[-1,1496,"1."],[-1,1505,"*"],[1,1506,"\n"],[-1,1883,"*\n"],[1,1885,"\n\n**"],[-1,1989,"**"],[-1,1998,"I"],[1,1999,"\n"],[1,2130,"@I"],[-1,2156,""],[1,3654,""],[-1,3668,"··"]],[381,381],[3668,3668]]],[1519702565600,[null,[[1,381,"源"],[-1,381,"\n"],[-1,545,"源码"],[1,553,""],[1,773,"**"],[1,780,"*"],[-1,780,"\n"],[1,923,"*\n"],[-1,923,"\n\n**"],[1,1498,"1."],[1,1505,"*"],[-1,1505,"\n"],[1,1883,"*\n"],[-1,1883,"\n\n**"],[1,1991,"**"],[1,1998,"I"],[-1,1998,"\n"],[-1,2130,"@I"],[1,2158,""],[-1,3656,""],[1,3670,"··"]],[3668,3668],[381,381]]],[1519702564984,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,924,"\n"]],[923,923],[923,923]]],[1519702569588,[null,[[-1,381,"源"],[1,382,"\n"],[1,545,"源码"],[-1,551,""],[-1,771,"**"],[-1,780,"*"],[1,781,"\n"],[1,923,"\n*"],[-1,1495,"1."],[-1,1504,"*"],[1,1505,"\n"],[-1,1882,"*\n"],[1,1884,"\n\n**"],[-1,1988,"**"],[-1,1997,"I"],[1,1998,"\n"],[1,2129,"@I"],[-1,2155,""],[1,3653,""],[-1,3667,"··"]],[381,381],[3667,3667]]],[1519702569588,[null,[[1,381,"源"],[-1,381,"\n"],[-1,545,"源码"],[1,553,""],[1,773,"**"],[1,780,"*"],[-1,780,"\n"],[-1,923,"\n*"],[1,1497,"1."],[1,1504,"*"],[-1,1504,"\n"],[1,1882,"*\n"],[-1,1882,"\n\n**"],[1,1990,"**"],[1,1997,"I"],[-1,1997,"\n"],[-1,2129,"@I"],[1,2157,""],[-1,3655,""],[1,3669,"··"]],[3667,3667],[381,381]]],[1519702568273,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,1317,"**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n"]],[1316,1495],[1316,1316]]],[1519702568779,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,1317,"\n"]],[1316,1316],[1315,1315]]],[1519702590330,[null,[[-1,381,"源"],[1,382,"\n"],[1,545,"源码"],[-1,551,""],[-1,771,"**"],[-1,780,"*"],[1,781,"\n"],[1,923,"\n*"],[-1,1315,"**"],[-1,1324,"*"],[1,1325,"\n"],[-1,1702,"*\n"],[1,1704,"\n\n**"],[-1,1808,"**"],[-1,1817,"I"],[1,1818,"\n"],[1,1949,"@I"],[-1,1975,""],[1,3473,""],[-1,3487,"··"]],[381,381],[3487,3487]]],[1519702590330,[null,[[1,381,"源"],[-1,381,"\n"],[-1,545,"源码"],[1,553,""],[1,773,"**"],[1,780,"*"],[-1,780,"\n"],[-1,923,"\n*"],[1,1317,"**"],[1,1324,"*"],[-1,1324,"\n"],[1,1702,"*\n"],[-1,1702,"\n\n**"],[1,1810,"**"],[1,1817,"I"],[-1,1817,"\n"],[-1,1949,"@I"],[1,1977,""],[-1,3475,""],[1,3489,"··"]],[3487,3487],[381,381]]],[1519702583078,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,1978,"**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Inherited {  \n5.  }  \n\n"]],[1978,2156],[1978,1978]]],[1519702583412,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,1979,"\n"]],[1978,1978],[1977,1977]]],[1519702585582,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,1977,"```java"]],[1977,1977],[1984,1984]]],[1519702585799,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,1986,"\n"]],[1984,1984],[1985,1985]]],[1519702586889,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,1985,"```"]],[1985,1985],[1988,1988]]],[1519702587828,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,1985,"\n"]],[1985,1985],[1986,1986]]],[1519702588570,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,1985,"1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Inherited {  \n5.  }"]],[1985,1985],[2129,2129]]],[1519702589251,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,1985,"1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Inherited {  \n5.  }"]],[2129,2129],[1985,1985]]],[1519702589837,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,1985,"@Documented  \r\n@Retention(RetentionPolicy.RUNTIME)  \r\n@Target(ElementType.ANNOTATION_TYPE)  \r\npublic @interface Inherited {  \r\n}  "]],[1985,1985],[2115,2115]]],[1519702592026,[null,[[-1,381,"源"],[1,382,"\n"],[-1,545,""],[1,545,"源码"],[-1,771,"**"],[-1,780,"*"],[1,781,"\n"],[-1,923,""],[1,923,"\n*"],[-1,1315,"**"],[-1,1324,"*"],[1,1325,"\n"],[-1,1702,"*"],[1,1704,"\n**"],[-1,1808,"**"],[-1,1817,"I"],[1,1818,"\n"],[1,1949,"@I"],[-1,1975,"\n*"],[-1,1984,"*"],[1,1985,"\n"],[-1,1998,"\r"],[1,1999,"\n"],[-1,2037,"\r"],[1,2038,"\n"],[-1,2077,"\r"],[1,2078,"\n"],[-1,2110,"\r"],[1,2111,"\n"],[-1,2119,"@\n"],[1,2121,"\n\n@R"],[-1,3302,"··"],[1,3304,""]],[381,381],[3304,3304]]],[1519702592026,[null,[[1,381,"源"],[-1,381,"\n"],[1,545,""],[-1,545,"源码"],[1,773,"**"],[1,780,"*"],[-1,780,"\n"],[1,923,""],[-1,923,"\n*"],[1,1317,"**"],[1,1324,"*"],[-1,1324,"\n"],[1,1702,"*"],[-1,1703,"\n**"],[1,1810,"**"],[1,1817,"I"],[-1,1817,"\n"],[-1,1949,"@I"],[1,1977,"\n*"],[1,1984,"*"],[-1,1984,"\n"],[1,1998,"\r"],[-1,1998,"\n"],[1,2037,"\r"],[-1,2037,"\n"],[1,2077,"\r"],[-1,2077,"\n"],[1,2110,"\r"],[-1,2110,"\n"],[1,2119,"@\n"],[-1,2119,"\n\n@R"],[1,3304,"··"],[-1,3304,""]],[3304,3304],[381,381]]],[1519702591304,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,1998,"\r"],[-1,2037,"\r"],[-1,2077,"\r"],[-1,2110,"\r"],[-1,2119,"\n"]],[2115,2115],[2115,2115]]],[1519702596240,[null,[[-1,381,"源"],[1,382,"\n"],[1,545,"源码"],[-1,551,""],[-1,771,"**"],[-1,780,"*"],[1,781,"\n"],[1,923,"\n*"],[-1,1315,"**"],[-1,1324,"*"],[1,1325,"\n"],[-1,1702,"*\n"],[1,1704,"\n\n**"],[-1,1808,"**"],[-1,1817,"I"],[1,1818,"\n"],[1,1949,"@I"],[-1,1975,"\n*"],[-1,1984,"*"],[1,1985,"\n"],[1,2116,"@R"],[-1,2186,""],[1,3283,""],[-1,3297,"··"]],[381,381],[3297,3297]]],[1519702596240,[null,[[1,381,"源"],[-1,381,"\n"],[-1,545,"源码"],[1,553,""],[1,773,"**"],[1,780,"*"],[-1,780,"\n"],[-1,923,"\n*"],[1,1317,"**"],[1,1324,"*"],[-1,1324,"\n"],[1,1702,"*\n"],[-1,1702,"\n\n**"],[1,1810,"**"],[1,1817,"I"],[-1,1817,"\n"],[-1,1949,"@I"],[1,1977,"\n*"],[1,1984,"*"],[-1,1984,"\n"],[-1,2116,"@R"],[1,2188,""],[-1,3285,""],[1,3299,"··"]],[3297,3297],[381,381]]],[1519702594993,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,2189,"**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n"]],[2188,2367],[2188,2188]]],[1519702595797,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,2189,"\n"]],[2188,2188],[2188,2188]]],[1519702606510,[null,[[-1,381,"源"],[1,382,"\n"],[-1,545,""],[1,545,"源码"],[-1,771,"**"],[-1,780,"*"],[1,781,"\n"],[-1,923,""],[1,923,"\n*"],[-1,1315,"**"],[-1,1324,"*"],[1,1325,"\n"],[-1,1702,"*"],[1,1704,"\n**"],[-1,1808,"**"],[-1,1817,"I"],[1,1818,"\n"],[1,1949,"@I"],[-1,1975,"\n*"],[-1,1984,"*"],[1,1985,"\n"],[1,2116,"@R"],[-1,2187,"**"],[1,2189,"1."],[-1,3117,"··"],[1,3119,""]],[381,381],[3119,3119]]],[1519702606510,[null,[[1,381,"源"],[-1,381,"\n"],[1,545,""],[-1,545,"源码"],[1,773,"**"],[1,780,"*"],[-1,780,"\n"],[1,923,""],[-1,923,"\n*"],[1,1317,"**"],[1,1324,"*"],[-1,1324,"\n"],[1,1702,"*"],[-1,1703,"\n**"],[1,1810,"**"],[1,1817,"I"],[-1,1817,"\n"],[-1,1949,"@I"],[1,1977,"\n*"],[1,1984,"*"],[-1,1984,"\n"],[-1,2116,"@R"],[1,2189,"**"],[-1,2189,"1."],[1,3119,"··"],[-1,3119,""]],[3119,3119],[381,381]]],[1519702603353,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,2189,"1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Retention {  \n5.  RetentionPolicy value();  \n6.  }  "],[1,2366,"```java"]],[2189,2366],[2196,2196]]],[1519702603541,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,2198,"\n"]],[2196,2196],[2197,2197]]],[1519702604245,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,2197,"```"]],[2197,2197],[2200,2200]]],[1519702605155,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,2197,"\n"]],[2197,2197],[2198,2198]]],[1519702606045,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,2197,"@Documented  \r\n@Retention(RetentionPolicy.RUNTIME)  \r\n@Target(ElementType.ANNOTATION_TYPE)  \r\npublic @interface Retention {  \r\n    RetentionPolicy value();  \r\n}  "]],[2197,2197],[2359,2359]]],[1519702608639,[null,[[-1,381,"源"],[1,382,"\n"],[-1,545,""],[1,545,"源码"],[-1,771,"**"],[-1,780,"*"],[1,781,"\n"],[-1,923,""],[1,923,"\n*"],[-1,1315,"**"],[-1,1324,"*"],[1,1325,"\n"],[-1,1702,"*"],[1,1704,"\n**"],[-1,1808,"**"],[-1,1817,"I"],[1,1818,"\n"],[1,1949,"@I"],[-1,1975,"\n*"],[-1,1984,"*"],[1,1985,"\n"],[1,2116,"@R"],[-1,2187,"**"],[-1,2196,"@"],[1,2197,"\n"],[-1,2210,"\r"],[1,2211,"\n"],[-1,2249,"\r"],[1,2250,"\n"],[-1,2289,"\r"],[1,2290,"\n"],[-1,2322,"\r"],[1,2323,"\n"],[-1,2354,"\r"],[1,2355,"\n"],[-1,2363,"T\n"],[1,2365,"\n\n@T"],[-1,3114,"··"],[1,3116,""]],[381,381],[3116,3116]]],[1519702608639,[null,[[1,381,"源"],[-1,381,"\n"],[1,545,""],[-1,545,"源码"],[1,773,"**"],[1,780,"*"],[-1,780,"\n"],[1,923,""],[-1,923,"\n*"],[1,1317,"**"],[1,1324,"*"],[-1,1324,"\n"],[1,1702,"*"],[-1,1703,"\n**"],[1,1810,"**"],[1,1817,"I"],[-1,1817,"\n"],[-1,1949,"@I"],[1,1977,"\n*"],[1,1984,"*"],[-1,1984,"\n"],[-1,2116,"@R"],[1,2189,"**"],[1,2196,"@"],[-1,2196,"\n"],[1,2210,"\r"],[-1,2210,"\n"],[1,2249,"\r"],[-1,2249,"\n"],[1,2289,"\r"],[-1,2289,"\n"],[1,2322,"\r"],[-1,2322,"\n"],[1,2354,"\r"],[-1,2354,"\n"],[1,2363,"T\n"],[-1,2363,"\n\n@T"],[1,3116,"··"],[-1,3116,""]],[3116,3116],[381,381]]],[1519702607807,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,2210,"\r"],[-1,2249,"\r"],[-1,2289,"\r"],[-1,2322,"\r"],[-1,2354,"\r"],[-1,2363,"\n"]],[2359,2359],[2358,2358]]],[1519702612479,[null,[[-1,381,"源"],[1,382,"\n"],[-1,545,""],[1,545,"源码"],[-1,771,"**"],[-1,780,"*"],[1,781,"\n"],[-1,923,""],[1,923,"\n*"],[-1,1315,"**"],[-1,1324,"*"],[1,1325,"\n"],[-1,1702,"*"],[1,1704,"\n**"],[-1,1808,"**"],[-1,1817,"I"],[1,1818,"\n"],[1,1949,"@I"],[-1,1975,"\n*"],[-1,1984,"*"],[1,1985,"\n"],[1,2116,"@R"],[-1,2187,"**"],[-1,2196,"@"],[1,2197,"\n"],[-1,2359,""],[1,2359,"@T"],[-1,3108,"··"],[1,3110,""]],[381,381],[3110,3110]]],[1519702612479,[null,[[1,381,"源"],[-1,381,"\n"],[1,545,""],[-1,545,"源码"],[1,773,"**"],[1,780,"*"],[-1,780,"\n"],[1,923,""],[-1,923,"\n*"],[1,1317,"**"],[1,1324,"*"],[-1,1324,"\n"],[1,1702,"*"],[-1,1703,"\n**"],[1,1810,"**"],[1,1817,"I"],[-1,1817,"\n"],[-1,1949,"@I"],[1,1977,"\n*"],[1,1984,"*"],[-1,1984,"\n"],[-1,2116,"@R"],[1,2189,"**"],[1,2196,"@"],[-1,2196,"\n"],[1,2359,""],[-1,2359,"@T"],[1,3110,"··"],[-1,3110,""]],[3110,3110],[381,381]]],[1519702611587,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,2381,"**[java]** [view plain](http://blog.csdn.net/github_35180164/article/details/52107204# \"view plain\") [copy](http://blog.csdn.net/github_35180164/article/details/52107204# \"copy\")\n\n"]],[2380,2560],[2380,2380]]],[1519702625276,[null,[[-1,381,"源"],[1,382,"\n"],[-1,545,""],[1,545,"源码"],[-1,771,"**"],[-1,780,"*"],[1,781,"\n"],[-1,923,""],[1,923,"\n*"],[-1,1315,"**"],[-1,1324,"*"],[1,1325,"\n"],[-1,1702,"*"],[1,1704,"\n**"],[-1,1808,"**"],[-1,1817,"I"],[1,1818,"\n"],[1,1949,"@I"],[-1,1975,"\n*"],[-1,1984,"*"],[1,1985,"\n"],[1,2116,"@R"],[-1,2187,"**"],[-1,2196,"@"],[1,2197,"\n"],[1,2359,"@T"],[-1,2379,"**"],[1,2381,"1."],[-1,2928,"··"],[1,2930,""]],[381,381],[2930,2930]]],[1519702625276,[null,[[1,381,"源"],[-1,381,"\n"],[1,545,""],[-1,545,"源码"],[1,773,"**"],[1,780,"*"],[-1,780,"\n"],[1,923,""],[-1,923,"\n*"],[1,1317,"**"],[1,1324,"*"],[-1,1324,"\n"],[1,1702,"*"],[-1,1703,"\n**"],[1,1810,"**"],[1,1817,"I"],[-1,1817,"\n"],[-1,1949,"@I"],[1,1977,"\n*"],[1,1984,"*"],[-1,1984,"\n"],[-1,2116,"@R"],[1,2189,"**"],[1,2196,"@"],[-1,2196,"\n"],[-1,2359,"@T"],[1,2381,"**"],[-1,2381,"1."],[1,2930,"··"],[-1,2930,""]],[2930,2930],[381,381]]],[1519702621771,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,2380,"\n1.  @Documented  \n2.  @Retention(RetentionPolicy.RUNTIME)  \n3.  @Target(ElementType.ANNOTATION_TYPE)  \n4.  public @interface Target {  \n5.  ElementType[] value();  \n6.  }  \n\n8.  // ElementType取值  \n9.  public enum ElementType {  \n10.  /** 类、接口（包括注解类型）或枚举 */  \n11.  TYPE,  \n12.  /** field属性，也包括enum常量使用的注解 */  \n13.  FIELD,  \n14.  /** 方法 */  \n15.  METHOD,  \n16.  /** 参数 */  \n17.  PARAMETER,  \n18.  /** 构造函数 */  \n19.  CONSTRUCTOR,  \n20.  /** 局部变量 */  \n21.  LOCAL_VARIABLE,  \n22.  /** 注解上使用的元注解 */  \n23.  ANNOTATION_TYPE,  \n24.  /** 包 */  \n25.  PACKAGE  \n26.  }"],[1,2937,"```java"]],[2380,2937],[2387,2387]]],[1519702621983,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,2387,"\n\n"]],[2387,2387],[2388,2388]]],[1519702622788,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,2388,"\n"],[1,2389,"```"]],[2388,2388],[2391,2391]]],[1519702623668,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,2388,"\n"]],[2388,2388],[2389,2389]]],[1519702624726,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,2388,"@Documented  \r\n@Retention(RetentionPolicy.RUNTIME)  \r\n@Target(ElementType.ANNOTATION_TYPE)  \r\npublic @interface Target {  \r\n    ElementType[] value();  \r\n}  \r\n  \r\n// ElementType取值  \r\npublic enum ElementType {  \r\n    /** 类、接口（包括注解类型）或枚举 */  \r\n    TYPE,  \r\n    /** field属性，也包括enum常量使用的注解 */  \r\n    FIELD,  \r\n    /** 方法 */  \r\n    METHOD,  \r\n    /** 参数 */  \r\n    PARAMETER,  \r\n    /** 构造函数 */  \r\n    CONSTRUCTOR,  \r\n    /** 局部变量 */  \r\n    LOCAL_VARIABLE,  \r\n    /** 注解上使用的元注解 */  \r\n    ANNOTATION_TYPE,  \r\n    /** 包 */  \r\n    PACKAGE  \r\n}  "]],[2388,2388],[2924,2924]]],[1519702647383,[null,[[-1,381,"源"],[1,382,"\n"],[-1,545,""],[1,545,"源码"],[-1,771,"**"],[-1,780,"*"],[1,781,"\n"],[-1,923,""],[1,923,"\n*"],[-1,1315,"**"],[-1,1324,"*"],[1,1325,"\n"],[-1,1702,"*"],[1,1704,"\n**"],[-1,1808,"**"],[-1,1817,"I"],[1,1818,"\n"],[1,1949,"@I"],[-1,1975,"\n*"],[-1,1984,"*"],[1,1985,"\n"],[1,2116,"@R"],[-1,2187,"**"],[-1,2196,"@"],[1,2197,"\n"],[1,2359,"@T"],[-1,2378,"\n*"],[-1,2401,"\r"],[1,2402,"\n"],[-1,2440,"\r"],[1,2441,"\n"],[-1,2480,"\r"],[1,2481,"\n"],[-1,2510,"\r"],[1,2511,"\n"],[-1,2540,"\r"],[1,2541,"\n"],[-1,2545,"\r\n  \r"],[1,2550,"\n\n  \n"],[-1,2569,"\r"],[1,2570,"\n"],[-1,2598,"\r"],[1,2599,"\n"],[-1,2628,"\r"],[1,2629,"\n"],[-1,2641,"\r"],[1,2642,"\n"],[-1,2678,"\r"],[1,2679,"\n"],[-1,2692,"\r"],[1,2693,"\n"],[-1,2709,"\r"],[1,2710,"\n"],[-1,2724,"\r"],[1,2725,"\n"],[-1,2741,"\r"],[1,2742,"\n"],[-1,2759,"\r"],[1,2760,"\n"],[-1,2778,"\r"],[1,2779,"\n"],[-1,2798,"\r"],[1,2799,"\n"],[-1,2817,"\r"],[1,2818,"\n"],[-1,2840,"\r"],[1,2841,"\n"],[-1,2864,"\r"],[1,2865,"\n"],[-1,2888,"\r"],[1,2889,"\n"],[-1,2904,"\r"],[1,2905,"\n"],[-1,2919,"\r"],[1,2920,"\n"]],[381,381],[2921,2921]]],[1519702647383,[null,[[1,381,"源"],[-1,381,"\n"],[1,545,""],[-1,545,"源码"],[1,773,"**"],[1,780,"*"],[-1,780,"\n"],[1,923,""],[-1,923,"\n*"],[1,1317,"**"],[1,1324,"*"],[-1,1324,"\n"],[1,1702,"*"],[-1,1703,"\n**"],[1,1810,"**"],[1,1817,"I"],[-1,1817,"\n"],[-1,1949,"@I"],[1,1977,"\n*"],[1,1984,"*"],[-1,1984,"\n"],[-1,2116,"@R"],[1,2189,"**"],[1,2196,"@"],[-1,2196,"\n"],[-1,2359,"@T"],[1,2380,"\n*"],[1,2401,"\r"],[-1,2401,"\n"],[1,2440,"\r"],[-1,2440,"\n"],[1,2480,"\r"],[-1,2480,"\n"],[1,2510,"\r"],[-1,2510,"\n"],[1,2540,"\r"],[-1,2540,"\n"],[1,2545,"\r\n  \r"],[-1,2545,"\n\n  \n"],[1,2569,"\r"],[-1,2569,"\n"],[1,2598,"\r"],[-1,2598,"\n"],[1,2628,"\r"],[-1,2628,"\n"],[1,2641,"\r"],[-1,2641,"\n"],[1,2678,"\r"],[-1,2678,"\n"],[1,2692,"\r"],[-1,2692,"\n"],[1,2709,"\r"],[-1,2709,"\n"],[1,2724,"\r"],[-1,2724,"\n"],[1,2741,"\r"],[-1,2741,"\n"],[1,2759,"\r"],[-1,2759,"\n"],[1,2778,"\r"],[-1,2778,"\n"],[1,2798,"\r"],[-1,2798,"\n"],[1,2817,"\r"],[-1,2817,"\n"],[1,2840,"\r"],[-1,2840,"\n"],[1,2864,"\r"],[-1,2864,"\n"],[1,2888,"\r"],[-1,2888,"\n"],[1,2904,"\r"],[-1,2904,"\n"],[1,2919,"\r"],[-1,2919,"\n"]],[2921,2921],[381,381]]],[1519702643807,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,2369,"z"],[-1,2401,"\r"],[-1,2440,"\r"],[-1,2480,"\r"],[-1,2510,"\r"],[-1,2540,"\r"],[-1,2545,"\r"],[-1,2549,"\r"],[-1,2569,"\r"],[-1,2598,"\r"],[-1,2628,"\r"],[-1,2641,"\r"],[-1,2678,"\r"],[-1,2692,"\r"],[-1,2709,"\r"],[-1,2724,"\r"],[-1,2741,"\r"],[-1,2759,"\r"],[-1,2778,"\r"],[-1,2798,"\r"],[-1,2817,"\r"],[-1,2840,"\r"],[-1,2864,"\r"],[-1,2888,"\r"],[-1,2904,"\r"],[-1,2919,"\r"]],[2369,2369],[2370,2370]]],[1519702643918,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,2370,"i"]],[2370,2370],[2371,2371]]],[1519702644539,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,2369,"zi"]],[2371,2371],[2369,2369]]],[1519702645923,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,2369,"自定义"]],[2369,2369],[2372,2372]]],[1519702674576,[null,[[-1,381,"源"],[1,382,"\n"],[-1,545,""],[1,545,"源码"],[-1,771,"**"],[-1,780,"*"],[1,781,"\n"],[-1,923,""],[1,923,"\n*"],[-1,1315,"**"],[-1,1324,"*"],[1,1325,"\n"],[-1,1702,"*"],[1,1704,"\n**"],[-1,1808,"**"],[-1,1817,"I"],[1,1818,"\n"],[1,1949,"@I"],[-1,1975,"\n*"],[-1,1984,"*"],[1,1985,"\n"],[1,2116,"@R"],[-1,2187,"**"],[-1,2196,"@"],[1,2197,"\n"],[1,2359,"@T"],[-1,2367,"注解"],[1,2372,"注解"],[-1,2381,"\n*"]],[381,381],[2381,2381]]],[1519702674576,[null,[[1,381,"源"],[-1,381,"\n"],[1,545,""],[-1,545,"源码"],[1,773,"**"],[1,780,"*"],[-1,780,"\n"],[1,923,""],[-1,923,"\n*"],[1,1317,"**"],[1,1324,"*"],[-1,1324,"\n"],[1,1702,"*"],[-1,1703,"\n**"],[1,1810,"**"],[1,1817,"I"],[-1,1817,"\n"],[-1,1949,"@I"],[1,1977,"\n*"],[1,1984,"*"],[-1,1984,"\n"],[-1,2116,"@R"],[1,2189,"**"],[1,2196,"@"],[-1,2196,"\n"],[-1,2359,"@T"],[1,2369,"注解"],[-1,2372,"注解"],[1,2383,"\n*"]],[2381,2381],[381,381]]],[1519702663671,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,2380,"，也就是说你写出来的这个疏解"]],[2379,2379],[2393,2393]]],[1519702664173,["xiaoyulaoshi@DESKTOP-LAD9940",[[-1,2391,"疏解"]],[2393,2393],[2391,2391]]],[1519702673988,["xiaoyulaoshi@DESKTOP-LAD9940",[[1,2391,"注解要作用在什么位置上"]],[2391,2391],[2402,2402]]]]]]}